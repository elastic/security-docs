[[endpoint-management-req]]
= {elastic-defend} feature privileges

You can create user roles and define privileges to manage feature access in {kib}. This allows you to use the principle of least privilege while managing access to {elastic-defend}'s features.

Roles and privileges are configured in *Stack Management* -> *Roles* in {kib}. For more details on using this UI, refer to {kibana-ref}/kibana-role-management.html#adding_kibana_privileges[{kib} privileges]. 

NOTE: {elastic-defend}'s feature privileges must be assigned to *All Spaces*. You can't assign them to an individual {kib} space. 

[role="screenshot"]
image::images/endpoint-privileges.png[Configuring privileges in Kibana,75%]

To grant access, select *All* for the *Security* feature in the *{kib} privileges* configuration UI, then turn on the *Customize sub-feature privileges* switch. For each of the following sub-feature privileges, select the type of access you want to allow:

* *All*: Users have full access to the feature, which includes performing all available actions and managing configuration.
* *Read*: Users can view the feature, but can't perform any actions or manage configuration. (Some features don't have this privilege.)
* *None*: Users can't access or view the feature.

[cols="1,1",width="100%"]
|==============================================
| *Endpoint List*
| Access the <<admin-page-ov,Endpoints>> page, which lists all hosts running {elastic-defend}, and associated integration details.

| *Trusted Applications*
| Access the <<trusted-apps-ov,Trusted Applications>> page to remediate conflicts with other software, such as antivirus or endpoint security applications.

| *Host Isolation Exceptions*
| Access the <<host-isolation-exceptions,Host Isolation Exceptions>> page to add specific IP addresses that isolated hosts can still communicate with.

| *Blocklist*
| Access the <<blocklist,Blocklist>> page to prevent specified applications from running on hosts, extending the list of processes that {elastic-defend} considers malicious.

| *Event Filters*
| Access the <<event-filters,Event Filters>> page to filter out endpoint events that you don't want stored in {es}.

| *{elastic-defend} Policy Management*
| Access the <<policies-page-ov,Policies>> page and {elastic-defend} integration policies to configure protections, event collection, and advanced policy features.

| *Response Actions History* 
| Access the <<response-actions-history,response actions history>> for endpoints.

| *Host Isolation* 
| Allow users to <<host-isolation-ov,isolate and release hosts>>.

| *Process Operations* 
| Perform host process-related <<response-actions,response actions>>, including `processes`, `kill-process`, and `suspend-process`.

| *File Operations*
| Perform file-related <<response-actions,response actions>> in the response console.
|==============================================

[discrete]
== Upgrade considerations

After upgrading from {elastic-sec} 8.6 or earlier, existing user roles will be assigned *None* by default for any new endpoint management feature privileges, and you'll need to explicitly assign them. However, many features previously required the built-in `superuser` role, and users who previously had this role will still have it after upgrading.

You'll probably want to replace the broadly permissive `superuser` role with more focused feature-based privileges to ensure that users have access to only the specific features that they need. Refer to {kibana-ref}/kibana-role-management.html[{kib} role management] for more details on assigning roles and privileges.

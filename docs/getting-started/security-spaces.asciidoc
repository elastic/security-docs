[[security-spaces]]
= Spaces and {elastic-sec}

{elastic-sec} supports the organization of your security operations into
logical instances with the {kibana-ref}/xpack-spaces.html[Kibana Spaces]
feature. Each Kibana space represents a separate logical instance of
{elastic-sec} in which detection rules, rule exceptions, value lists,
alerts, timelines, cases, and Kibana advanced settings are private to the
space, accessible only by users assigned to roles that have privileges to
access the space. For details about configuring privileges for
Elasticsearch and Kibana, see <<detections-permissions-section>> .

For example, if you create a `SOC_prod` space in which you load and
activate all the Elastic prebuilt Detection Rules, these rules and any
Alerts they generate, will be accessible only when visiting the Security
Solution in the `SOC_prod` space. If you then create a new `SOC_dev` space,
you'll notice that no Detection Rules or Alerts are present. Any rules
subsequently loaded or created here will be private to the `SOC_dev` space,
and will run independently of those in the `SOC_prod` space.

Special Note about Alerts: By default, alerts created by detection rules
are stored in Elasticsearch indices under the `.siem-signals-<spacename>-*`
index pattern, and may be accessed by any user assigned to a role with
privileges to access those Elasticsearch indices. In our example above, any
user with Elasticsearch privileges to access `.siem-signals-SOC_prod-*`
will be able to view `SOC_prod` alerts from within Elasticsearch and other
Kibana apps such as Discover and Lens. To ensure that Alert data remains
private to the space in which it was created, ensure that the roles to
which your security solution users are assigned include Elasticsearch
privileges that limit their access to only alerts within their space alerts
index.
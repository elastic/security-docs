[[install-endpoint]]
[role="xpack"]
= Configure and install Elastic Endpoint Integration (beta)

beta[]


Like other Elastic integrations, Elastic Endpoint Security can be integrated into the Elastic Agent through {ingest-guide}/ingest-management-overview.html[Ingest Manager]. Upon configuration, the integration allows the Elastic Agent to monitor for events on your host and send data to the Elastic Security app.

NOTE: Configuring the Endpoint Integration on the Elastic Agent requires that the user have permission to use Ingest Manager in Kibana.

[discrete]
[[security-before-you-begin]]
== Before you begin

If you're using the Elastic Agent on macOS Mojave (10.14) or later, ensure that you have enabled <<sensor-full-disk-access,Full Disk Access>>. Lastly, review the Elastic Security system requirements.

[discrete]
[[add-security-integration]]
== Add Elastic Security integration

1. In Kibana, select **Security** > **Administration**. If this is not your first time using Elastic Security, select **Ingest Manager** > **Integrations** and search for "Elastic Endpoint Security".
+
[role="screenshot"]
image::images/install-endpoint/security-integration.png[]
+
2. On the Administration page of the security app or the Elastic Endpoint Security integration page in Ingest Manager, select **Add Endpoint Security**. The integration configuration page appears.
3. Select a configuration for the Elastic Agent. You can use either the **Default config**, or adds security integration to a custom or existing configuration. For more details on Elastic Agent configuration settings, see {ingest-guide}/elastic-agent-configuration.html[Configuration settings].
4. Configure the Elastic Endpoint Security integration with a name and optional description. When done configuring, select **Save integration**. Kibana redirects you back to the administration section of the security app.
+
[role="screenshot"]
image::images/install-endpoint/add-elastic-endpoint-security.png[]
+
5. On the Enable Elastic Endpoint Security on your Agent's page, select the name of your new integration. To enroll your Agents with Endpoint Security, select **Enroll Agent**.
6. Kibana redirects you back to Ingest manager to add the Elastic Agent to your host.

[discrete]
[[enroll-security-agent]]
== Configure and enroll Elastic Agent

When integrating with the Elastic Agent, Elastic Endpoint Security **requires** enrollment through Fleet to enable the integration.

IMPORTANT: Elastic Endpoint Security cannot be integrated with an Elastic Agent in Standalone mode.

1. Go to Ingest Manager. Select **Overview** > **Add agent**.
+
[role="screenshot"]
image::images/install-endpoint/add-agent.png[]
+
2. In the Add agent pane of the Configurations section, download the Elastic Agent on your host's machine.
3. After the download is complete, select an agent configuration. The selected integrations should include **Elastic Endpoint Security**.
+
[role="screenshot"]
image::images/install-endpoint/endpoint-configuration.png[]
+
4. After the Elastic Agent is installed on your host machine, open a command-line interface, and navigate to your Agent's directory. Copy the commands from Ingest Manager for your OS to enroll and run the Agent.

After you have enrolled the Elastic Agent on your host, select **Continue**. The host now appears on the Hosts view page inside the Elastic Security app.

To unenroll an agent from your host, see {ingest-guide}/unenroll-elastic-agent.html[Unenroll Elastic Agent].

[discrete]
[[enable-kernel-extension]]
== Enable Elastic Endpoint kernel

When running the Elastic agent with endpoint integrated on macOS, you might be prompted to approve a kernel extension from "Endgame, Inc". To approve the extension:

TIP: JAMF users can approve the Kernel the same way for the **Elastic Endgame** app.

1. Select **Open Security Preferences**. The **Security and Privacy** window opens.
+
[role="screenshot"]
image::images/install-endpoint/system-extension.png[]
+
2. Select the **Lock** icon at the bottom left of the window to make changes to your security settings.
+
[role="screenshot"]
image::images/install-endpoint/unlock-security-panel.png[]
+
3. Allow "Endgame, Inc" by selecting the **Allow** button.
+
[role="screenshot"]
image::images/install-endpoint/allow-endgame.png[]


If the prompt does not appear when trying to run the Elastic Agent:

1. Open a Terminal application.
2. Enter `kextload /Library/Extension/kendpoint.kext`. Prepend the command with `sudo` if necessary.
3. Confirm the kernel extension has loaded, enter `kextstat | grep co.elastic.kendpoint`.
4. You should receive and output similar to `149    0 0xffffff7f82e7b000 0x21000    0x21000    co.elastic.kendpoint (7.9.0) BD152A57-ABD3-370A-BBE8-D15A0FCBD19A <6 5 2 1>`.

[discrete]
[[configure-malware]]
== Configure malware protection settings

After you have installed the agent, malware prevention is automatically enabled on protected hosts. If needed, you can configure malware protection settings to meet your company's security needs.

1. In the security app, select the **Admin** tab to view the Administration page. Remember that you must have admin permissions in {kib} to access this page.
2. From the **Integration** column, select the integration you want to configure. The Host Configuration page appears.
3. By default, the **Malware Protection Enabled** toggle is on. To disable malware protection, switch the toggle off. Malware protection levels are as follows:
* **Detect**: Detects malware on the host and generates an alert. When set to detect, the agent will **not** block malware. You must pay attention to and analyze any malware alerts that are generated.
* **Prevent** (Default): Detects malware on the host, blocks it from executing, and generates an alert.
4. Click **Save** to save changes to the integration.
5. On the dialog box that says, "Saving these changes will apply updates to number endpoints assigned to this agent policy," click **Save and Deploy changes**. If successful, a "Success" confirmation appears in the lower right corner.

[role="screenshot"]
image::images/install-endpoint/malware-protection.png[]

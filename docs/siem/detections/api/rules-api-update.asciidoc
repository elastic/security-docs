[[rules-api-update]]
=== Update rule

Updates an existing detection rule.

You can use `PUT` or `PATCH` methods to update rules, where:

* `PUT` replaces the original rule and deletes fields that are not specified.
* `PATCH` updates the specified fields.

==== Request URL

`PUT <kibana host>:<port>/api/detection_engine/rules`

`PATCH <kibana host>:<port>/api/detection_engine/rules`

==== Request body

A JSON object with:

* The `id` or `rule_id` field of the rule you want to update.
* The fields you want to modify.

IMPORTANT: If you call `PUT` to update a rule, all unspecified fields are
deleted. You cannot modify the `id` or `rule_id` values.

For `PATCH` calls, any of the fields can be modified, whereas for `PUT` calls,
some fields are required.

===== Fields required for `PUT` calls

[width="100%",options="header"]
|==============================================
|Name |Type |Description

|description |String |The rule's description.

|name |String |The rule's name.

|risk_score |Integer a|A numerical representation of the alert's severity from 
0 to 100, where:

* `0` - `21` represents low severity
* `22` - `47` represents medium severity
* `48` - `73` represents high severity
* `74` - `100` represents critical severity

|severity |String a|Severity level of alerts produced by the rule, which must 
be one of the following:

* `low`: Alerts that are of interest but generally not considered to be 
security incidents
* `medium`: Alerts that require investigation
* `high`: Alerts that require immediate investigation
* `critical`: Alerts that indicate it is highly likely a security incident has 
occurred

|type |String a|Data type on which the rule is based:

* `query`: query with or without additional filters.
* `saved_query`: saved search, identified in the `saved_id` field.
* `machine_learning`: rule based on a {ml} job's anomaly scores.
* `threshold`: rule based on the number of times a `query` matches the
specified field.

|==============================================

===== Field required for query and threshold rules `PUT` calls

[width="100%",options="header"]
|==============================================
|Name |Type |Description

|query |String a|{kibana-ref}/search.html[Query] used by the rule to create
alerts. Technically, this is not required and defaults to an empty string but
that's not very useful.

|==============================================

===== Field required for threshold rules `PUT` calls

[width="100%",options="header"]
|==============================================
|Name |Type |Description

|threshold |Object a|Defines the field and threshold value for when alerts
are generated, where:

* `field` (string, required): The field on which the threshold is applied. If
you specify an empty field (`""`), alerts are generated when the query returns
at least the number of results specified in the `value` field.
* `value` (integer, required): The threshold value from which an alert is
generated.

|==============================================

===== Field required for saved-query rules `PUT` calls

[width="100%",options="header"]
|==============================================
|Name |Type |Description

|saved_id |String |Kibana saved search used by the rule to create alerts.

|==============================================

===== Fields required for machine-learning rules `PUT` calls

[width="100%",options="header"]
|==============================================
|Name |Type |Description

|anomaly_threshold |Integer |Anomaly score threshold above which the rule
creates an alert. Valid values are from `0` to `100`.

|machine_learning_job_id |String |{ml-cap} job ID the rule monitors for
anomaly scores. 

|==============================================

===== Optional fields for all rule types

[width="100%",options="header"]
|==============================================
|Name |Type |Description

|actions |<<actions-object-schema, actions[]>> |Array defining the automated
actions (notifications) taken when alerts are generated.

|author |String[] |The rule's author.

|building_block_type |String |Determines if the rule acts as a building block.
By default, building-block alerts are not displayed in the UI. These rules are
used as a foundation for other rules that do generate alerts. Its value must be
`default`. For more information, see BEN - add link later.

|enabled |Boolean |Determines whether the rule is enabled. Defaults to `true`.

|false_positives |String[] |String array used to describe common reasons why 
the rule may issue false-positive alerts. Defaults to an empty array.

[[detection-rules-from]]
|from |String |Time from which data is analyzed each time the rule executes,
using a {ref}/common-options.html#date-math[date math range]. For example, 
`now-4200s` means the rule analyzes data from 70 minutes before its start 
time. Defaults to `now-6m` (analyzes data from 6 minutes before the start 
time).

|interval |String |Frequency of rule execution, using a
{ref}/common-options.html#date-math[date math range]. For example, `"1h"` 
means the rule runs every hour. Defaults to `5m` (5 minutes).

|license |String |The rule's license.

|max_signals |Integer |Maximum number of alerts the rule can create during a
single execution. Defaults to `100`.

|meta |Object |Placeholder for metadata about the rule.

|note |String |Notes to help investigate alerts produced by the rule.

|output_index |String |Index to which alerts created by the rule are saved. 
If unspecified alerts are saved to `.siem-signals-<space_name>` index, 
where `<space_name>` is the name of the {kib} space in which the rule exists.

|references |String[] |Array containing notes about or references to 
relevant information about the rule. Defaults to an empty array.

|tags |String[] |String array containing words and phrases to help categorize,
filter, and search rules. Defaults to an empty array.

|threat |<<threats-object-create, threat[]>> |Object containing attack 
information about the type of threat the rule monitors, see
{ecs-ref}/ecs-threat.html[ECS threat fields]. Defaults to an empty array.

|throttle |String a|Determines how often actions are taken:

* `no_actions`: Never
* `rule`: Every time new alerts are detected
* `1h`: Every hour
* `1d`: Every day
* `7d`: Every week

Required when `actions` are used to send notifications.

|version |Integer a|The rule's version number. If this is not provided, the 
rule's version number is incremented by 1.

`PATCH` calls enabling and disabling the rule do not increment its version
number.

|==============================================

===== Optional fields for query and threshold rules

[width="100%",options="header"]
|==============================================
|Name |Type |Description

|exceptions_list |Object[] a|Array of exception containers, which define
exceptions that prevent the rule from generating alerts even when its other
criteria are met. The object has these fields:

* `id` (string, required): List ID of the exception container.
* `namespace_type` (string required): Determines whether the exceptions are
valid in only the rule's {kib} space (`single`) or in all {kib} spaces
(`agnostic`). 
* `type` (string, required): The exception type, which must be either
a detection rule exception (`detection`) or an endpoint exception (`endpoint`).

BEN - add link later

|filters |Object[] |The {ref}/query-filter-context.html[query and filter 
context] array used to define the conditions for when alerts are created from 
events. Defaults to an empty array.

|index |String[] |Indices on which the rule functions. Defaults to the
Security Solution indices defined on the {kib} Advanced Settings page
(*Kibana* → *Stack Management* → *Advanced Settings* →
`securitySolution:defaultIndex`).

|language |String |Determines the query language, which must be
`kuery` or `lucene`. Defaults to `kuery`.

|risk_score_mapping |Object[] a|Overrides generated alerts' `risk_score` with
a value from the source event:

* `field` (string, required): Source event field used to override the default
`risk_score`. This field must be an integer.
* `operator` (string, required): Must be `equals`.
* `value`(string, required): Must be an empty string (`""`).

|rule_name_override |String |Sets which field in the source event is used to
populate the alert's `signal.rule.name` value (in the UI, this value is
displayed in the *Rule* column on the Detections page). When unspecified, the
rule's `name` value is used. The source field must be a string data type.

|severity_mapping |Object[] a|Overrides generated alerts' `severity` with
values from the source event:

* `field` (string, required): Source event field used to override the default
`severity`.
* `operator` (string, required): Must be `equals`.
* `severity` (string, required): Mapped severity value, must be `low`,
`medium`, `high`, or `critical`.
* `value`(string, required): Field value used to determine the `severity`.

|timestamp_override |String |Sets the time field used to query indices.
When unspecified, rules query the `@timestamp` field. The source field
must be an {es} date data type.

|==============================================

[[actions-object-schema-update]]
===== `actions` schema

These fields are required when calling `PUT` to modify the `actions` object:

[width="100%",options="header"]
|==============================================
|Name |Type |Description

|action_type_id |String a|The action type used for sending notifications, can
be:

* `.slack`
* `.email`
* `.pagerduty`
* `.webhook`

|group |String |Optionally groups actions by use cases. Use `default` for alert
notifications.

|id |String |The connector ID.

|params |Object a|Object containing the allowed connector fields, which varies according to the connector type:

* For Slack:
** `message` (string, required): The notification message.
* For email:
** `to`, `cc`, `bcc` (string): Email addresses to which the notifications are
sent. At least one field must have a value.
** `subject` (string, optional): Email subject line.
** `message` (string, required): Email body text.
* For Webhook:
** `body` (string, required): JSON payload.
* For PagerDuty:
** `severity` (string, required): Severity of on the alert notification, can
be: `Critical`, `Error`, `Warning` or `Info`.
** `eventAction` (string, required):  Event https://v2.developer.pagerduty.com/docs/events-api-v2#event-action[action type], which can be `trigger`,
`resolve`, or `acknowledge`.
** `dedupKey` (string, optional): Groups alert notifications with the same
PagerDuty alert.
** `timestamp` (DateTime, optional): https://v2.developer.pagerduty.com/v2/docs/types#datetime[ISO-8601 format timestamp].
** `component` (string, optional): Source machine component responsible for the
event, for example `security-solution`.
** `group` (string, optional): Enables logical grouping of service components.
** `source` (string, optional): The affected system. Defaults to the {kib}
saved object ID of the action. 
** `summary` (string, options): Summary of the event. Defaults to
`No summary provided`. Maximum length is 1024 characters.
** `class` (string, optional): Value indicating the class/type of the event.

|==============================================


[[threats-object-update]]
===== `threat` schema

These fields are required when calling `PUT` to modify the `threat` object:

[width="100%",options="header"]
|==============================================
|Name |Type |Description

|framework |String |Relevant attack framework.

|tactic |Object a|Object containing information on the attack type:

* `id` - string, required
* `name` - string, required
* `reference` - string, required

|technique |Object a|Object containing information on the attack 
technique:

* `id` - string, required
* `name` - string, required
* `reference` - string, required

|==============================================

NOTE: Only threats described using the MITRE ATT&CK^TM^ framework are displayed 
in the UI (*Security* -> *Detections* -> *Manage detection rules* -> <rule
name>).

===== Example request

Updates the `threat` object:

[source,console]
--------------------------------------------------
PATCH api/detection_engine/rules
{
  "rule_id": "process_started_by_ms_office_program_possible_payload",
  "threat": [
   {
      "framework": "MITRE ATT&CK",
      "tactic": {
         "id": "TA0001",
         "reference": "https://attack.mitre.org/tactics/TA0001",
         "name": "Initial Access"
      },
      "technique": [
         {
            "id": "T1193",
            "name": "Spearphishing Attachment",
            "reference": "https://attack.mitre.org/techniques/T1193"
         }
      ]
   }
  ]
}
--------------------------------------------------
// KIBANA

==== Response code

`200`:: 
    Indicates a successful call.
    
==== Response payload

The rule's updated JSON object, including the time the rule was updated and an 
incremented version number.

Example response:

[source,json]
--------------------------------------------------
{
  "created_at": "2020-01-05T09:56:11.805Z",
  "updated_at": "2020-01-05T09:59:59.129Z",
  "created_by": "elastic",
  "description": "Process started by MS Office program - possible payload",
  "enabled": false,
  "false_positives": [],
  "filters": [
    {
      "query": {
        "match": {
          "event.action": {
            "query": "Process Create (rule: ProcessCreate)",
            "type": "phrase"
          }
        }
      }
    }
  ],
  "from": "now-6m",
  "id": "4f228868-9928-47e4-9785-9a1a9b520c7f",
  "interval": "5m",
  "rule_id": "process_started_by_ms_office_program_possible_payload",
  "language": "kuery",
  "output_index": ".siem-signals-default",
  "max_signals": 100,
  "risk_score": 50,
  "name": "MS Office child process",
  "query": "process.parent.name:EXCEL.EXE or process.parent.name:MSPUB.EXE or process.parent.name:OUTLOOK.EXE or process.parent.name:POWERPNT.EXE or process.parent.name:VISIO.EXE or process.parent.name:WINWORD.EXE",
  "references": [],
  "severity": "low",
  "updated_by": "elastic",
  "tags": [
    "child process",
    "ms office"
  ],
  "type": "query",
  "threat": [
    {
      "framework": "MITRE ATT&CK",
      "tactic": {
        "id": "TA0001",
        "reference": "https://attack.mitre.org/tactics/TA0001",
        "name": "Initial Access"
      },
      "technique": [
        {
          "id": "T1193",
          "name": "Spearphishing Attachment",
          "reference": "https://attack.mitre.org/techniques/T1193"
        }
      ]
    }
  ],
  "version": 2
}
--------------------------------------------------
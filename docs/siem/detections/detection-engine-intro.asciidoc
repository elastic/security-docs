[[detection-engine-overview]]
[role="xpack"]

= Detections and Alerts (beta)

beta[]

The Detections page is used to create and manage detection rules, and view the
alerts these rules create. Detection rules periodically search indices (such as
`endgame-*` and `filebeat-*`) for suspicious source events, and detection
alerts are created when a rule's conditions are matched. When a detection alert
is created, its status is `Open`. To help track investigations, an alert's
status can be set as `Open`, `In progress`, or `Closed` (see
<<detection-alert-status>>).

The {es-sec-app} comes with <<prebuilt-rules, prebuilt detection rules>> that
search for suspicious activity on your network and hosts. For information on
how to use the prebuilt rules, see <<load-prebuilt-rules>>. Once the prebuilt
rules are loaded and running, <<tuning-detection-signals>>, Rule exceptions,
and Value lists explains how to modify the rules to reduce false positives and
get a better set of actionable alerts. In addition to loading and modifying
prebuilt rules, you can <<rules-ui-create, create your own rules from scratch>>.

There are two special prebuilt rules you need to know about:

* *Elastic Endpoint*: This rule automatically creates a detections alert from
all incoming Elastic Endpoint alerts. To receive Elastic Endpoint alerts, you
must install the Endpoint agent on your hosts (BEN: see xref).
+
NOTE: When you load the prebuilt rules, this is the only rule that is enabled
by default.

* *External Alerts*: This rule automatically creates a detections alert for all incoming third-party system alerts (for example, Suricata alerts).

If you want to be notified via external systems, such as Slack or email, when
detection alerts are created, you can use the {kib}
{kibana-ref}/alerting-getting-started.html[Alerting and Actions] framework.

NOTE: To use {kib} Alerting for detection alert notifications, you need the
https://www.elastic.co/subscriptions[appropriate license].

You can can create and manage detection rules and alerts via the UI or the
<<rule-api-overview, Detections API>>.

[IMPORTANT]
==============
To make sure you can access Detections and manage rules, see 
<<detections-permissions>>.
==============

[role="screenshot"]
image::detections-ui.png[]

[float]
[[det-engine-terminology]]
== Terminology

Detection rules::
Perform background tasks to detect suspicious activity. There are a few types of
rules:

* *Query rules*: Searches the defined indices and creates a detections alert
when a source event matches the rule's query.
* *{ml-cap} rules*: Create a detections alert when a {ml} job discovers an
anomaly score above a rule's defined threshold (see <<machine-learning>>).
* *Threshold rules*: Searches the defined indices and creates a detections alert
when the number of times the specified field's value meets the threshold during
a single execution. When there are multiple values that meet the threshold, an
alert is generated for each value.
+
For example, if the threshold `field` is `source.ip` and its `value` is `10`, an
alert is generated for every source IP address that appears in at least 10 of
the rule's search results.

Detection alerts::
Always refer to {es-sec} produced detections. Detection alerts are never
received from external systems. When a rule's conditions are met, the
{es-sec-app} writes a detection alert to an Elasticsearch `signals` index.
+
[NOTE]
==============
Detection alert indices are created for each {kib} space. The naming convention
is: `.siem-signals-<space name>`. For the default space, the signals index is
named `.siem-signals-default`.
==============

Alerts and events::
Always refer to data the {es-sec-app} receives from external systems, such as 
Suricata.

Actions::
Used to send notifications via other systems when a detections alert is
created, such as email, Slack, PagerDuty, and Webhook.

[float]
== Detection and external alerts

The Detections page displays all signals and alerts. To view detection alerts
created by a rule, you can:

* Filter for a specific rule in the KQL bar (for example,
`signal.rule.name :"SSH (Secure Shell) from the Internet"`).
* View detection alerts in the *Rule details* page (click
*Manage signal detection rules* -> rule name in the *All rules* table).

NOTE: KQL autocomplete for `.siem-signals-*` indices is available on the 
*Detections* and *Rule details* pages, and in Timeline when either `All` or
`Detection alerts` is selected. 

To view alerts from external data shippers, click *External alerts*.

[float]
[[detection-alert-status]]
=== Change an alert's status

You can set an alert's status to indicate whether it needs to be investigated
(`Open`), is under active investigation (`In progress`), or resolved
(`Closed`). By default, the Alerts table displays open signals. To view alerts
with other statuses, click *In progress* or *Closed*.

To change alert statuses, either:

* In the alert's row, click the *more options* icon, and then select the
required status (*Mark in progress*, *Close alert*, or *Open alert*).
* In the Alerts table, select all the alerts you want to change, and then select
*Take action* -> *Close selected*, *Open selected*, or *Mark in progress*.

[float]
[[signals-to-timelines]]
=== Investigate alerts in Timeline

To investigate an alert in Timeline, click the *Investigate in timeline*
icon.

If the rule that generated the alert uses a Timeline template, when you
investigate the alert in Timeline, the dropzone query values defined in the
template are replaced with their corresponding signal values.

// * `host.name`
// * `host.hostname`
// * `host.domain`
// * `host.id`
// * `host.ip`
// * `client.ip`
// * `destination.ip`
// * `server.ip`
// * `source.ip`
// * `network.community_id`
// * `user.name`
// * `process.name`

*Example*

The Timeline template used in the rule has this dropzone query:
`host.name: "Linux-LiverpoolFC"`. When alerts generated by the rule are
investigated in Timeline, the `host.name` value is replaced with the alert's
`host.name` value. If the alerts's `host.name` value is `Windows-ArsenalFC`,
the Timeline dropzone query is `host.name: "Windows-ArsenalFC"`.

NOTE: See BEN: xref for information on creating Timelines and Timeline
templates. For information on how to add timeline templates to rules, see
<<create-rule-ui>>.

[float]
[[alerts-to-resolver]]
=== Analyze alerts in Timeline resolver

BEN: Short explanation and link

[float]
[[detections-permissions]]
== Detections configuration and index privilege prerequisites

If you are using an *on-premises* {stack} deployment:

* HTTPS must be configured for communication between
{kibana-ref}/configuring-tls.html#configuring-tls-kib-es[{es} and {kib}].
* In the `elasticsearch.yml` configuration file, set the 
`xpack.security.enabled` setting to `true`. For more information, see 
{ref}/settings.html[Configuring {es}] and
{ref}/security-settings.html[Security settings in {es}].
* In the `kibana.yml` {kibana-ref}/settings.html[configuration file], add the 
`xpack.encryptedSavedObjects.encryptionKey` setting with any alphanumeric value 
of at least 32 characters. For example:
+
`xpack.encryptedSavedObjects.encryptionKey: 'fhjskloppd678ehkdfdlliverpoolfcr'`

For *all* deployments (on-premises and hosted):

* To view detection rules and alerts, you must have at least:
** `read` permissions for the `.siem-signals-<space name>` index, where
`<space name>` is the name of the {kib} space you are using to view Detections
(see {ref}/security-privileges.html#privileges-list-indices[Indices privileges]).
** {kib} space `Read` privileges for the `Security` feature (see
{kibana-ref}/xpack-spaces.html#spaces-control-user-access[Feature access based on user privileges]).
* To create and modify detection rules, you must have:
** {kib} space `All` privileges for the `Security` feature (see
{kibana-ref}/xpack-spaces.html#spaces-control-user-access[Feature access based on user privileges]).
** Write permissions for the `.siem-signals-<space name>` index, such as 
`create` `create_doc`, `write`, `index`, and `all`
(see {ref}/security-privileges.html#privileges-list-indices[Indices privileges]).

[float]
=== Resolve UI error messages

Depending on your privileges and whether a `.siem-signals-<space name>` index 
has already been created for the {kib} space, you might see an error message 
when you try to open the *Detections* page.

*`Letâ€™s set up your detection engine`*

If you see this message, a user with these privileges must visit the 
*Detections* page before you can view detection rules and alerts:

* The `manage` cluster privilege (see {ref}/security-privileges.html[{es} security privileges]).
* The `create_index` index privilege (see {ref}/security-privileges.html[{es} security privileges]).
* {kib} space `All` privileges for the `Security` feature (see
{kibana-ref}/xpack-spaces.html#spaces-control-user-access[Feature access based on user privileges]).

NOTE: For *on-premises* {stack} deployments only, this message may be displayed 
when the
<<detections-permissions, `xpack.encryptedSavedObjects.encryptionKey`>> 
setting has not been added to the `kibana.yml` file.

*`Detection engine permissions required`*

If you see this message, you do not have the
<<detections-permissions, required privileges>> to view the *Detections* page, 
and you should contact your {kib} administrator.

NOTE: For *on-premises* {stack} deployments only, this message may be
displayed when the <<detections-permissions, `xpack.security.enabled`>>
setting is not enabled in the `elasticsearch.yml` file.
[[release-notes-header-8.16.0]]
== 8.16

[discrete]
[[release-notes-8.16.0]]
=== 8.16.0

[discrete]
[[known-issue-8.16.0]]
==== Known issues


[discrete]
[[breaking-changes-8.16.0]]
==== Breaking changes

* During shutdown, Kibana now waits for all the ongoing requests to complete according to the `server.shutdownTimeout` setting. During that period, the incoming socket is closed and any new incoming requests are rejected. Before this update, new incoming requests received a response with the status code 503 and body { "message": "Kibana is shutting down and not accepting new incoming requests" }.

[discrete]
[[features-8.16.0]]
==== New features

// * Introduces a new API route for listing Entity Store entities: `GET /api/entity_store/entities/list` ({kibana-pull}192806[#192806]).
* Enables detection rules to automatically execute system actions such as opening a case ({kibana-pull}183937[#183937]). 
* Adds syntax validation for {esql} queries ({kibana-pull}189780[#189780]).
* Creates an option for {esql} and EQL rule previews `Show {es} requests, ran during rule executions`. When enabled, {es} queries that run during rule execution appear under "Preview logged requests" in the rule preview ({kibana-pull}191107[#191107]).
* Allows you to create and update a rule even when some data-related validation errors are present in the query field ({kibana-pull}191487[#191487]).
* Creates a new advanced setting `securitySolution:enableVisualizationsInFlyout`. When enabled, a "Visualizations" section with Analyzer and Session view previews appears in the alerts and events flyouts ({kibana-pull}194012[#194012], {kibana-pull}192531[#192531]).
* Creates a new advanced setting `securitySolution:excludedDataTiersForRuleExecution` that allows you to exclude cold and frozen data tiers from search during rule execution (does not apply to {esql} or Machine learning rules) ({kibana-pull}186908[#186908]). 
* Adds an "Insights" section containing any available misconfiguration and vulnerabilities findings to the alert and event flyouts ({kibana-pull}195509[#195509]).
* Removes the `securitySolution:enableAssetCriticality` advanced setting and enables <<asset-criticality, Asset Criticality>> workflows by default ({kibana-pull}196270[#196270])
* Adds an {elastic-defend} integration policy advanced setting that, when enabled, adds file hashes to file events ({kibana-pull}192037[#192037]).
* Adds RBAC for Elastic AI Assistant's knowledge base ({kibana-pull}195733[#195733]).
* Adds RBAC for Attack Discovery ({kibana-pull}188788[#188788]).
* Adds historical results to the Data Quality dashboard and updates its UI ({kibana-pull}191898[#191898], {kibana-pull}196127[#196127]). 
* Enables agentless deployment for Elastic's Cloud Security Posture Management integration ({kibana-pull}191557[#191557]).
//The following are Defend/Endpoint PRs. Still need to clean them up.
* Host field size reduction is now disabled by default.  Host field size reduction can be enabled via and advanced config directive `[os].advanced.set_extended_host_information`
* To reduce CPU usage, I/O, and event sizes, users can now opt into aggregation of process events.  Related process events occurring in rapid succession will be combined into fewer aggregate events.  Use `advanced.events.aggregate_process` in advanced policy to enable it.
* See 15114. 
//This ^ is for Endpoint PR 14937
* Events.
* Users can now opt into the collection of SHA-256 file hashes in file events. These events come with several caveats, including:
** This can greatly increase Endpoint's CPU and I/O utilization, impacting system responsiveness.
** This can significantly delay event enrichment, leading to Behavioral Protection rules firing too late to effectively stop malicious behavior.
** This can cause event processing queues to overflow, leading to dropped events.
** Many file events will not contain hashes. Hash collection is best-effort and not guaranteed to be present in every event. Hashes are collected asynchronously, shortly after the file activity. Hashes may be missing if the file was rapidly renamed, moved, deleted, or (on Windows) opened by another process without [read sharing](https://learn.microsoft.com/en-us/windows/win32/fileio/creating-and-opening-files).
* Enables the use of dynamic topics for the kafka output. Refer to https://www.elastic.co/guide/en/beats/filebeat/current/kafka-output.html#topic-option-kafka for more information.
* Integrates a new Event Tracing for Windows (ETW) provider (Microsoft-Windows-WMI-Activity) to create new event types that can be used by prebuilt endpoint rules to detect malicious WMI activity.

[discrete]
[[enhancements-8.16.0]]
==== Enhancements
* Enables you to open the Rule details flyout from the Alerts table ({kibana-pull}191764[#191764]).
* Enables you to resize expanded flyouts ({kibana-pull}192906[#192906]).
* Enables a settings menu for flyouts that lets you select between `Overlay` and `Push` display modes ({kibana-pull}182615[#182615]).
* Allows you to enable entity risk scoring in multiple {kib} spaces ({kibana-pull}192671[#192671]).
* Creates a new API endpoint for cleaning up entity risk scoring data: `DELETE /api/risk_score/engine/dangerously_delete_data` ({kibana-pull}191843[#191843], {kibana-pull}189872[#189872]). 
* Removes Elastic AI Assistant's default system prompts. The instructions previously contained in those prompts are now automatically included without user interaction, so Elastic AI Assistant will remain focused on relevant topics. Custom system prompts are still available ({kibana-pull}191847[#191847]). 
* Improves Elastic AI Assistant's ability to generate {esql} queries ({kibana-pull}195480[#195480], {kibana-pull}188492[#188492]). 
* Adds a button that lets you quickly add queries generated by Elastic AI Assistant to a rule's definition ({kibana-pull}190963[#190963]).
* Adds an "Other" option to the OpenAI connector's "Select an OpenAI provider" dropdown menu. Select this option when <<connect-to-byo-llm, connecting to your own custom LLM>> ({kibana-pull}194831[#194831]).
* Improves Attack Discovery ({kibana-pull}195669[#195669]): 
** AD can now process up to 500 alerts (previous maximum: 100). This setting can now be adjusted directly from the Attack Discovery page, and is stored locally instead of in {es}
** AD now combines related discoveries that would previously have appeared separately
** AD now detects and displays an error instead of hallucinated output
* Adds an `Install and enable` button to the preuilt rule UI, so you don't have to wait for rules to install before enabling them ({kibana-pull}191529[#191529]). 
* Improves the `/upgrade/_perform` API endpoint used for upgrading rules to better handle Elastic rules that you customized, better handle special fields, and use `PUT` instead of `PATCH` logic for rule updates ({kibana-pull}191439[#191439]). 
* Updates the Get Started tour for {elastic-sec} ({kibana-pull}192247[#192247]). 
* Improves loading performance for various pages in {kib} ({kibana-pull}194241[#194241]). 
* Adds Alert Suppression and Investigation Fields to the rule upgrade workflow ({kibana-pull}195499[#195499]). 
* Adds User and Global Artifacts to the {fleet} Policy Response flyout and to the Endpoint Details flyout ({kibana-pull}184125[#184125]). 
* Allows you to set the risk scoring engine to run automatically after you upload asset criticality data ({kibana-pull}187577[#187577]). 
* Adds a {kib} advanced setting `securitySolution:maxUnassociatedNotes` that allows you to set the maximum number of notes that are not associated with a timeline ({kibana-pull}194947[#194947]). 
* Adds the `IS` operator as an option when configuring a Windows signature blocklist entry ({kibana-pull}190515[#190515]). 
* Allows you to disable the defend hardware call stacks feature ({kibana-pull}190553[#190553]). 
* Improves network previews in the Alert details flyout ({kibana-pull}190560[#190560]). 
//The following are Defend/Endpoint PRs. Still need to clean them up.
* Improved `call_stack_final_user_module` attribution where potential `proxy_call` modules are encountered during Windows call stack analysis.
* Adds additional fields to Defend API events to improve context for the triage of Behavior Alerts. The new `call_stack_final_user_module` fields are  `allocation_private_bytes`, `protection`, `protection_provenance_path`, and `reason`.
* Add a new Defend API event for [`DeviceIoControl`](https://learn.microsoft.com/en-us/windows/win32/api/ioapiset/nf-ioapiset-deviceiocontrol) calls to support detection of driver abuse. This feature is only supported on Windows 11 Desktop versions.
* Upon start Endpoint service will update security artifacts before arming itself with policy.
* Events. 
//Not sure what this ^ is for
* Adds user password sock5 proxy authentication support embedded in URL: socks5:// : @.
* Improve error messages when Endpoint receives invalid or unsupported cryptographic keys via policy.
* If Defend loses connectivity to Agent for an extended period of time, it will notify Fleet that it is "orphaned." Fleet can use this information to provide additional context to the user.
* Adds SOCKS5 proxy support to Logstash output.
* On Windows, Defend will now use [Intel CET and AMD Shadow Stacks](https://www.elastic.co/security-labs/finding-truth-in-the-shadows) to collect call stacks, where supported.  This improves performance and enables detection of certain defense evasions.
* Restore Defend support for Windows Server 2012, which was removed in 8.13.0.
* Improvements to Defend's caching to reduce memory usage on Windows.
* Reduced size of process events by default, reducing excessive process ancestry entries and shortening the entity id.
* Improve reliability and system resource usage of Defend's Windows network driver.

[discrete]
[[bug-fixes-8.16.0]]
==== Bug fixes

* Prevents an empty warning message from appearing for rule executions ({kibana-pull}186096[#186096]). 
* Fixes an error that could occur during rule execution when the source index had a text field that was noncompliant with ECS ({kibana-pull}187673[#187673]). 
* Removes unnecessary empty space below the Open Timeline modal's title ({kibana-pull}188837[#188837]). 
* Added a tag that was missing from an FTR suite ({kibana-pull}189661[#189661]). 
* Improves the Alerts table's performance ({kibana-pull}192827[#192827]). 
* Removes the requirement that you have unnecessary {kib} {fleet} privileges to access some cloud security posture Findings ({kibana-pull}194069[#194069]).
* Fixes an issue that could cause fields for all indices to appear when you tried to add a rule filter ({kibana-pull}194678[#194678]).
//The following are Defend/Endpoint PRs. Still need to clean them up.
* Fixed a bug where network event deduplication logic could incorrectly drop Linux network events.
* Fixes a bug where Windows API events may be dropped if they contain Unicode characters that cannot be converted to ANSI.
* Track loopback (part 3).
* If Defend is unable to enrich a memory region in an API event, it will now remove that field instead of emitting an empty `memory_region`.
* Fix a bug where Defend can fail to properly enrich Windows API events for short-lived processes on older operating systems that don't natively include this telemetry, such as Windows Server 2019.  This may result in dropped or unattributed API events.
* When requested to use fqdn in the `host.name` field, endpoint will now report the fqdn exactly  as the os reports it, rather than lowercasing by default.  This will ensure host name uniformity with beats products.
* Fixes a bug in behavior protection alerts, where prevention alerts could mistakenly be labeled as detection alerts.
* Fixed an issue where a busy Kafka connection could lead to an Endpoint crash.
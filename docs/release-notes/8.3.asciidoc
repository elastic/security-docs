[[release-notes-header-8.3.0]]
== 8.3

[discrete]
[[release-notes-8.3.1]]

=== 8.3.1

[discrete]
[[known-issue-8.3.1]]
==== Known issue

8.3.1 has a bug where detection rules that were created or edited in 8.2 will stop running after you upgrade. Because of this, we advise against upgrading from 8.2 to 8.3.1. If you want to upgrade, _we highly recommend that you track your active rules beforehand so you can easily find and re-enable them after you upgrade_. Use the <<rules-api-find, Find rules API>> to capture a list of enabled rules before you upgrade.

NOTE: Use curl or another HTTP tool to run {elastic-sec} API commands.

Here is a curl command that you can run to find enabled rules:

[source,console]
--------------------------------------------------
GET /api/detection_engine/rules/_find?per_page=10000&filter=alert.attributes.enabled:true
--------------------------------------------------

If you already upgraded from 8.2 to 8.3.1, detection rules affected by the bug will have stopped running with an error that is similar to the following example:

[source,text]
----
<rule-type>:<UUID>: execution failed - security_exception: [security_exception] Reason: missing authentication credentials for REST request [/_security/user/_has_privileges], caused by: ""
----

You will need to disable, then re-enable affected rules to restore them to a functional state. These actions generate new API keys using the credentials of the user performing these actions. The rules' states are also reset.

NOTE: To restore failed custom and prebuilt rules, you need privileges to <<enable-detections-ui, manage rules>>.

*Restore custom rules*

Follow these steps:

. Go to the *Rules* page (*Detect -> Rules*) and click *Custom rules*.
. Sort the rules table by the *Enabled* column to show enabled rules.
. Select the affected rules, then click *Bulk actions -> Disable*.
+
NOTE: Affected rules will have a `Failed` execution status and the aforementioned error message in the rule's details.

. Select the affected rules, then click *Bulk actions -> Tags -> Add Tags*. Add a descriptive tag, for example `rules_to_fix`.
. Re-select the same rules, then click *Bulk actions -> Enable*.
. Add a descriptive tag, for example `rules_to_fix`. Adding a tag will generate new API keys and solve the issue.
. Follow these steps if you don't want to wait until the next scheduled rule execution (optional):
.. From the rules table, filter for the tag you just applied to your custom rules.
.. Click *Select all x rules* above the rules table.
.. Click *Bulk actions -> Disable*.
.. Filter the rules table for the same tag, re-select the same rules, and then click *Bulk actions -> Enable*.

Once the rule runs, the *Last Response* value for the rule will change to `Pending`, and then to `Active` or `OK`.

*Restore prebuilt rules*

Follow these steps:

. Use the <<rules-api-find, Find rules API>> to capture a list of enabled rules before you upgrade. Here is a curl command that you can run to find enabled prebuilt rules:
+
[source,console]
--------------------------------------------------
GET api/detection_engine/rules/_find?page=1&per_page=1000&sort_field=name&sort_order=asc&filter=alert.attributes.enabled:true and alert.attributes.params.immutable: true
--------------------------------------------------

. Go to the *Rules* page (*Detect -> Rules*) and click *Elastic rules*.
. Sort the rules table by the *Enabled* column to show enabled rules.
. Select the affected rules, then click *Bulk actions -> Disable*.
+
NOTE: Affected rules will have a `Failed` execution status and the aforementioned error message in the rule's details.

. Re-select the same rules.
+
TIP: Click the *Rule* column to sort by rule name and then compare the table results to the results of the API call you ran in step 1.

.  Click *Bulk actions -> Enable*.

Once the rule runs, the *Last Response* value for the rule will change to `Pending`, and then to `Active` or `OK`.

[discrete]
[[bug-fixes-8.3.1]]
==== Bug fixes and enhancements
* Fixes a bug that prevented the Cases widget in the Detection & Response dashboard from updating ({pull}135128[#135128]).

[discrete]
[[release-notes-8.3.0]]
== 8.3.0

[discrete]
[[known-issue-8.3.0]]
==== Known issue

8.3.0 has a bug where detection rules that were created or edited in 8.2 will stop running after you upgrade. Because of this, we advise against upgrading from 8.2 to 8.3.0. If you want to upgrade, _we highly recommend that you track your active rules beforehand so you can easily find and re-enable them after you upgrade_. Use the <<rules-api-find, Find rules API>> to capture a list of enabled rules before you upgrade.

NOTE: Use curl or another HTTP tool to run {elastic-sec} API commands.

Here is a curl command that you can run to find enabled rules:

[source,console]
--------------------------------------------------
GET /api/detection_engine/rules/_find?per_page=10000&filter=alert.attributes.enabled:true
--------------------------------------------------

If you already upgraded from 8.2 to 8.3.0, detection rules affected by the bug will have stopped running with an error that is similar to the following example:

[source,text]
----
<rule-type>:<UUID>: execution failed - security_exception: [security_exception] Reason: missing authentication credentials for REST request [/_security/user/_has_privileges], caused by: ""
----

You will need to disable, then re-enable affected rules to restore them to a functional state. These actions generate a new API key using the credentials of the user performing these actions. The rules' states are also reset.

NOTE: To restore failed custom and prebuilt rules, you need privileges to <<enable-detections-ui, manage rules>>.

*Restore custom rules*

Follow these steps:

. Go to the *Rules* page (*Detect -> Rules*) and click *Custom rules*.
. Sort the rules table by the *Enabled* column to show enabled rules.
. Select the affected rules, then click *Bulk actions -> Disable*.
+
NOTE: Affected rules will have a `Failed` execution status and the aforementioned error message in the rule's details.

. Select the affected rules, then click *Bulk actions -> Tags -> Add Tags*. Add a descriptive tag, for example `rules_to_fix`.
. Re-select the same rules, then click *Bulk actions -> Enable*.
. Add a descriptive tag, for example `rules_to_fix`. Adding a tag will generate new API keys and solve the issue.
. Follow these steps if you don't want to wait until the next scheduled rule execution (optional):
.. From the rules table, filter for the tag you just applied to your custom rules.
.. Click *Select all x rules* above the rules table.
.. Click *Bulk actions -> Disable*.
.. Filter the rules table for the same tag, re-select the same rules, and then click *Bulk actions -> Enable*.

Once the rule runs, the *Last Response* value for the rule will change to `Pending`, and then to `Active` or `OK`.

*Restore prebuilt rules*

Follow these steps:

. Use the <<rules-api-find, Find rules API>> to capture a list of enabled rules before you upgrade. Here is a curl command that you can run to find enabled rules:
+
[source,console]
--------------------------------------------------
GET /api/detection_engine/rules/_find?per_page=10000&filter=alert.attributes.enabled:true
--------------------------------------------------

. Go to the *Rules* page (*Detect -> Rules*) and click *Elastic rules*.
. Sort the rules table by the *Enabled* column to show enabled rules.
. Select the affected rules, then click *Bulk actions -> Disable*.
+
NOTE: Affected rules will have a `Failed` execution status and the aforementioned error message in the rule's details.

. Re-select the same rules.
+
TIP: Click the *Rule* column to sort by rule name and then compare the table results to the results of the API call you ran in step 1.

.  Click *Bulk actions -> Enable*.

Once the rule runs, the *Last Response* value for the rule will change to `Pending`, and then to `Active` or `OK`.

[discrete]
[[breaking-changes-8.3.0]]
==== Breaking changes
// tag::breaking-changes[]
// NOTE: The breaking-changes tagged regions are reused in the Elastic Installation and Upgrade Guide. The pull attribute is defined within this snippet so it properly resolves in the output.
:pull: https://github.com/elastic/kibana/pull/
* Updates Elastic prebuilt {ml} detection rules for some Windows and Linux anomalies with new `v3` {ml} jobs. A confirmation modal is displayed when updating rules if `v1`/`v2` jobs are installed. If you're using 8.2 or earlier versions of {beats} or {agent}, you may need to duplicate prebuilt rules or create new custom rules _before_ you update the prebuilt rules. Once you update the prebuilt rules, they will only use `v3` {ml} jobs. Refer to {security-guide}/alerts-ui-monitor.html#ml-job-compatibility[Troubleshoot missing alerts for machine learning jobs] for more information ({pull}128334[#128334]).
// end::breaking-changes[]

[discrete]
[[features-8.3.0]]
==== Features
* Renames Endpoint Security integration to "{endpoint-cloud-sec}" ({pull}132752[#132752]).
* Adds a new {security-guide}/detection-response-dashboard.html[Detection & Response dashboard], which provides focused visibility into the day-to-day operations of your security environment ({pull}130670[#130670], {pull}128335[#128335], {pull}129021[#129021], {pull}128087[#128087], {pull}131828[#131828], {pull}131029[#131029]).
* Introduces a new optional design for the main navigation menu ({pull}132210[#132210], {pull}131437[#131437], {pull}133719[#133719]).
* Adds a *User risk* tab to the User details flyout ({pull}130256[#130256]).
* Adds an *Authentications* tab to the User details flyout ({pull}129456[#129456]).
* Adds the ability to investigate Osquery results in Timeline ({pull}128596[#128596]).
* Allows multiple alerts to be added to a case ({pull}130958[#130958]).
* Adds the option to delete case comments from a case ({pull}130254[#130254]).
* Provides an option to select a severity level for a case ({pull}131626[#131626]).
* Adds the experimental *Alerts* tab to cases, which allows users to inspect attached alerts ({pull}131883[#131883]).
* Adds the *Average time to close* metric to the Cases page ({pull}131909[#131909]).

[discrete]
[[bug-fixes-8.3.0]]
==== Bug fixes and enhancements
* Separates array values with commas in the Alerts table ({pull}133297[#133297]).
* Exposes the EQL search settings `event_category_field`, `tiebreaker_field`, and `timestamp_field` through the rules API and UI for event correlation rules ({pull}132247[#132247]).
* Adds the *Session ID* field to the *Highlighted fields* section of the Alert details flyout ({pull}132219[#132219]).
* Adds Dashboards and Threat Hunting Landing pages ({pull}130905[#130905]).
* Allows highlighted fields to be investigated in Timeline ({pull}131255[#131255]).
* Adds the *Run Osquery* option to the *More actions* menu (*...*) in the Alerts table ({pull}131790[#131790]).
* Improves the performance of these actions on the bulk rule actions endpoint ({pull}130924[#130924]).
** `add_tags`
** `delete_tags`
** `set_tags`
** `add_index_patterns`
** `delete_index_patterns`
** `set_index_patterns`
** `set_timeline`
* Fixes a bug that caused the rule details page to crash when users opened a deleted or non-existent rule ({pull}133867[#133867]).
* Allows threshold alerts to be investigated in Timeline if filters are not provided ({pull}133733[#133733]).
* Prevents events from being added to cases from Timeline ({pull}133410[#133410]).
* Fixes a bug that prevented the Users and Hosts pages from resetting after being sorted ({pull}133111[#133111]).
* Removes the filter and investigate in Timeline options from the {agent} status in highlighted fields ({pull}132829[#132829], {pull}132586[#132586]).
* Improves the copy of Timeline tooltips ({pull}132756[#132756]).
* Fixes a validation bug that occurred when users were building a rule exception and changed the exception statement’s operator ({pull}131989[#131989]).
* Adds a checkmark to the pagination selection on the *Exceptions lists* page ({pull}131979[#131979]).
* Re-adds the success message that displays when users export an exceptions list ({pull}131952[#131952]).
* Updates import toast logic to accurately report the total number of failures ({pull}131873[#131873]).
* Ensures an error is not generated when the `agent.version` provided by an alert is in an unexpected format ({pull}131272[#131272]).
* Improves error checks for threshold rules ({pull}131088[#131088]).
* Expands support for migrating legacy rule actions ({pull}130511[#130511]).
* Fixes a bug that caused the *Add Rule Exception* flyout to unexpectedly close when users create the first exception for the rule from an alert ({pull}130187[#130187]).
* Corrects Rule name sorting so detection rules are ordered alphabetically, regardless of their casing ({pull}130105[#130105]).
* Improves the *Reporter* column in the Cases table ({pull}132200[#132200]).
* Adds the option to create a new case to the Select case pane ({pull}128882[#128882]).
* Allows {kibana-ref}/pre-configured-connectors.html[preconfigured connectors] to be used with cases ({pull}130372[#130372]).
* Inserts the deprecated icon next to deprecated preconfigured connectors ({pull}132237[#132237]).
* Updates the Case table so that all tags assigned to the case are displayed when users go to the case and hover over the *Tags* column ({pull}132023[#132023]).
* Adds Oauth support to the {sn} ITSM, SecOps, and ITOM connectors ({pull}131248[#131248]).
* Adds a setting to specify a list of allowed email domains, which can be used with the email connector ({pull}129001[#129001]).

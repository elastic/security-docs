[[release-notes-header-8.17.0]]
== 8.17

[discrete]
[[release-notes-8.17.0]]
=== 8.17.0

[discrete]
[[known-issue-8.17.0]]
==== Known issues

// tag::known-issue[201820]
[discrete]
.The **Exceptions** tab won't properly load if exceptions contain comments with newline characters (`\n`)  
[%collapsible]
====

*Details* +
On December 5, 2024, it was discovered that the **Exceptions** tab will not load properly if any exceptions contain comments with newline characters (`\n`). This issue occurs when you upgrade to 8.16.0 or later. 

*Workaround* + 

For custom rules:

. From the {security-app}, <<import-export-rules-ui,export>> the rule or rules with the affected exception lists. 
. Modify the `.ndjson` file so `comments` no longer contain newline characters.
. Return to the {security-app} and <<import-export-rules-ui,re-import>> the rules. Make sure to select the **Overwrite existing exception lists with conflicting "list_id"** option.

For prebuilt rules: 

NOTE: If you only need to fix Endpoint exceptions for the Elastic Endpoint rule, follow the above instructions for fixing custom rule exceptions.

. Fetch the affected exception list ID or IDs that are associated with the rule. 
.. Find the affected rule's ID (`id`). From the {security-app}, , open the rule's details page, go to the page URL, and copy the string at the end. For example, the URL http://host.name/app/security/rules/id/167a5f6f-2148-4792-8226-b5e7a58ef46e contains the `id` `167a5f6f-2148-4792-8226-b5e7a58ef46e` at the end.
.. Use the `id` to fetch the rule's details using the {api-kibana}/operation/operation-readrule[Retrieve a detection rule API]. Here is an example request that includes the rule ID:
+
[source,console]
----
curl -H 'kbn-xsrf: true' -H 'elastic-api-version: 2023-10-31' http://localhost:5601/api/detection_engine/rules?id=167a5f6f-2148-4792-8226-b5e7a58ef46e -u elastic:changeme
----
+
.. The JSON response will contain the `id`, `list_id`, and `namespace_type` values within the `exceptions_list` key (as shown below). You will need these values to retrieve the exception list using the Exception list API. 
+
[source,console]
----
{
  "id": "167a5f6f-2148-4792-8226-b5e7a58ef46e",
  "exceptions_list": [
    {
      "id": "490525a2-eb66-4320-95b5-88bdd1302dc4",
      "list_id": "f75aae6f-0229-413f-881d-81cb3abfbe2d",
      "namespace_type": "single"
    }
  ]
}
----
+
. Retrieve the affected exception list using the export exceptions API. Insert the values for the `id`, `list_id`, and `namespace_type` parameters into the following API call:
+
[source,console]
----
curl -XPOST -u elastic:changeme -H 'kbn-xsrf: true' -H 'elastic-api-version: 2023-10-31' 'http://localhost:5601/api/exception_lists/_export?list_id=f75aae6f-0229-413f-881d-81cb3abfbe2d&id=490525a2-eb66-4320-95b5-88bdd1302dc4&namespace_type=single' -o list.ndjson
----
+
. Modify the exception list's `.ndjson` file to ensure that no `comments[].comment` values contain newline characters (`\n`).
. From the {security-app}, re-import the modified exception list using **Import exception lists** option on the **Shared Exception Lists** page (find the page in the navigation menu or by using the {kibana-ref}/introduction.html#kibana-navigation-search[global search field]).
+
The import will initially fail because the exception list already exists. After the failure, an option to overwrite the existing list appears. Select the option, then resubmit the request to import the updated exception list.
====
// end::known-issue[201820]

// tag::known-issue[]
[discrete]
.Duplicate alerts can be produced from manually running threshold rules 
[%collapsible]
====
*Details* +
On November 12, 2024, it was discovered that manually running threshold rules could produce duplicate alerts if the date range was already covered by a scheduled rule execution.

====
// end::known-issue[]

// tag::known-issue[]
[discrete]
.Manually running custom query rules with suppression could suppress more alerts than expected
[%collapsible]
====
*Details* +
On November 12, 2024, it was discovered that manually running a custom query rule with suppression could incorrectly inflate the number of suppressed alerts. 

====
// end::known-issue[]

[discrete]
[[features-8.17.0]]
==== New features
* Adds a signature option for trusted applications on macOS ({kibana-pull}197821[#197821]).

[discrete]
[[enhancements-8.17.0]]
==== Enhancements
* Checks user permissions before initializing the entity engine ({kibana-pull}198661[#198661]).

[discrete]
[[bug-fixes-8.17.0]]
==== Bug fixes
* Clears the error on the second entity engine initialization ({kibana-pull}202903[#202903]).
* Modifies the empty state message that appears when installing prebuilt rules ({kibana-pull}202226[#202226]).
* Rejects CEF logs from Automatic Import and redirects you to the CEF integration instead ({kibana-pull}201792[#201792]).
* Disables the **Install All** button on the **Add Elastic Rules** page while rules are being installed ({kibana-pull}201731[#201731]).
* Turns off the **Add note** button in the alert details flyout if you're lacking adequate privileges ({kibana-pull}201707[#201707]).
* Removes fields with an `@` from the script processor ({kibana-pull}201548[#201548]).
* Fixes an issue that could interfere with Knowledge Base ({kibana-pull}201175[#201175]).
* Fixes a bug with threshold rules that prevented cardinality details from appearing ({kibana-pull}201162[#201162]).
* Fixes a bug that caused the risk engine to get stuck in the `Installing` status if the default Security data view didn't exist. With this fix, the engine now correctly reports the `Error` state ({kibana-pull}201140[#201140]).
* Fixes an issue that prevented you from successfully importing TSV files with Asset Criticality data if you're on Windows ({kibana-pull}199791[#199791])
* Fixes Asset Criticality index issue when setting up entity engines concurrently ({kibana-pull}199486[#199486]).
* Fixes a bug that prevented the save notification from displaying on duplicated Timelines with changes ({kibana-pull}198652[#198652]).
* Improves the flow for the Insights section in the alert details flyout ({kibana-pull}197349[#197349]).
* Fixes a bug where the `@timestamp` field wouldn't update upon Asset Criticality soft delete ({kibana-pull}196722[#196722]).
* Improves {elastic-defend} for Linux endpoints by enabling process information enrichment for file and network events when process events are disabled.
* Improves {elastic-defend} by refactoring the kernel driver to work around the CrowdStrike `CRITICAL_PROCESS_DIED` bug check (BSOD).
* Fixes an {elastic-defend} bug where the Linux system call (setsid) wasn't properly gathered for RHEL 9/CentOS Stream 9 process events.
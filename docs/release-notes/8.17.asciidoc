[[release-notes-header-8.17.0]]
== 8.17

[discrete]
[[release-notes-8.17.3]]
=== 8.17.3

[discrete]
[[known-issue-8.17.3]]
==== Known issues

// tag::known-issue[]
[discrete]
.Duplicate alerts can be produced from manually running threshold rules 
[%collapsible]
====
*Details* +
On November 12, 2024, it was discovered that manually running threshold rules could produce duplicate alerts if the date range was already covered by a scheduled rule execution.
====
// end::known-issue[]

// tag::known-issue[]
[discrete]
.Manually running custom query rules with suppression could suppress more alerts than expected
[%collapsible]
====
*Details* +
On November 12, 2024, it was discovered that manually running a custom query rule with suppression could incorrectly inflate the number of suppressed alerts. 
====
// end::known-issue[]

[discrete]
[[bug-fixes-8.17.3]]
==== Bug fixes
* Removes the option to sort IP ranges in the value list modal ({kibana-pull}210922[#210922]).
* Fixes package name validation on the Automatic Import data stream page ({kibana-pull}210916[#210916], {kibana-pull}210770[#210770]).
* Improves the way Automatic Import handles empty categorization results from LLMs ({kibana-pull}210420[#210420]).
* Adds concurrency limits and request throttling to prebuilt rule routes ({kibana-pull}209551[#209551]).
* Fixes a Linux endpoint bug where tty capture limit defaults were ignored.
* Fixes a potential {elastic-defend} crash when generating multiple ransomware alerts on Windows. This issue was simultaneously mitigated by a cloud artifact update (manifest version 1.0.1381) on February 24, 2025. Internet-connected instances of {elastic-defend} will automatically receive this update -- no user intervention required. Air-gapped customers hosting their own artifacts should follow [these instructions](offline-endpoint). We would like to acknowledge [Todyl](https://www.todyl.com) for their assistance with this issue.
* The `allocate_shellcode` API behavior was updated to explicitly only apply to unbacked memory.

[discrete]
[[release-notes-8.17.2]]
=== 8.17.2

[discrete]
[[known-issue-8.17.2]]
==== Known issues

// tag::known-issue[]
[discrete]
.Duplicate alerts can be produced from manually running threshold rules 
[%collapsible]
====
*Details* +
On November 12, 2024, it was discovered that manually running threshold rules could produce duplicate alerts if the date range was already covered by a scheduled rule execution.
====
// end::known-issue[]

// tag::known-issue[]
[discrete]
.Manually running custom query rules with suppression could suppress more alerts than expected
[%collapsible]
====
*Details* +
On November 12, 2024, it was discovered that manually running a custom query rule with suppression could incorrectly inflate the number of suppressed alerts. 
====
// end::known-issue[]

[discrete]
[[features-8.17.2]]
==== New features
* Adds the `advanced.malware.max_file_size_bytes` <<adv-policy-settings,advanced policy setting>>, which allows you to control the maximum file size for malware protection.

[discrete]
[[enhancements-8.17.2]]
==== Enhancements
* Enhances the performance of {elastic-defend} network events monitoring for better CPU utilization and responsiveness.

[discrete]
[[bug-fixes-8.17.2]]
==== Bug fixes
* Fixes the issue that caused {kib} to crash with an `Out Of Memory` error when the prebuilt rule package was installed.  
* Ensures that multiple IPs are displayed as individual links in the Alerts table, even if they're passed as a single string ({kibana-pull}209475[#209475]).
* Fixes an AI Assistant bug that prevented you from selecting different connector types after initially choosing one ({kibana-pull}208969[#208969]).
* Adds missing fields to Automatic Import's input manifest templates ({kibana-pull}208768[#208768]).
* Ensures that Automatic Import's structured log template surrounds single backslashes with single quotes when the backslash is used as an escape character ({kibana-pull}209736[#209736]).
* Adds fields that are missing from Automatic Import's `aws-s3-manifest.yml` file ({kibana-pull}208080[#208080]).
* Allows {elastic-defend} to detect or prevent malware process or image loads from WebDAV servers.
* Allows {elastic-defend} to bypass network traffic from other computers when promiscuous mode is enabled on Windows. 
* Fixes a bug with the `get-file` Endpoint response action. When you used the `get-file` response action to retrieve a Windows Alternate Data Stream, the resulting `.zip` archive  would contain a checksum error that made it unusable by most zip tools.
* Increases the maximum number of ETW buffers that {elastic-defend} can use.
* Fixes a bug where {elastic-defend} was omitting MD5 and SHA-1 hashes in events and alerts unless a user had explicitly enabled them using the advanced policy. This 8.17.0 change was not supposed to go live until 8.18.0.
* Fixes an issue where {elastic-defend} wasn't correctly populating `event.created` for process events on Windows.

[discrete]
[[release-notes-8.17.1]]
=== 8.17.1

[discrete]
[[known-issue-8.17.1]]
==== Known issues

// tag::known-issue[]
[discrete]
.{elastic-sec} crashes on {kib} instances with 1 GB of RAM on {ecloud} deployments
[%collapsible]
====
*Details* +
Whenever you open a page in {elastic-sec}, there's an attempt to install the {fleet} package with prebuilt rules. If the package hasn't been installed yet, {kib} starts downloading the latest version of it, then crashes with an `Out Of Memory` error. The process will then automatically restart and crash for the same reasons.

This issue was discovered on February 6, 2025.

*Workaround* +
To resolve this issue, upgrade to 8.17.2. Alternatively, increase {kib}'s RAM to 2 GB.

====
// end::known-issue[]

// tag::known-issue[]
[discrete]
.Duplicate alerts can be produced from manually running threshold rules 
[%collapsible]
====
*Details* +
On November 12, 2024, it was discovered that manually running threshold rules could produce duplicate alerts if the date range was already covered by a scheduled rule execution.
====
// end::known-issue[]

// tag::known-issue[]
[discrete]
.Manually running custom query rules with suppression could suppress more alerts than expected
[%collapsible]
====
*Details* +
On November 12, 2024, it was discovered that manually running a custom query rule with suppression could incorrectly inflate the number of suppressed alerts. 
====
// end::known-issue[]

[discrete]
[[bug-fixes-8.17.1]]
==== Bug fixes
* Fixes Integration and Datastream name validation ({kibana-pull}204943[#204943]).
* Improves how the rule query field handles whitespace for long pre-formatted texts. This fix only applies to Firefox, not Chrome or Safari ({kibana-pull}203993[#203993]).
* Adds role-based access control to the Automatic Import APIs ({kibana-pull}203882[#203882]).
* Changes the validation for API responses from SentinelOne and Crowdstrike. This fix allows for non-JSON responses, such as stream, to be returned ({kibana-pull}203820[#203820]).
* Fixes a bug that caused a warning to display when you modified the index patterns of a rule that had a filter using `AND` or `OR` conditions ({kibana-pull}201776[#201776]).
* Fixes a bug that caused the diff view to incorrectly mark certain characters as changed in specific cases ({kibana-pull}205138[#205138]).
* Lists all policies to ensure that integrations are properly displayed ({kibana-pull}205103[#205103]).
* Fixes a bug that prevented the **Exceptions** tab from properly loading if exceptions contained comments with newline characters (`\n`) ({kibana-pull}202063[#202063]).
* Fixes incompatibility issues with {elastic-defend}. In 8.16.2 and 8.17.0, a portion of the Windows kernel driver was refactored to work around an incompatibility with CrowdStrike Falcon which could result in a `CRITICAL_PROCESS_DIED` bugcheck. It was discovered that this incompatibility could also be triggered by Memory Protection, so a portion of the kernel driver was refactored to avoid this conflict.
+
Affected users who are unable to upgrade should set one or both of the following in their {elastic-defend} advanced policy, depending on their version:

** `windows.advanced.events.process.creation_flags: false` (8.13.0 - 8.16.1)
** `windows.advanced.memory_protection.shellcode_trampoline_detection: false` (8.12.0 - 8.16.2)
* Fixes an {elastic-defend} bug that could cause the Windows API event call stack enrichment to fail for processes that started before {elastic-defend} and if another security product was present and hooking system DLLs.
* Fixes an {elastic-defend} bug that caused Windows API events involving `mswsock.dll` to be mislabeled with the `proxy_call` behavior.
* Fixes an {elastic-defend} bug that caused the **Open Elastic Security** button in the Windows Security Center to be non-functional. Now, you're informed that {elastic-defend} is managed by your system administrator.

[discrete]
[[release-notes-8.17.0]]
=== 8.17.0

[discrete]
[[known-issue-8.17.0]]
==== Known issues

// tag::known-issue[]
[discrete]
.{elastic-sec} crashes on {kib} instances with 1 GB of RAM on {ecloud} deployments
[%collapsible]
====
*Details* +
Whenever you open a page in {elastic-sec}, there's an attempt to install the {fleet} package with prebuilt rules. If the package hasn't been installed yet, {kib} starts downloading the latest version of it, then crashes with an `Out Of Memory` error. The process will then automatically restart and crash for the same reasons.

This issue was discovered on February 6, 2025.

*Workaround* +
To resolve this issue, upgrade to 8.17.2. Alternatively, increase {kib}'s RAM to 2 GB.

====
// end::known-issue[]

[discrete]
.Defend for Containers (D4C) is broken in 8.17.0
[%collapsible]
====
Defend for Containers is broken in 8.17.0. If you use it, consider updating to 8.17.1 instead.
====

// tag::known-issue[201820]
[discrete]
.The **Exceptions** tab won't properly load if exceptions contain comments with newline characters (`\n`)  
[%collapsible]
====
*Details* +
On December 5, 2024, it was discovered that the **Exceptions** tab won't load properly if any exceptions contain comments with newline characters (`\n`). This issue occurs when you upgrade to 8.16.0 or later ({kibana-issue}201820[#201820]).

*Workaround* + 

Upgrade to 8.17.1, or follow the workarounds below.

For custom rules:

. From the **Rules** page, <<import-export-rules-ui,export>> the rule or rules with the affected exception lists. 
. Modify the `.ndjson` file so `comments` no longer contain newline characters.
. Return to the **Rules** page and <<import-export-rules-ui,re-import>> the rules. Ensure you select the **Overwrite existing exception lists with conflicting "list_id"** option.

For prebuilt rules: 

NOTE: If you only need to fix exceptions for the Elastic Endpoint rule, you can export and re-import its exception list from the <<shared-exception-lists,**Shared Exception Lists**>> page.

. Follow these steps to fetch the affected exception list ID or IDs that are associated with the rule: 
.. Find the affected rule's ID (`id`). From the **Rules** page, open the details of a rule, go to the page URL, and copy the string at the end. For example, in the URL http://host.name/app/security/rules/id/167a5f6f-2148-4792-8226-b5e7a58ef46e, the string at the end (`167a5f6f-2148-4792-8226-b5e7a58ef46e`) is the `id`.
.. Specify the `id` when fetching the rule's details using the {api-kibana}/operation/operation-readrule[Retrieve a detection rule API]. Here is an example request that includes the `id`:
+
[source,console]
----
curl -H 'Authorization: ApiKey API_KEY_HERE' -H 'kbn-xsrf: true' -H 'elastic-api-version: 2023-10-31' KIBANA_URL/api/detection_engine/rules?id=167a5f6f-2148-4792-8226-b5e7a58ef46e
----
+
.. The JSON response contains the `id`, `list_id`, and `namespace_type` values within the `exceptions_list` key (as shown below). You need these values when using the Exception list API to retrieve the affected exception list. 
+
[source,console]
----
{
  "id": "167a5f6f-2148-4792-8226-b5e7a58ef46e",
  "exceptions_list": [
    {
      "id": "490525a2-eb66-4320-95b5-88bdd1302dc4",
      "list_id": "f75aae6f-0229-413f-881d-81cb3abfbe2d",
      "namespace_type": "single"
    }
  ]
}
----
+
. Use the export exceptions API to retrieve the affected exception list. Insert the values for the `id`, `list_id`, and `namespace_type` parameters into the following API call:
+
[source,console]
----
curl -XPOST -H 'Authorization: ApiKey API_KEY_HERE' -H 'kbn-xsrf: true' -H 'elastic-api-version: 2023-10-31' 'KIBANA_URL/api/exception_lists/_export?list_id=f75aae6f-0229-413f-881d-81cb3abfbe2d&id=490525a2-eb66-4320-95b5-88bdd1302dc4&namespace_type=single' -o list.ndjson
----
+
. Modify the exception list's `.ndjson` file to ensure `comments[].comment` values don't contain newline characters (`\n`).
. Re-import the modified exception list using **Import exception lists** option on the <<shared-exception-lists,**Shared Exception Lists**>> page. The import will initially fail because the exception list already exists, and an option to overwrite the existing list will appear. Select the option, then resubmit the request to import the corrected exception list.
====
// end::known-issue[201820]

// tag::known-issue[]
[discrete]
.Duplicate alerts can be produced from manually running threshold rules 
[%collapsible]
====
*Details* +
On November 12, 2024, it was discovered that manually running threshold rules could produce duplicate alerts if the date range was already covered by a scheduled rule execution.

====
// end::known-issue[]

// tag::known-issue[]
[discrete]
.Manually running custom query rules with suppression could suppress more alerts than expected
[%collapsible]
====
*Details* +
On November 12, 2024, it was discovered that manually running a custom query rule with suppression could incorrectly inflate the number of suppressed alerts. 

====
// end::known-issue[]

[discrete]
[[features-8.17.0]]
==== New features
* Adds a signature option for trusted applications on macOS ({kibana-pull}197821[#197821]).
* Adds GA support for the case action feature, which lets rules automatically create cases ({kibana-pull}196973[#196973]).

[discrete]
[[enhancements-8.17.0]]
==== Enhancements
* Checks user permissions before initializing the entity engine ({kibana-pull}198661[#198661]).
* Updates LangChain dependencies, adding support for the new Bedrock cross-region inference profiles ({kibana-pull}198622[#198622]).

[discrete]
[[bug-fixes-8.17.0]]
==== Bug fixes
* Clears the error on the second entity engine initialization ({kibana-pull}202903[#202903]).
* Modifies the empty state message that appears when installing prebuilt rules ({kibana-pull}202226[#202226]).
* Rejects CEF logs from Automatic Import and instead redirects you to the CEF integration ({kibana-pull}201792[#201792], {kibana-pull}202994[#202994]).
* Fixes a bug in Automatic Import where icons did not display after the integration was installed ({kibana-pull}201139[#201139]).
* Removes an erroneous duplicate Preserve Original Event flag as one was additionally added from the common settings file ({kibana-pull}201622[#201622]).
* Turns off the **Install All** button on the **Add Elastic Rules** page while rules are being installed ({kibana-pull}201731[#201731]).
* Turns off the **Add note** button in the alert details flyout if you don't have the appropriate permission ({kibana-pull}201707[#201707]).
* Removes fields with an `@` from the script processor ({kibana-pull}201548[#201548]).
* Fixes an issue that could interfere with Knowledge Base setup ({kibana-pull}201175[#201175]).
* Fixes an issue with Gemini streaming in the AI Assistant ({kibana-pull}201299[#201299]).
* Updates LangChain dependencies, adding support for the new Bedrock cross-region inference endpoints ({kibana-pull}198622[#198622]).
* Fixes a bug with threshold rules that prevented cardinality details from appearing ({kibana-pull}201162[#201162]).
* Fixes a bug that caused an entity engine to get stuck in the `Installing` status if the default Security data view didn't exist. With this fix, engines now correctly report the `Error` state ({kibana-pull}201140[#201140]).
* Fixes an issue that prevented you from successfully importing TSV files with asset criticality data if you're on Windows ({kibana-pull}199791[#199791]).
* Fixes asset criticality index issue when setting up entity engines concurrently ({kibana-pull}199486[#199486]).
* Fixes a bug where the `@timestamp` field wouldn't update upon asset criticality soft delete ({kibana-pull}196722[#196722]).
* Fixes a bug that prevented the save notification from displaying on duplicated Timelines with changes ({kibana-pull}198652[#198652]).
* Improves the flow for the Insights section in the alert details flyout ({kibana-pull}197349[#197349]).
* Fixes an issue where users without the {fleet} `read` permission were blocked from interacting with any onboarding card ({kibana-pull}202413[#202413]).
* Improves {elastic-defend} for Linux endpoints by enabling process information enrichment for file and network events when process events are disabled.
* Improves {elastic-defend} by refactoring the kernel driver to work around a `CRITICAL_PROCESS_DIED` bug check (BSOD) that can occur due to a conflict with CrowdStrike Falcon.
* Fixes an issue in {elastic-defend} versions 8.15.2 and 8.15.3 which can result in Windows boot failure `0xC000007B` referencing `ElasticElam.sys` or recovery mode prompt at boot. We have only received reports of this happening when {elastic-defend} is installed alongside CrowdStrike Falcon.
* Fixes an {elastic-defend} bug where the Linux system call (`setsid`) wasn't properly gathered for RHEL 9/CentOS Stream 9 process events.
* Fixes an issue where {elastic-defend} can enter an infinite loop if an external application opens and retains handles to files within {elastic-defend}s directory while it is processing a `get-file` response action. This can result in {elastic-defend} flooding Elasticsearch with documents until the handles are closed.
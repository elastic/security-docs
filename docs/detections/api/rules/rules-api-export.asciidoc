[[rules-api-export]]
=== Export rules

Exports rules to an `.ndjson` file. The following configuration items are also included in the `.ndjson` file:

* Actions
* Exception lists

You cannot export prebuilt rules, but they are available at https://github.com/elastic/detection-rules/tree/main/rules/.

NOTE: Console supports {es} APIs only. Console doesn't allow interactions with {kib} APIs. You must use `curl` or another HTTP tool instead. For more information, refer to {kibana-ref}/console-kibana.html[Run {es} API requests].

[IMPORTANT]
=================
Although detection rule actions are included in the exported file, the connectors used by the actions are not included. Use the {kibana-ref}/managing-saved-objects.html#managing-saved-objects-export-objects[Saved Objects] UI in Kibana (*Stack Management* -> *Kibana* -> *Saved Objects*) or the Saved Objects APIs (experimental) to {kibana-ref}/saved-objects-api-export.html[export] and {kibana-ref}/saved-objects-api-import.html[import] any necessary connectors _before_ you export and import the detection rules.

Similarly, any value lists used for rule exceptions are not included in rule exports or imports. Use the <<edit-value-lists, Upload value lists>> UI (*Detect* -> *Rules* -> *Upload value lists*) to export and import value lists separately.
=================

==== Request URL

`POST <kibana host>:<port>/api/detection_engine/rules/_export`


===== URL query parameters

[width="100%",options="header"]
|==============================================
|Name |Type |Description |Required

|`exclude_export_details` |Boolean |Determines whether a summary of the
exported rules is returned.|No, defaults to `false`.
|`file_name` |String |File name for saving the exported rules. |No, defaults to
`export.ndjson`
|==============================================

TIP: When using cURL to export rules to a file, use the `-O` and `-J` options
to save the rules to the file name specified in the URL.

==== Request body

An optional JSON `objects` array containing the `rule_id` fields of the rules
you want to export:

[width="100%",options="header"]
|==============================================
|Name |Type |Description |Required

|`objects` |String[] |Array of `rule_id` fields. |No, exports all rules when
unspecified.
|==============================================


===== Example request

Exports two rules without details and saves them to the `exported_rules.ndjson`
file:

[source,console]
--------------------------------------------------
POST api/detection_engine/rules/_export?exclude_export_details=true&file_name=exported_rules.ndjson
{
  "objects": [
    {
      "rule_id":"343580b5-c811-447c-8d2d-2ccf052c6900"
    },
    {
      "rule_id":"2938c9fa-53eb-4c04-b79c-33cbf041b18d"
    }
  ]
}
--------------------------------------------------
// KIBANA


==== Response code

`200`::
    Indicates a successful call.

===== Response payload

An `.ndjson` file containing the returned rules.

Example response payload:

[source,json]
--------------------------------------------------
{
    "id": "d4db8800-30df-11ec-88a5-fb21b48c9b4e",
    "updated_at": "2021-10-19T13:24:05.872Z",
    "updated_by": "elastic",
    "created_at": "2021-10-19T13:24:05.872Z",
    "created_by": "elastic",
    "name": "Rule 1",
    "tags": [],
    "interval": "30s",
    "enabled": true,
    "description": "Sample rule with single exception list",
    "risk_score": 1,
    "severity": "high",
    "output_index": ".siem-signals-default",
    "author": [],
    "false_positives": [],
    "from": "now-6m",
    "rule_id": "query-with-single-exception-list",
    "max_signals": 100,
    "risk_score_mapping": [],
    "severity_mapping": [],
    "threat": [],
    "to": "now",
    "references": [],
    "version": 1,
    "exceptions_list": [
        {
            "id": "cd62f410-30de-11ec-88a5-fb21b48c9b4e",
            "list_id": "simple_list",
            "namespace_type": "single",
            "type": "detection"
        }
    ],
    "immutable": false,
    "type": "query",
    "language": "kuery",
    "query": "host.name: *",
    "throttle": "no_actions",
    "actions": []
}
{
    "_version": "WzQwMiwxXQ==",
    "created_at": "2021-10-19T13:16:42.833Z",
    "created_by": "elastic",
    "description": "This is a sample endpoint type exception",
    "id": "cd62f410-30de-11ec-88a5-fb21b48c9b4e",
    "immutable": false,
    "list_id": "simple_list",
    "name": "Sample Endpoint Exception List",
    "namespace_type": "single",
    "os_types": [],
    "tags": [
        "user added string for a tag",
        "malware"
    ],
    "tie_breaker_id": "3e838fbe-9732-4014-9273-4b1b9bad5202",
    "type": "detection",
    "updated_at": "2021-10-19T13:16:42.835Z",
    "updated_by": "elastic",
    "version": 1
}
{
    "_version": "WzUwMiwxXQ==",
    "comments": [],
    "created_at": "2021-10-19T13:17:22.974Z",
    "created_by": "elastic",
    "description": "This is a sample endpoint type exception",
    "entries": [
        {
            "field": "actingProcess.file.signer",
            "operator": "excluded",
            "type": "exists"
        },
        {
            "field": "host.name",
            "operator": "included",
            "type": "match_any",
            "value": [
                "some host",
                "another host"
            ]
        }
    ],
    "id": "e54ffbe0-30de-11ec-88a5-fb21b48c9b4e",
    "item_id": "VjSeUlYdFEAjGNaQKq22CJwShH6wDbWUEYsHWJqnHIjrlSwSGsklcV5Ehwg6VgH055v47kkYadl93PvQOAhCAtjZEEU8zALxMOiS",
    "list_id": "simple_list",
    "name": "Sample Endpoint Exception List",
    "namespace_type": "single",
    "os_types": [
        "linux"
    ],
    "tags": [
        "user added string for a tag",
        "malware"
    ],
    "tie_breaker_id": "b9e0070a-ef3b-402e-85fc-7b02497f1369",
    "type": "simple",
    "updated_at": "2021-10-19T13:17:22.976Z",
    "updated_by": "elastic"
}
{
    "exported_rules_count": 1,
    "missing_rules": [],
    "missing_rules_count": 0,
    "exported_exception_list_count": 1,
    "exported_exception_list_item_count": 1,
    "missing_exception_list_item_count": 0,
    "missing_exception_list_items": [],
    "missing_exception_lists": [],
    "missing_exception_lists_count": 0
}
--------------------------------------------------

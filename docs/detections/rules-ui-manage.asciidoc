[[rules-ui-management]]
[role="xpack"]
== Manage detection rules

The Rules page allows you to view and manage all prebuilt and custom detection rules.

[role="screenshot"]
image::images/all-rules.png[The Rules page]

On the Rules page, you can:

* <<sort-filter-rules>>
* <<load-prebuilt-rules>>
* <<select-all-prebuilt-rules>>
* <<download-prebuilt-rules>>
* <<edit-rules-settings>>
* <<manage-rules-ui>>
* <<import-export-rules-ui>>
* <<troubleshoot-signals>>

[float]
[[sort-filter-rules]]
=== Sort and filter the rules list

To sort the rules list, click the *Rule*, *Last updated*, or *Enabled* column header.

TIP: To sort by any other column, turn on the *Technical preview* toggle above the table. This experimental table view allows advanced sorting capabilities. If you experience performance issues when working with the table, you can turn this setting off.

To filter the rules list, enter a search term in the search bar and press **Return**:

* Rule name — Enter a word or phrase from a rule's name.
* Index pattern — Enter an index pattern (such as `filebeat-*`) to display all rules that use it. 
* MITRE ATT&CK tactic or technique — Enter a MITRE ATT&CK tactic name (such as `Defense Evasion`) or technique number (such as `TA0005`) to display all associated rules.

NOTE: Searches for index patterns and MITRE ATT&CK tactics and techniques must match exactly, are case sensitive, and do _not_ support wildcards. For example, to find rules using the `filebeat-*` index pattern, the search term `filebeat-*` is valid, but `filebeat` and `file*` are not because they don't exactly match the index pattern. Likewise, the MITRE ATT&CK tactic `Defense Evasion` is valid, but `Defense`, `defense evasion`, and `Defense*` are not.

[float]
[[load-prebuilt-rules]]
=== Load and activate prebuilt Elastic rules

To load the {es-sec-app}'s <<prebuilt-rules, prebuilt rules>>, go to *Manage* -> *Rules* -> *Load Elastic prebuilt rules and Timeline templates*.

You can then activate whichever rules you want. If you delete any prebuilt rules, a button appears that enables you to reload all of the deleted ones.

[NOTE]
==============
Apart from the Elastic Endpoint rule, prebuilt rules are not activated by
default. If you want to modify a prebuilt rule, you must first duplicate it, then make your changes to the duplicated rule. All Elastic prebuilt rules are tagged with the word `Elastic`.

To learn how to enable detection rules in Elastic Security, watch the <<enable-detection-rules, tutorial>> at the end of this topic.
==============

[float]
[[select-all-prebuilt-rules]]
=== Select and duplicate all prebuilt rules

. Go to *Manage* -> *Rules*.
. Click *Select all _x_ rules* above the rules table.
. Click *Bulk actions* -> *Duplicate*.
. Select the *Custom rules* tab.

You can then modify the duplicated rules and, if required, delete the prebuilt ones.

[float]
[[download-prebuilt-rules]]
=== Download latest prebuilt Elastic rules

As of {stack} >=7.13.0, you can download the latest version of Elastic prebuilt rules outside of a regular release cycle. This feature ensures you have the latest detection capabilities before upgrading to the latest {stack}.

To download the latest version of prebuilt rules:

. In {kib}, go to *Management* -> *Integrations*.
. Search for "Prebuilt Security Detection Rules."
. Select the integration, then select the *Settings* tab. The integration settings page is displayed.
+
[role="screenshot"]
image::images/install-prebuilt-settings.png[]
+
. Click *Install Prebuilt Security Detection Rules assets*.
. Click *Install Prebuilt Security Detection Rules* to confirm the installation.
+
[role="screenshot"]
image::images/install-prebuilt-rules.png[]

[float]
[[edit-rules-settings]]
=== Modify existing rules settings

You can edit an existing rule's settings, and can bulk edit index patterns, tags, and Timeline templates for multiple rules at once.

[NOTE]
====
For prebuilt Elastic rules, you can't modify most settings. You can only edit <<rule-schedule, rule actions>> and <<detections-ui-exceptions, add exceptions>>.

If you try to bulk edit with both prebuilt and custom rules selected, the action will affect only custom rules.
====

. Go to *Manage* -> *Rules*.
. Do one of the following:
* Edit a single rule: Select the *All actions* menu (*...*) on a rule, then select *Edit rule settings*. The *Edit rule settings* view opens, where you can modify the <<rules-ui-create, rule's settings>>.
* Bulk edit multiple rules: Select the rules you want to edit, then select an action from the *Bulk actions* menu:
** *Index patterns*: Add or delete the index patterns used by all selected rules.
** *Tags*: Add or delete tags on all selected rules.
** *Apply Timeline template*: Apply a specified <<timeline-templates-ui, Timeline template>> to the selected rules. You can also choose *None* to remove Timeline templates from the selected rules.
. On the flyout that opens, update the settings.
. If available, select *Overwrite all selected _x_* to overwrite the settings on the rules. For example, if you're adding tags to multiple rules, selecting *Overwrite all selected rules tags* removes all the rules' original tags and replaces them with the tags you specify.
. Click *Save*.

[float]
[[manage-rules-ui]]
=== Manage rules

You can duplicate, enable, disable, and delete rules:

. Go to *Manage* -> *Rules*.
. Do one of the following:
* Select the *All actions* menu (*...*) on a rule, then select an action.
* Select all the rules you want to modify, then select an action from the *Bulk actions* menu.
* To enable or disable a single rule, switch on the rule's *Enabled* toggle.

[float]
[[import-export-rules-ui]]
=== Export and import rules

You can export custom detection rules to an `.ndjson` file, which you can then import into another {elastic-sec} environment. 

[NOTE]
====
You cannot export Elastic prebuilt rules, but you can duplicate a prebuilt rule, then export the duplicated rule.

If you try to export with both prebuilt and custom rules selected, only the custom rules are exported.
====

The following configuration items are also included in the `.ndjson` file:

* Actions
* Exception lists

[IMPORTANT]
=================
Although detection rule actions are included in the exported file, the connectors used by the actions are not included. Use the {kibana-ref}/managing-saved-objects.html#managing-saved-objects-export-objects[Saved Objects] UI in Kibana (*Stack Management* -> *Kibana* -> *Saved Objects*) to export and import any necessary connectors _before_ you export and import the detection rules.

Similarly, any value lists used for rule exceptions are not included in rule exports or imports. Use the <<edit-value-lists, Upload value lists>> UI (*Detect* -> *Rules* -> *Upload value lists*) to export and import value lists separately.
=================

To export and import detection rules:

. Go to *Manage* -> *Rules*.
. To export rules:
.. In the rules table, select the rules you want to export.
.. Select *Bulk actions* -> *Export*, then save the exported file.
. To import rules:
+
NOTE: You need at least `Read` privileges for the `Action and Connectors` feature to import rules with actions. If you're importing rules without actions, `Action and Connectors` feature privileges are not required. Refer to <<enable-detections-ui>> for more information.

.. Click *Import rules*.
.. Drag and drop the file that contains the detection rules.
+
NOTE: Imported rules must be in an `.ndjson` file.
.. (Optional) Select *Overwrite existing detection rules with conflicting "rule_id"* to update existing rules if they match the `rule_id` value of any rules in the import file. Configuration data included with the rules, such as actions, is also overwritten.
.. (Optional) Select *Overwrite existing exception lists with conflicting "list_id"* to replace existing exception lists with exception lists from the import file if they have a matching `list_id` value.
.. Click *Import rule*.


[float]
[[enable-detection-rules]]
=== Tutorial: Enable detection rules
To learn how to enable detection rules in Elastic Security, watch the following tutorial.

++++
<script type="text/javascript" async src="https://play.vidyard.com/embed/v4.js"></script>
<img
  style="width: 100%; margin: auto; display: block;"
  class="vidyard-player-embed"
  src="https://play.vidyard.com/9Kcg8qJcHdcF9bXUc1XEQZ.jpg"
  data-uuid="9Kcg8qJcHdcF9bXUc1XEQZ"
  data-v="4"
  data-type="inline"
/>
</br>
++++

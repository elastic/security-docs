[[detection-engine-overview]]
[role="xpack"]

= Detections and alerts

Use the detection engine to create and manage rules and view the alerts
these rules create. Rules periodically search indices (such as `logs-*` and
`filebeat-*`) for suspicious source events and create alerts when a rule's
conditions are met. When an alert is created, its status is `Open`. To help
track investigations, an alert's <<detection-alert-status,status>> can be set as 
`Open`, `Acknowledged`, or `Closed`.

[role="screenshot"]
image::images/alert-page.png[Alerts page]

In addition to creating <<rules-ui-create, your own rules>>, enable
<<load-prebuilt-rules, Elastic prebuilt rules>> to immediately start detecting
suspicious activity. For detailed information on all the prebuilt rules, see the
<<prebuilt-rules>> section. Once the prebuilt rules are loaded and
running, <<tuning-detection-signals>> and <<add-exceptions>> explain
how to modify the rules to reduce false positives and get a better set of
actionable alerts. You can also use exceptions and value lists when creating or
modifying your own rules.

There are several special prebuilt rules you need to know about:

* <<endpoint-protection-rules, *Endpoint protection rules*>>: Automatically create alerts based on {elastic-defend}'s threat monitoring and prevention.

* <<external-alerts, *External Alerts*>>: Automatically creates an alert for
all incoming third-party system alerts (for example, Suricata alerts).

If you want to receive notifications via external systems, such as Slack or
email, when alerts are created, use the {kib}
{kibana-ref}/alerting-getting-started.html[Alerting and Actions] framework.

NOTE: To use {kib} Alerting for detection alert notifications, you need the
https://www.elastic.co/subscriptions[appropriate license].

After rules have started running, you can monitor their executions to verify
they are functioning correctly, as well as view, manage, and troubleshoot
alerts (see <<alerts-ui-manage>> and <<alerts-ui-monitor>>).

You can create and manage rules and alerts via the UI or the
<<rule-api-overview, Detections API>>.

[IMPORTANT]
==============
To make sure you can access Detections and manage rules, see
<<detections-permissions-section>>.
==============

[float]
[[cold-tier-detections]]
== Manage data in cold and frozen tiers

Cold data tiers store time series data that is accessed infrequently and rarely updated, while frozen data tiers hold time series data that is accessed even less frequently and never updated. If you are automating searches across different {ref}/data-tiers.html[data tiers] using rules, consider the following best practices and limitations.

[float]
[[best-practices-data-tiers]]
=== Best practices 

* **Retention in hot tier**: We recommend keeping data in the hot tier for at least 24 hours. {ilm-cap} policies that roll over data more frequently than once every 24 hours can increase the volume of frozen data queried by rules, leading to performance issues.
* **Replicas for mission-critical data**: Your data should have replicas if it must be constantly available. Since frozen tiers don't support replicas, shard unavailability can cause partial rule run failures. Shard unavailability may be also encountered during or after {stack} upgrades. If this happens, you can <<manually-run-rules,manually run>> the rule over the affected time period.

[float]
[[limitations-data-tiers]]
=== Limitations

Data tiers are a powerful and useful tool. When using them, keep the following limitations in mind:

* {ilm-cap} policies for indices controlled by {elastic-sec}, including alerts and list indices, must not be modified.
* Indicator match rule performance can be severely impacted by querying data in frozen tiers.
* Cold and frozen source data must have an {ilm} policy that keeps it in the hot or warm tiers for at least one day.

[float]
[[support-indicator-rules]]
== Limited support for indicator match rules

Indicator match rules provide a powerful capability to search your security data; however, their queries can consume significant deployment resources. When creating an <<create-indicator-rule, indicator match rule>>, we recommend limiting the time range of the indicator index query to the minimum period necessary for the desired rule coverage. For example, the default indicator index query `@timestamp > "now-30d/d"` searches specified indicator indices for indicators ingested during the past 30 days and rounds the query start time down to the nearest day (resolves to UTC `00:00:00`). Without this limitation, the rule will include all of the indicators in your indicator indices, which may extend the time it takes for the indicator index query to complete.

In addition, the following support restrictions are in place:

* Indicator match rules don't support cold or frozen data. Cold or frozen data in indices queried by indicator match rules must be older than the time range queried by the rule. If your data's timestamps are unreliable, you can exclude cold and frozen tier data using a <<exclude-cold-frozen-data-individual-rules,Query DSL filter>>. 
* Indicator match rules with an additional look-back time value greater than 24 hours are not supported.

[float]
[[detections-permissions]]
== Detections configuration and index privilege prerequisites

<<detections-permissions-section>> provides detailed information on all the
permissions required to initiate and use the Detections feature.

[float]
== Resolve UI error messages

Depending on your privileges and whether detection system indices have already
been created for the {kib} space, you might get one of these error messages when you 
open the *Alerts* or *Rules* page:

* *`Letâ€™s set up your detection engine`*
+
If you get this message, a user with specific privileges must visit the
*Alerts* or *Rules* page before you can view detection alerts and rules.
Refer to <<enable-detections-ui>> for a list of all the requirements.
+
NOTE: For *self-managed* {stack} deployments only, this message may be displayed
when the
<<detections-permissions, `xpack.encryptedSavedObjects.encryptionKey`>>
setting has not been added to the `kibana.yml` file. For more information, refer to <<detections-on-prem-requirements>>.

* *`Detection engine permissions required`*
+
If you get this message, you do not have the
<<detections-permissions, required privileges>> to view the *Detections* feature,
and you should contact your {kib} administrator.
+
NOTE: For *self-managed* {stack} deployments only, this message may be
displayed when the <<detections-permissions, `xpack.security.enabled`>>
setting is not enabled in the `elasticsearch.yml` file. For more information, refer to <<detections-on-prem-requirements>>.

[discrete]
[[detections-logsdb-index-mode]]
== Using logsdb index mode 

To learn how your rules and alerts are affected by using the {ref}/logs-data-stream.html[logsdb index mode], refer to <<detections-logsdb-index-mode-impact>>. 

[discrete]
[[manage-rule-dac]]
=== Manage rules as code

Utilize the https://dac-reference.readthedocs.io/en/latest/dac_concept_and_workflows.html[Detection-as-Code] (DaC) principles to externally manage your detection rules. 

The {elastic-sec} Labs team uses the https://github.com/elastic/detection-rules[detection-rules] repo to develop, test, and release {elastic-sec}'s <<prebuilt-rules, prebuilt rules>>. The repo provides DaC features and allows you to customize settings to simplify the setup for managing user rules with the DaCe pipeline.

To get started, refer to the https://github.com/elastic/detection-rules/blob/main/README.md#detections-as-code-dac[DaC documentation].
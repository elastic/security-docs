[[inbound-connection-to-an-unsecure-elasticsearch-node]]
=== Inbound Connection to an Unsecure Elasticsearch Node

Identifies Elasticsearch nodes that do not have Transport Layer Security (TLS), and/or lack authentication, and are accepting inbound network connections over the default Elasticsearch port.

*Rule type*: query

*Rule indices*:

* packetbeat-*

*Severity*: medium

*Risk score*: 47

*Runs every*: 5 minutes

*Searches indices from*: now-6m ({ref}/common-options.html#date-math[Date Math format], see also <<rule-schedule, `Additional look-back time`>>)

*Maximum alerts per execution*: 100

*References*:

* https://www.elastic.co/guide/en/elasticsearch/reference/current/configuring-security.html
* https://www.elastic.co/guide/en/beats/packetbeat/current/packetbeat-http-options.html#_send_all_headers

*Tags*:

* Elastic
* Network
* Threat Detection
* Initial Access

*Version*: 1

*Added ({stack} release)*: 7.10.0

*Rule authors*: Elastic

*Rule license*: Elastic License

==== Potential false positives

If you have front-facing proxies that provide authentication and TLS, this rule would need to be tuned to eliminate the source IP address of your reverse-proxy.

==== Investigation guide

This rule requires the addition of port `9200` and `send_all_headers` to the `HTTP` protocol configuration in `packetbeat.yml`. See the References section for additional configuration documentation.

==== Rule query


[source,js]
----------------------------------
event.category:network_traffic AND network.protocol:http AND status:OK
AND destination.port:9200 AND network.direction:inbound AND NOT
http.response.headers.content-type:"image/x-icon" AND NOT
_exists_:http.request.headers.authorization
----------------------------------

==== Threat mapping

*Framework*: MITRE ATT&CK^TM^

* Tactic:
** Name: Initial Access
** ID: TA0001
** Reference URL: https://attack.mitre.org/tactics/TA0001/
* Technique:
** Name: Exploit Public-Facing Application
** ID: T1190
** Reference URL: https://attack.mitre.org/techniques/T1190/

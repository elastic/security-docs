[[microsoft-build-engine-started-an-unusual-process]]
=== Microsoft Build Engine Started an Unusual Process

An instance of MSBuild, the Microsoft Build Engine, started a PowerShell script or the Visual C# Command Line Compiler. This technique is sometimes used to deploy a malicious payload using the Build Engine.

*Rule type*: new_terms

*Rule indices*: 

* winlogbeat-*
* logs-endpoint.events.*
* logs-windows.*
* logs-system.security*

*Severity*: low

*Risk score*: 21

*Runs every*: 5m

*Searches indices from*: now-9m ({ref}/common-options.html#date-math[Date Math format], see also <<rule-schedule, `Additional look-back time`>>)

*Maximum alerts per execution*: 100

*References*: 

* https://blog.talosintelligence.com/2020/02/building-bypass-with-msbuild.html

*Tags*: 

* Domain: Endpoint
* OS: Windows
* Use Case: Threat Detection
* Tactic: Defense Evasion
* Tactic: Execution
* Data Source: Elastic Defend

*Version*: 209

*Rule authors*: 

* Elastic

*Rule license*: Elastic License v2


==== Setup



If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2,
events will not define `event.ingested` and default fallback for EQL rules was not added until version 8.2.
Hence for this rule to work effectively, users will need to add a custom ingest pipeline to populate
`event.ingested` to @timestamp.
For more details on adding a custom ingest pipeline refer - https://www.elastic.co/guide/en/fleet/current/data-streams-pipeline-tutorial.html


==== Rule query


[source, js]
----------------------------------
host.os.type:windows and event.category:process and event.type:start and process.parent.name:("MSBuild.exe" or "msbuild.exe") and
process.name:("csc.exe" or "iexplore.exe" or "powershell.exe")

----------------------------------

*Framework*: MITRE ATT&CK^TM^

* Tactic:
** Name: Defense Evasion
** ID: TA0005
** Reference URL: https://attack.mitre.org/tactics/TA0005/
* Technique:
** Name: Obfuscated Files or Information
** ID: T1027
** Reference URL: https://attack.mitre.org/techniques/T1027/
* Sub-technique:
** Name: Compile After Delivery
** ID: T1027.004
** Reference URL: https://attack.mitre.org/techniques/T1027/004/
* Technique:
** Name: Trusted Developer Utilities Proxy Execution
** ID: T1127
** Reference URL: https://attack.mitre.org/techniques/T1127/
* Sub-technique:
** Name: MSBuild
** ID: T1127.001
** Reference URL: https://attack.mitre.org/techniques/T1127/001/

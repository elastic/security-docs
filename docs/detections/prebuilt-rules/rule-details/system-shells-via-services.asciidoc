[[system-shells-via-services]]
=== System Shells via Services

Windows services typically run as SYSTEM and can be used as a privilege escalation opportunity. Malware or penetration testers may run a shell as a service to gain SYSTEM permissions.

*Rule type*: eql

<<<<<<< HEAD
*Rule indices*: 

* winlogbeat-*
* logs-endpoint.events.process-*
* logs-windows.*
* endgame-*
* logs-system.security*
* logs-sentinel_one_cloud_funnel.*
* logs-m365_defender.event-*
* logs-crowdstrike.fdr*
=======
*Rule indices*:

* winlogbeat-*
* logs-endpoint.events.*
* logs-windows.*
>>>>>>> 7c79a644 (8.17.0 Release notes  (#6224))

*Severity*: medium

*Risk score*: 47

<<<<<<< HEAD
*Runs every*: 5m
=======
*Runs every*: 5 minutes
>>>>>>> 7c79a644 (8.17.0 Release notes  (#6224))

*Searches indices from*: now-9m ({ref}/common-options.html#date-math[Date Math format], see also <<rule-schedule, `Additional look-back time`>>)

*Maximum alerts per execution*: 100

<<<<<<< HEAD
*References*: None

*Tags*: 

* Domain: Endpoint
* OS: Windows
* Use Case: Threat Detection
* Tactic: Persistence
* Tactic: Execution
* Resources: Investigation Guide
* Data Source: Elastic Endgame
* Data Source: Elastic Defend
* Data Source: SentinelOne
* Data Source: Microsoft Defender for Endpoint
* Data Source: System
* Data Source: Crowdstrike

*Version*: 415

*Rule authors*: 

* Elastic

*Rule license*: Elastic License v2


==== Investigation guide



*Triage and analysis*



*Investigating System Shells via Services*


Attackers may configure existing services or create new ones to execute system shells to elevate their privileges from administrator to SYSTEM. They can also configure services to execute these shells with persistence payloads.

This rule looks for system shells being spawned by `services.exe`, which is compatible with the above behavior.

> **Note**:
> This investigation guide uses the https://www.elastic.co/guide/en/security/master/invest-guide-run-osquery.html[Osquery Markdown Plugin] introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.


*Possible investigation steps*


- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify how the service was created or modified. Look for registry changes events or Windows events related to service activities (for example, 4697 and/or 7045).
  - Examine the created and existent services, the executables or drivers referenced, and command line arguments for suspicious entries.
    - !{osquery{"label":"Osquery - Retrieve All Services","query":"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services"}}
    - !{osquery{"label":"Osquery - Retrieve Services Running on User Accounts","query":"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\nuser_account == null)\n"}}
    - !{osquery{"label":"Osquery - Retrieve Service Unsigned Executables with Virustotal Link","query":"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\n"}}
  - Retrieve the referenced files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.
- Identify the user account that performed the action and whether it should perform this kind of action.
=======
*Tags*:

* Elastic
* Host
* Windows
* Threat Detection
* Persistence
* Investigation Guide

*Version*: 102 (<<system-shells-via-services-history, version history>>)

*Added ({stack} release)*: 7.6.0

*Last modified ({stack} release)*: 8.6.0

*Rule authors*: Elastic

*Rule license*: Elastic License v2

==== Investigation guide


[source,markdown]
----------------------------------
## Triage and analysis

### Investigating System Shells via Services

Attackers may configure existing services or create new ones to execute system shells to elevate their privileges from
administrator to SYSTEM. They can also configure services to execute these shells with persistence payloads.

This rule looks for system shells being spawned by `services.exe`, which is compatible with the above behavior.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify how the service was created or modified. Look for registry changes events or Windows events related to
service activities (for example, 4697 and/or 7045).
  - Identify the user account that performed the action and whether it should perform this kind of action.
>>>>>>> 7c79a644 (8.17.0 Release notes  (#6224))
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.
- Check for commands executed under the spawned shell.

<<<<<<< HEAD

*False positive analysis*


- This activity should not happen legitimately. The security team should address any potential benign true positive (B-TP), as this configuration can put the user and the domain at risk.


*Response and remediation*


- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.
- Delete the service or restore it to the original configuration.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).
=======
### False positive analysis

- This activity should not happen legitimately. The security team should address any potential benign true positive
(B-TP), as this configuration can put the user and the domain at risk.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Delete the service or restore it to the original configuration.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
----------------------------------
>>>>>>> 7c79a644 (8.17.0 Release notes  (#6224))


==== Rule query


<<<<<<< HEAD
[source, js]
----------------------------------
process where host.os.type == "windows" and event.type == "start" and
  process.parent.name : "services.exe" and
  process.name : ("cmd.exe", "powershell.exe", "pwsh.exe", "powershell_ise.exe") and

  /* Third party FP's */
  not process.args : "NVDisplay.ContainerLocalSystem"

----------------------------------

=======
[source,js]
----------------------------------
process where event.type == "start" and process.parent.name :
"services.exe" and process.name : ("cmd.exe", "powershell.exe",
"pwsh.exe", "powershell_ise.exe") and /* Third party FP's */ not
process.args : "NVDisplay.ContainerLocalSystem"
----------------------------------

==== Threat mapping

>>>>>>> 7c79a644 (8.17.0 Release notes  (#6224))
*Framework*: MITRE ATT&CK^TM^

* Tactic:
** Name: Persistence
** ID: TA0003
** Reference URL: https://attack.mitre.org/tactics/TA0003/
* Technique:
** Name: Create or Modify System Process
** ID: T1543
** Reference URL: https://attack.mitre.org/techniques/T1543/
<<<<<<< HEAD
* Sub-technique:
** Name: Windows Service
** ID: T1543.003
** Reference URL: https://attack.mitre.org/techniques/T1543/003/
* Tactic:
** Name: Execution
** ID: TA0002
** Reference URL: https://attack.mitre.org/tactics/TA0002/
* Technique:
** Name: Command and Scripting Interpreter
** ID: T1059
** Reference URL: https://attack.mitre.org/techniques/T1059/
* Sub-technique:
** Name: PowerShell
** ID: T1059.001
** Reference URL: https://attack.mitre.org/techniques/T1059/001/
* Sub-technique:
** Name: Windows Command Shell
** ID: T1059.003
** Reference URL: https://attack.mitre.org/techniques/T1059/003/
=======

[[system-shells-via-services-history]]
==== Rule version history

Version 102 (8.6.0 release)::
* Formatting only

Version 101 (8.5.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
process where event.type in ("start", "process_started") and
process.parent.name : "services.exe" and process.name : ("cmd.exe",
"powershell.exe", "pwsh.exe", "powershell_ise.exe") and /* Third
party FP's */ not process.args : "NVDisplay.ContainerLocalSystem"
----------------------------------

Version 14 (8.4.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
process where event.type in ("start", "process_started") and
process.parent.name : "services.exe" and process.name : ("cmd.exe",
"powershell.exe", "pwsh.exe", "powershell_ise.exe") and /* Third
party FP's */ not process.args : "NVDisplay.ContainerLocalSystem"
----------------------------------

Version 12 (8.3.0 release)::
* Formatting only

Version 11 (8.2.0 release)::
* Formatting only

Version 10 (7.16.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
process where event.type in ("start", "process_started") and
process.parent.name : "services.exe" and process.name : ("cmd.exe",
"powershell.exe") and /* Third party FP's */ not process.args :
"NVDisplay.ContainerLocalSystem"
----------------------------------

Version 9 (7.13.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
event.category:process and event.type:(start or process_started) and
process.parent.name:services.exe and process.name:(cmd.exe or
powershell.exe)
----------------------------------

Version 8 (7.12.0 release)::
* Formatting only

Version 7 (7.11.2 release)::
* Formatting only

Version 6 (7.11.0 release)::
* Formatting only

Version 5 (7.10.0 release)::
* Formatting only

Version 4 (7.9.1 release)::
* Formatting only

Version 3 (7.9.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
event.action:"Process Create (rule: ProcessCreate)" and
process.parent.name:services.exe and process.name:(cmd.exe or
powershell.exe)
----------------------------------

Version 2 (7.7.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
event.action:"Process Create (rule: ProcessCreate)" and
process.parent.name:"services.exe" and process.name:("cmd.exe" or
"powershell.exe")
----------------------------------

>>>>>>> 7c79a644 (8.17.0 Release notes  (#6224))

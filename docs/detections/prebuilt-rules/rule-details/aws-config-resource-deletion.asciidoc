[[aws-config-resource-deletion]]
=== AWS Config Resource Deletion

Identifies attempts to delete an AWS Config Service resource. An adversary may tamper with Config services in order to reduce visibility into the security posture of an account and / or its workload instances.

*Rule type*: query

*Rule indices*:

* filebeat-*
* logs-aws*

*Severity*: low

*Risk score*: 21

*Runs every*: 10 minutes

*Searches indices from*: now-60m ({ref}/common-options.html#date-math[Date Math format], see also <<rule-schedule, `Additional look-back time`>>)

*Maximum alerts per execution*: 100

*References*:

* https://docs.aws.amazon.com/config/latest/developerguide/how-does-config-work.html
* https://docs.aws.amazon.com/config/latest/APIReference/API_Operations.html

*Tags*:

* Elastic
* Cloud
* AWS
* Continuous Monitoring
* SecOps
* Monitoring
* has_guide

*Version*: 101 (<<aws-config-resource-deletion-history, version history>>)

*Added ({stack} release)*: 7.9.0

*Last modified ({stack} release)*: 8.5.0

*Rule authors*: Elastic, Austin Songer

*Rule license*: Elastic License v2

==== Potential false positives

Privileged IAM users with security responsibilities may be expected to make changes to the Config service in order to align with local security policies and requirements. Automation, orchestration, and security tools may also make changes to the Config service, where they are used to automate setup or configuration of AWS accounts. Other kinds of user or service contexts do not commonly make changes to this service.

==== Investigation guide


[source,markdown]
----------------------------------
## Triage and analysis

### Investigating AWS Config Resource Deletion

AWS Config provides a detailed view of the configuration of AWS resources in your AWS account. This includes how the
resources are related to one another and how they were configured in the past so that you can see how the configurations
and relationships change over time.

This rule looks for the deletion of AWS Config resources using various API actions. Attackers can do this to cover their
tracks and impact security monitoring that relies on these sources.

#### Possible investigation steps

- Identify the user account that performed the action and whether it should perform this kind of action.
- Identify the AWS resource that was involved and its criticality, ownership, and role in the environment. Also investigate
if the resource is security-related.
- Investigate other alerts associated with the user account during the past 48 hours.
- Contact the account and resource owners and confirm whether they are aware of this activity.
- Check if this operation was approved and performed according to the organization's change management policy.
- Considering the source IP address and geolocation of the user who issued the command:
    - Do they look normal for the calling user?
    - If the source is an EC2 IP address, is it associated with an EC2 instance in one of your accounts or is the source
    IP from an EC2 instance that's not under your control?
    - If it is an authorized EC2 instance, is the activity associated with normal behavior for the instance role or roles?
    Are there any other alerts or signs of suspicious activity involving this instance?
- If you suspect the account has been compromised, scope potentially compromised assets by tracking servers, services,
and data accessed by the account in the last 24 hours.

### False positive analysis

- If this rule is noisy in your environment due to expected activity, consider adding exceptions â€” preferably with a
combination of user and IP address conditions.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Disable or limit the account during the investigation and response.
- Identify the possible impact of the incident and prioritize accordingly; the following actions can help you gain context:
    - Identify the account role in the cloud environment.
    - Assess the criticality of affected services and servers.
    - Work with your IT team to identify and minimize the impact on users.
    - Identify if the attacker is moving laterally and compromising other accounts, servers, or services.
    - Identify any regulatory or legal ramifications related to this activity.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords or delete API keys as needed to revoke the attacker's access to the environment. Work with
your IT teams to minimize the impact on business operations during these actions.
- Check if unauthorized new users were created, remove unauthorized new accounts, and request password resets for other IAM users.
- Consider enabling multi-factor authentication for users.
- Review the permissions assigned to the implicated user to ensure that the least privilege principle is being followed.
- Implement security best practices [outlined](https://aws.amazon.com/premiumsupport/knowledge-center/security-best-practices/) by AWS.
- Take the actions needed to return affected systems, data, or services to their normal operational levels.
- Identify the initial vector abused by the attacker and take action to prevent reinfection via the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
----------------------------------


==== Rule query


[source,js]
----------------------------------
event.dataset:aws.cloudtrail and event.provider:config.amazonaws.com
and event.action:(DeleteConfigRule or DeleteOrganizationConfigRule
or DeleteConfigurationAggregator or DeleteConfigurationRecorder or
DeleteConformancePack or DeleteOrganizationConformancePack or
DeleteDeliveryChannel or DeleteRemediationConfiguration or
DeleteRetentionConfiguration)
----------------------------------

==== Threat mapping

*Framework*: MITRE ATT&CK^TM^

* Tactic:
** Name: Defense Evasion
** ID: TA0005
** Reference URL: https://attack.mitre.org/tactics/TA0005/
* Technique:
** Name: Impair Defenses
** ID: T1562
** Reference URL: https://attack.mitre.org/techniques/T1562/

[[aws-config-resource-deletion-history]]
==== Rule version history

Version 101 (8.5.0 release)::
* Formatting only

Version 8 (8.4.0 release)::
* Rule name changed from: AWS Config Service Tampering
Version 6 (7.13.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
event.dataset: aws.cloudtrail and event.action: DeleteConfigRule and
event.provider: config.amazonaws.com
----------------------------------

Version 5 (7.12.0 release)::
* Formatting only

Version 4 (7.11.2 release)::
* Formatting only

Version 3 (7.11.0 release)::
* Formatting only

Version 2 (7.10.0 release)::
* Formatting only


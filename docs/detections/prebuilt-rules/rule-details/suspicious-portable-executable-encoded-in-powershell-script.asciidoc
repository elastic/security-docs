[[suspicious-portable-executable-encoded-in-powershell-script]]
=== Suspicious Portable Executable Encoded in Powershell Script

Detects the presence of portable executables (PE) in a PowerShell script by looking for its encoded header. Attackers embed PEs into PowerShell scripts for injecting them into the memory, avoiding defenses by not writing to disk.

*Rule type*: query

*Rule indices*:

* winlogbeat-*
* logs-windows.*

*Severity*: medium

*Risk score*: 47

*Runs every*: 5 minutes

*Searches indices from*: now-9m ({ref}/common-options.html#date-math[Date Math format], see also <<rule-schedule, `Additional look-back time`>>)

*Maximum alerts per execution*: 100

*References*:

* https://github.com/atc-project/atc-data/blob/master/docs/Logging_Policies/LP_0109_windows_powershell_script_block_log.md

*Tags*:

* Elastic
* Host
* Windows
* Threat Detection
* Execution

*Version*: 4 (<<suspicious-portable-executable-encoded-in-powershell-script-history, version history>>)

*Added ({stack} release)*: 7.16.0

*Last modified ({stack} release)*: 8.1.0

*Rule authors*: Elastic

*Rule license*: Elastic License v2

==== Investigation guide


[source,markdown]
----------------------------------
## Triage and analysis.

### Investigating Suspicious Portable Executable Encoded in Powershell Script

PowerShell is one of the main tools used by system administrators for automation, report routines, and other tasks.

Attackers can abuse PowerShell in-memory capabilities to inject executables into memory without touching the disk,
bypassing antivirus software. These executables are generally base64 encoded.

#### Possible investigation steps:

- Examine script content that triggered the detection. 
- Investigate script execution chain (parent process tree).
- Inspect any file or network events from the suspicious PowerShell host process instance.
- If the action is suspicious for the user, check for any other activities done by the user in the last 48 hours.

### False Positive Analysis

- Verify whether the script content is malicious/harmful.

### Related Rules

- PowerShell Reflection Assembly Load - e26f042e-c590-4e82-8e05-41e81bd822ad
- PowerShell Suspicious Payload Encoded and Compressed - 81fe9dc6-a2d7-4192-a2d8-eed98afc766a
- PowerShell PSReflect Script - 56f2e9b5-4803-4e44-a0a4-a52dc79d57fe

### Response and Remediation

- Immediate response should be taken to validate, investigate, and potentially contain the activity to prevent further
post-compromise behavior.

## Config

The 'PowerShell Script Block Logging' logging policy must be enabled.
Steps to implement the logging policy with with Advanced Audit Configuration:

```
Computer Configuration > 
Administrative Templates > 
Windows PowerShell > 
Turn on PowerShell Script Block Logging (Enable)
```

Steps to implement the logging policy via registry:

```
reg add "hklm\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging" /v EnableScriptBlockLogging /t REG_DWORD /d 1
```

----------------------------------


==== Rule query


[source,js]
----------------------------------
event.category:process and powershell.file.script_block_text : (
TVqQAAMAAAAEAAAA )
----------------------------------

==== Threat mapping

*Framework*: MITRE ATT&CK^TM^

* Tactic:
** Name: Execution
** ID: TA0002
** Reference URL: https://attack.mitre.org/tactics/TA0002/
* Technique:
** Name: Command and Scripting Interpreter
** ID: T1059
** Reference URL: https://attack.mitre.org/techniques/T1059/

[[suspicious-portable-executable-encoded-in-powershell-script-history]]
==== Rule version history

Version 4 (8.1.0 release)::
* Formatting only

Version 3 (8.0.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
event.code:"4104" and powershell.file.script_block_text : (
TVqQAAMAAAAEAAAA )
----------------------------------


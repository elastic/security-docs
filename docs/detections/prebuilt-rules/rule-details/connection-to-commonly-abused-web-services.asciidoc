[[connection-to-commonly-abused-web-services]]
=== Connection to Commonly Abused Web Services

Adversaries may implement command and control (C2) communications that use common web services to hide their activity. This attack technique is typically targeted at an organization and uses web services common to the victim network, which allows the adversary to blend into legitimate traffic activity. These popular services are typically targeted since they have most likely been used before compromise, which helps malicious traffic blend in.

*Rule type*: eql

*Rule indices*:

* logs-endpoint.events.*

*Severity*: low

*Risk score*: 21

*Runs every*: 5 minutes

*Searches indices from*: now-9m ({ref}/common-options.html#date-math[Date Math format], see also <<rule-schedule, `Additional look-back time`>>)

*Maximum alerts per execution*: 100

*Tags*:

* Elastic
* Host
* Windows
* Threat Detection
* Command and Control

*Version*: 8 (<<connection-to-commonly-abused-web-services-history, version history>>)

*Added ({stack} release)*: 7.11.0

*Last modified ({stack} release)*: 8.2.0

*Rule authors*: Elastic

*Rule license*: Elastic License v2

==== Investigation guide


[source,markdown]
----------------------------------
## Triage and analysis

### Investigating Connection to Commonly Abused Web Services

Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised
system. Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the
likelihood that hosts within a network are already communicating with them prior to a compromise.

This rule looks for processes outside known legitimate program locations communicating with a list of services that can
be abused for exfiltration or command and control.

#### Possible investigation steps

- Investigate the script execution chain (parent process tree).
- Investigate other alerts related to the user/host in the last 48 hours.
- Verify whether the digital signature exists in the executable.
- Identify the kind of the operation (upload, download, tunneling, etc.).
- Use a sandboxed malware analysis system to perform analysis on the executable.
- Use the PowerShell Get-FileHash cmdlet to get the SHA-256 hash value of the file.
  - Search for the existence of this file in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This rule has a high chance to produce false positives because it detects communication with legitimate services. Noisy
false positives can be added as exceptions.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
- Implement any temporary network rules, procedures, and segmentation required to contain the malware.

----------------------------------


==== Rule query


[source,js]
----------------------------------
network where network.protocol == "dns" and process.name != null
and user.id not in ("S-1-5-18", "S-1-5-19", "S-1-5-20") and /* Add
new WebSvc domains here */ dns.question.name : (
"raw.githubusercontent.*", "*.pastebin.*",
"*drive.google.*", "*docs.live.*",
"*api.dropboxapi.*", "*dropboxusercontent.*",
"*onedrive.*", "*4shared.*", "*.file.io",
"*filebin.net", "*slack-files.com", "*ghostbin.*",
"*ngrok.*", "*portmap.*", "*serveo.net",
"*localtunnel.me", "*pagekite.me", "*localxpose.io",
"*notabug.org", "rawcdn.githack.*",
"paste.nrecom.net", "zerobin.net", "controlc.com",
"requestbin.net", "cdn.discordapp.com",
"discordapp.com", "discord.com" ) and /* Insert noisy
false positives here */ not process.executable : (
"?:\\Program Files\\*.exe", "?:\\Program Files (x86)\\*.exe",
"?:\\Windows\\System32\\WWAHost.exe",
"?:\\Windows\\System32\\smartscreen.exe",
"?:\\Windows\\System32\\MicrosoftEdgeCP.exe",
"?:\\ProgramData\\Microsoft\\Windows
Defender\\Platform\\*\\MsMpEng.exe", "?:\\Users\\*\\AppData\\Loc
al\\Google\\Chrome\\Application\\chrome.exe",
"?:\\Users\\*\\AppData\\Local\\Programs\\Fiddler\\Fiddler.exe",
"?:\\Users\\*\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe",
"?:\\Users\\*\\AppData\\Local\\Microsoft\\OneDrive\\OneDrive.exe",
"?:\\Windows\\system32\\mobsync.exe",
"?:\\Windows\\SysWOW64\\mobsync.exe",
"?:\\Users\\*\\AppData\\Local\\Discord\\-*\\Discord.exe" )
----------------------------------

==== Threat mapping

*Framework*: MITRE ATT&CK^TM^

* Tactic:
** Name: Command and Control
** ID: TA0011
** Reference URL: https://attack.mitre.org/tactics/TA0011/
* Technique:
** Name: Web Service
** ID: T1102
** Reference URL: https://attack.mitre.org/techniques/T1102/


* Tactic:
** Name: Exfiltration
** ID: TA0010
** Reference URL: https://attack.mitre.org/tactics/TA0010/
* Technique:
** Name: Exfiltration Over Web Service
** ID: T1567
** Reference URL: https://attack.mitre.org/techniques/T1567/

[[connection-to-commonly-abused-web-services-history]]
==== Rule version history

Version 8 (8.2.0 release)::
* Formatting only

Version 7 (8.1.0 release)::
* Formatting only

Version 6 (8.0.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
network where network.protocol == "dns" and process.name != null
and user.id not in ("S-1-5-18", "S-1-5-19", "S-1-5-20") and /* Add
new WebSvc domains here */ dns.question.name : (
"raw.githubusercontent.*", "*.pastebin.*",
"*drive.google.*", "*docs.live.*",
"*api.dropboxapi.*", "*dropboxusercontent.*",
"*onedrive.*", "*4shared.*", "*.file.io",
"*filebin.net", "*slack-files.com", "*ghostbin.*",
"*ngrok.*", "*portmap.*", "*serveo.net",
"*localtunnel.me", "*pagekite.me", "*localxpose.io",
"*notabug.org", "rawcdn.githack.*",
"paste.nrecom.net", "zerobin.net", "controlc.com",
"requestbin.net" ) and /* Insert noisy false positives here */
not process.executable : ( "?:\\Program Files\\*.exe",
"?:\\Program Files (x86)\\*.exe",
"?:\\Windows\\System32\\WWAHost.exe",
"?:\\Windows\\System32\\smartscreen.exe",
"?:\\Windows\\System32\\MicrosoftEdgeCP.exe",
"?:\\ProgramData\\Microsoft\\Windows
Defender\\Platform\\*\\MsMpEng.exe", "?:\\Users\\*\\AppData\\Loc
al\\Google\\Chrome\\Application\\chrome.exe",
"?:\\Users\\*\\AppData\\Local\\Programs\\Fiddler\\Fiddler.exe",
"?:\\Users\\*\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe",
"?:\\Users\\*\\AppData\\Local\\Microsoft\\OneDrive\\OneDrive.exe",
"?:\\Windows\\system32\\mobsync.exe",
"?:\\Windows\\SysWOW64\\mobsync.exe" )
----------------------------------

Version 5 (7.16.0 release)::
* Formatting only

Version 4 (7.13.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
network where network.protocol == "dns" and /* Add new WebSvc
domains here */ dns.question.name : (
"*.githubusercontent.*", "*.pastebin.*",
"*drive.google.*", "*docs.live.*",
"*api.dropboxapi.*", "*dropboxusercontent.*",
"*onedrive.*", "*4shared.*", "*.file.io",
"*filebin.net", "*slack-files.com", "*ghostbin.*",
"*ngrok.*", "*portmap.*", "*serveo.net",
"*localtunnel.me", "*pagekite.me", "*localxpose.io",
"*notabug.org" ) and /* Insert noisy false positives here */
not process.name : ( "MicrosoftEdgeCP.exe",
"MicrosoftEdge.exe", "iexplore.exe", "chrome.exe",
"msedge.exe", "opera.exe", "firefox.exe",
"Dropbox.exe", "slack.exe", "svchost.exe",
"thunderbird.exe", "outlook.exe", "OneDrive.exe" )
----------------------------------

Version 3 (7.12.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
network where network.protocol == "dns" and /* Add new
WebSvc domains here */ wildcard(dns.question.name,
"*.githubusercontent.*",
"*.pastebin.*",
"*drive.google.*",
"*docs.live.*",
"*api.dropboxapi.*",
"*dropboxusercontent.*",
"*onedrive.*", "*4shared.*",
"*.file.io", "*filebin.net",
"*slack-files.com",
"*ghostbin.*", "*ngrok.*",
"*portmap.*", "*serveo.net",
"*localtunnel.me",
"*pagekite.me",
"*localxpose.io",
"*notabug.org" ) and
/* Insert noisy false positives here */ not process.name
in ("MicrosoftEdgeCP.exe",
"MicrosoftEdge.exe",
"iexplore.exe", "chrome.exe",
"msedge.exe", "opera.exe",
"firefox.exe", "Dropbox.exe",
"slack.exe", "svchost.exe",
"thunderbird.exe", "outlook.exe",
"OneDrive.exe")
----------------------------------

Version 2 (7.11.2 release)::
* Formatting only


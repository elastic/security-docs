[[uac-bypass-via-icmluautil-elevated-com-interface]]
=== UAC Bypass via ICMLuaUtil Elevated COM Interface

Identifies User Account Control (UAC) bypass attempts via the ICMLuaUtil Elevated COM interface. Attackers may attempt to bypass UAC to stealthily execute code with elevated permissions.

*Rule type*: eql

*Rule indices*:

* winlogbeat-*
* logs-endpoint.events.*

*Severity*: high

*Risk score*: 73

*Runs every*: 5 minutes

*Searches indices from*: now-9m ({ref}/common-options.html#date-math[Date Math format], see also <<rule-schedule, `Additional look-back time`>>)

*Maximum alerts per execution*: 100

*Tags*:

* Elastic
* Host
* Windows
* Threat Detection
* Privilege Escalation

*Version*: 1

*Added ({stack} release)*: 7.11.0

*Rule authors*: Elastic

*Rule license*: Elastic License

==== Rule query


[source,js]
----------------------------------
process where event.type in ("start", "process_started") and
process.parent.name == "dllhost.exe" and process.parent.args in
("/Processid:{3E5FC7F9-9A51-4367-9063-A120244FBEC7}",
"/Processid:{D2E7041B-2927-42FB-8E9F-7CE93B6DC937}") and
process.pe.original_file_name != "WerFault.exe"
----------------------------------

==== Threat mapping

*Framework*: MITRE ATT&CK^TM^

* Tactic:
** Name: Privilege Escalation
** ID: TA0004
** Reference URL: https://attack.mitre.org/tactics/TA0004/
* Technique:
** Name: Abuse Elevation Control Mechanism
** ID: T1548
** Reference URL: https://attack.mitre.org/techniques/T1548/

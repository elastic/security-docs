[[potential-remote-desktop-tunneling-detected]]
=== Potential Remote Desktop Tunneling Detected

Identifies potential use of an SSH utility to establish RDP over a reverse SSH Tunnel. This can be used by attackers to enable routing of network packets that would otherwise not reach their intended destination.

*Rule type*: eql

*Rule indices*:

* logs-endpoint.events.*
* winlogbeat-*
* logs-windows.*

*Severity*: high

*Risk score*: 73

*Runs every*: 5 minutes

*Searches indices from*: now-9m ({ref}/common-options.html#date-math[Date Math format], see also <<rule-schedule, `Additional look-back time`>>)

*Maximum alerts per execution*: 100

*References*:

* https://blog.netspi.com/how-to-access-rdp-over-a-reverse-ssh-tunnel/

*Tags*:

* Elastic
* Host
* Windows
* Threat Detection
* Command and Control

*Version*: 4 (<<potential-remote-desktop-tunneling-detected-history, version history>>)

*Added ({stack} release)*: 7.11.0

*Last modified ({stack} release)*: 7.16.0

*Rule authors*: Elastic

*Rule license*: Elastic License v2

==== Rule query


[source,js]
----------------------------------
process where event.type in ("start", "process_started") and /* RDP
port and usual SSH tunneling related switches in command line */
process.args : "*:3389" and process.args : ("-L", "-P", "-R", "-pw",
"-ssh")
----------------------------------

==== Threat mapping

*Framework*: MITRE ATT&CK^TM^

* Tactic:
** Name: Command and Control
** ID: TA0011
** Reference URL: https://attack.mitre.org/tactics/TA0011/
* Technique:
** Name: Protocol Tunneling
** ID: T1572
** Reference URL: https://attack.mitre.org/techniques/T1572/

[[potential-remote-desktop-tunneling-detected-history]]
==== Rule version history

Version 4 (7.16.0 release)::
* Formatting only

Version 3 (7.12.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
process where event.type in ("start", "process_started", "info") and
/* RDP port and usual SSH tunneling related switches in commandline */
wildcard(process.args, "*:3389") and wildcard(process.args,"-L", "-P",
"-R", "-pw", "-ssh")
----------------------------------

Version 2 (7.11.2 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
process where event.type in ("start", "process_started", "info") and
/* RDP port and usual SSH tunneling related switches in commandline */
wildcard(process.args, "*:3389") and wildcard(process.args,"-L", "-P",
"-R", "-pw", "-ssh")
----------------------------------


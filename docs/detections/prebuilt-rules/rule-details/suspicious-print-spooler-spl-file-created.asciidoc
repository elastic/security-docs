[[suspicious-print-spooler-spl-file-created]]
=== Suspicious Print Spooler SPL File Created

Detects attempts to exploit privilege escalation vulnerabilities related to the Print Spooler service including CVE-2020-1048 and CVE-2020-1337.

*Rule type*: eql

*Rule indices*:

* winlogbeat-*
* logs-endpoint.events.*
* logs-windows.*

*Severity*: high

*Risk score*: 73

*Runs every*: 5 minutes

*Searches indices from*: now-9m ({ref}/common-options.html#date-math[Date Math format], see also <<rule-schedule, `Additional look-back time`>>)

*Maximum alerts per execution*: 100

*References*:

* https://safebreach.com/Post/How-we-bypassed-CVE-2020-1048-Patch-and-got-CVE-2020-1337

*Tags*:

* Elastic
* Host
* Windows
* Threat Detection
* Privilege Escalation

*Version*: 101 (<<suspicious-print-spooler-spl-file-created-history, version history>>)

*Added ({stack} release)*: 7.10.0

*Last modified ({stack} release)*: 8.5.0

*Rule authors*: Elastic

*Rule license*: Elastic License v2

==== Investigation guide


[source,markdown]
----------------------------------
## Triage and analysis

### Investigating Suspicious Print Spooler SPL File Created

Print Spooler is a Windows service enabled by default in all Windows clients and servers. The service manages print jobs
by loading printer drivers, receiving files to be printed, queuing them, scheduling, etc.

The Print Spooler service has some known vulnerabilities that attackers can abuse to escalate privileges to SYSTEM, like
CVE-2020-1048 and CVE-2020-1337. This rule looks for unusual processes writing SPL files to the location
`?:\Windows\System32\spool\PRINTERS\`, which is an essential step in exploiting these vulnerabilities.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Investigate any abnormal behavior by the subject process such as network connections, registry or file modifications,
and any spawned child processes.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Inspect the host for suspicious or abnormal behavior in the alert timeframe.
- Retrieve the process executable and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell `Get-FileHash` cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- If this activity is expected and noisy in your environment, consider adding exceptions â€” preferably with a combination
of process executable and file conditions.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Ensure that the machine has the latest security updates and is not running legacy Windows versions.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
----------------------------------


==== Rule query


[source,js]
----------------------------------
file where event.type != "deletion" and file.extension : "spl" and
file.path : "?:\\Windows\\System32\\spool\\PRINTERS\\*" and not
process.name : ("spoolsv.exe",
"printfilterpipelinesvc.exe",
"PrintIsolationHost.exe", "splwow64.exe",
"msiexec.exe", "poqexec.exe")
----------------------------------

==== Threat mapping

*Framework*: MITRE ATT&CK^TM^

* Tactic:
** Name: Privilege Escalation
** ID: TA0004
** Reference URL: https://attack.mitre.org/tactics/TA0004/
* Technique:
** Name: Exploitation for Privilege Escalation
** ID: T1068
** Reference URL: https://attack.mitre.org/techniques/T1068/

[[suspicious-print-spooler-spl-file-created-history]]
==== Rule version history

Version 101 (8.5.0 release)::
* Rule name changed from: Suspicious PrintSpooler SPL File Created
Version 7 (8.4.0 release)::
* Formatting only

Version 5 (8.2.0 release)::
* Formatting only

Version 4 (7.13.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
event.category:file and not event.type:deletion and
file.extension:(spl or SPL) and
file.path:C\:\\Windows\\System32\\spool\\PRINTERS\\* and not
process.name:(spoolsv.exe or printfilterpipelinesvc.exe or
PrintIsolationHost.exe or splwow64.exe or msiexec.exe or poqexec.exe)
----------------------------------

Version 3 (7.12.0 release)::
* Formatting only

Version 2 (7.11.2 release)::
* Formatting only


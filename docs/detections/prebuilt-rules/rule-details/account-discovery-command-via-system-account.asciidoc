[[account-discovery-command-via-system-account]]
=== Account Discovery Command via SYSTEM Account

Identifies when the SYSTEM account uses an account discovery utility. This could be a sign of discovery activity after an adversary has achieved privilege escalation.

*Rule type*: eql

*Rule indices*:

* winlogbeat-*
* logs-endpoint.events.*
* logs-windows.*

*Severity*: low

*Risk score*: 21

*Runs every*: 5 minutes

*Searches indices from*: now-9m ({ref}/common-options.html#date-math[Date Math format], see also <<rule-schedule, `Additional look-back time`>>)

*Maximum alerts per execution*: 100

*Tags*:

* Elastic
* Host
* Windows
* Threat Detection
* Discovery

*Version*: 14 (<<account-discovery-command-via-system-account-history, version history>>)

*Added ({stack} release)*: 7.7.0

*Last modified ({stack} release)*: 8.4.0

*Rule authors*: Elastic

*Rule license*: Elastic License v2

==== Investigation guide


[source,markdown]
----------------------------------
## Triage and analysis

### Investigating Account Discovery Command via SYSTEM Account

After successfully compromising an environment, attackers may try to gain situational awareness to plan their next steps.
This can happen by running commands to enumerate network resources, users, connections, files, and installed security
software.

This rule looks for the execution of account discovery utilities using the SYSTEM account, which is commonly observed
after attackers successfully perform privilege escalation or exploit web applications.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
  - If the process tree includes a web-application server process such as w3wp, httpd.exe, nginx.exe and alike,
  investigate any suspicious file creation or modification in the last 48 hours to assess the presence of any potential
  webshell backdoor.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Determine how the SYSTEM account is being used. For example, users with administrator privileges can spawn a system
shell using Windows services, scheduled tasks or other third party utilities.

### False positive analysis

- Discovery activities are not inherently malicious if they occur in isolation. As long as the analyst did not identify
suspicious activity related to the user or host, such alerts can be dismissed.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved hosts to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection via the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
- Use the data collected through the analysis to investigate other machines affected in the environment.
----------------------------------


==== Rule query


[source,js]
----------------------------------
process where event.type in ("start", "process_started") and
(?process.Ext.token.integrity_level_name : "System" or
?winlog.event_data.IntegrityLevel : "System") and (process.name :
"whoami.exe" or (process.name : "net1.exe" and not
process.parent.name : "net.exe"))
----------------------------------

==== Threat mapping

*Framework*: MITRE ATT&CK^TM^

* Tactic:
** Name: Discovery
** ID: TA0007
** Reference URL: https://attack.mitre.org/tactics/TA0007/
* Technique:
** Name: System Owner/User Discovery
** ID: T1033
** Reference URL: https://attack.mitre.org/techniques/T1033/

[[account-discovery-command-via-system-account-history]]
==== Rule version history

Version 14 (8.4.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
process where event.type in ("start", "process_started") and
(?process.Ext.token.integrity_level_name : "System" or
?winlog.event_data.IntegrityLevel : "System") and (process.name :
"whoami.exe" or (process.name : "net1.exe" and not
process.parent.name : "net.exe"))
----------------------------------

Version 12 (8.3.0 release)::
* Formatting only

Version 11 (8.2.0 release)::
* Rule name changed from: Net command via SYSTEM account
+
* Updated query, changed from:
+
[source, js]
----------------------------------
process where event.type in ("start", "process_started") and
(process.Ext.token.integrity_level_name : "System" or
winlog.event_data.IntegrityLevel : "System") and process.name :
"whoami.exe" or (process.name : "net1.exe" and not
process.parent.name : "net.exe")
----------------------------------

Version 9 (8.1.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
process where event.type in ("start", "process_started") and
user.id in ("S-1-5-18", "S-1-5-19", "S-1-5-20") and process.name :
"whoami.exe" or (process.name : "net1.exe" and not
process.parent.name : "net.exe")
----------------------------------

Version 8 (7.16.0 release)::
* Formatting only

Version 7 (7.13.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
event.category:process and event.type:(start or process_started) and
(process.name:(whoami.exe or net.exe) or process.name:net1.exe and not
process.parent.name:net.exe) and user.name:SYSTEM
----------------------------------

Version 6 (7.12.0 release)::
* Formatting only

Version 5 (7.11.2 release)::
* Formatting only

Version 4 (7.10.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
event.category:process and event.type:(start or process_started) and
(process.name:net.exe or process.name:net1.exe and not
process.parent.name:net.exe) and user.name:SYSTEM
----------------------------------

Version 3 (7.9.1 release)::
* Formatting only

Version 2 (7.9.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
(process.name:net.exe or process.name:net1.exe and not
process.parent.name:net.exe) and user.name:SYSTEM and
event.action:"Process Create (rule: ProcessCreate)"
----------------------------------


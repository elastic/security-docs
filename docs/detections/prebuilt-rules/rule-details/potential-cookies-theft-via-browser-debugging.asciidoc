[[potential-cookies-theft-via-browser-debugging]]
=== Potential Cookies Theft via Browser Debugging

Identifies the execution of a Chromium based browser with the debugging process argument, which may indicate an attempt to steal authentication cookies. An adversary may steal web application or service session cookies and use them to gain access web applications or Internet services as an authenticated user without needing credentials.

*Rule type*: eql

<<<<<<< HEAD
*Rule indices*: 
=======
*Rule indices*:
>>>>>>> 7c79a644 (8.17.0 Release notes  (#6224))

* auditbeat-*
* winlogbeat-*
* logs-endpoint.events.*
* logs-windows.*

*Severity*: medium

*Risk score*: 47

<<<<<<< HEAD
*Runs every*: 5m
=======
*Runs every*: 5 minutes
>>>>>>> 7c79a644 (8.17.0 Release notes  (#6224))

*Searches indices from*: now-9m ({ref}/common-options.html#date-math[Date Math format], see also <<rule-schedule, `Additional look-back time`>>)

*Maximum alerts per execution*: 33

<<<<<<< HEAD
*References*: 
=======
*References*:
>>>>>>> 7c79a644 (8.17.0 Release notes  (#6224))

* https://github.com/defaultnamehere/cookie_crimes
* https://embracethered.com/blog/posts/2020/cookie-crimes-on-mirosoft-edge/
* https://github.com/rapid7/metasploit-framework/blob/master/documentation/modules/post/multi/gather/chrome_cookies.md
* https://posts.specterops.io/hands-in-the-cookie-jar-dumping-cookies-with-chromiums-remote-debugger-port-34c4f468844e

<<<<<<< HEAD
*Tags*: 

* Domain: Endpoint
* OS: Linux
* OS: Windows
* OS: macOS
* Use Case: Threat Detection
* Tactic: Credential Access
* Data Source: Elastic Defend

*Version*: 207

*Rule authors*: 

* Elastic

*Rule license*: Elastic License v2


==== Setup



*Setup*


If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2,
events will not define `event.ingested` and default fallback for EQL rules was not added until version 8.2.
Hence for this rule to work effectively, users will need to add a custom ingest pipeline to populate
`event.ingested` to @timestamp.
For more details on adding a custom ingest pipeline refer - https://www.elastic.co/guide/en/fleet/current/data-streams-pipeline-tutorial.html
=======
*Tags*:

* Elastic
* Host
* Linux
* Windows
* macOS
* Threat Detection
* Credential Access

*Version*: 100 (<<potential-cookies-theft-via-browser-debugging-history, version history>>)

*Added ({stack} release)*: 7.12.0

*Last modified ({stack} release)*: 8.5.0

*Rule authors*: Elastic

*Rule license*: Elastic License v2

==== Potential false positives

Developers performing browsers plugin or extension debugging.

==== Investigation guide


[source,markdown]
----------------------------------

----------------------------------
>>>>>>> 7c79a644 (8.17.0 Release notes  (#6224))


==== Rule query


<<<<<<< HEAD
[source, js]
----------------------------------
process where event.type in ("start", "process_started", "info") and
  process.name in (
             "Microsoft Edge",
             "chrome.exe",
             "Google Chrome",
             "google-chrome-stable",
             "google-chrome-beta",
             "google-chrome",
             "msedge.exe") and
   process.args : ("--remote-debugging-port=*",
                   "--remote-debugging-targets=*",
                   "--remote-debugging-pipe=*") and
   process.args : "--user-data-dir=*" and not process.args:"--remote-debugging-port=0"

----------------------------------

=======
[source,js]
----------------------------------
process where event.type in ("start", "process_started", "info") and
process.name in ( "Microsoft Edge",
"chrome.exe", "Google Chrome", "google-
chrome-stable", "google-chrome-beta",
"google-chrome", "msedge.exe") and process.args : ("--
remote-debugging-port=*", "--remote-debugging-
targets=*", "--remote-debugging-pipe=*") and
process.args : "--user-data-dir=*" and not process.args:"--remote-
debugging-port=0"
----------------------------------

==== Threat mapping

>>>>>>> 7c79a644 (8.17.0 Release notes  (#6224))
*Framework*: MITRE ATT&CK^TM^

* Tactic:
** Name: Credential Access
** ID: TA0006
** Reference URL: https://attack.mitre.org/tactics/TA0006/
* Technique:
** Name: Steal Web Session Cookie
** ID: T1539
** Reference URL: https://attack.mitre.org/techniques/T1539/
<<<<<<< HEAD
=======

[[potential-cookies-theft-via-browser-debugging-history]]
==== Rule version history

Version 100 (8.5.0 release)::
* Formatting only

Version 4 (8.4.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
process where event.type in ("start", "process_started", "info") and
process.name in ( "Microsoft Edge",
"chrome.exe", "Google Chrome", "google-
chrome-stable", "google-chrome-beta",
"google-chrome", "msedge.exe") and process.args : ("--
remote-debugging-port=*", "--remote-debugging-
targets=*", "--remote-debugging-pipe=*") and
process.args : "--user-data-dir=*" and not process.args:"--remote-
debugging-port=0"
----------------------------------

Version 2 (8.2.0 release)::
* Formatting only

>>>>>>> 7c79a644 (8.17.0 Release notes  (#6224))

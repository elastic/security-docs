[[service-control-spawned-via-script-interpreter]]
=== Service Control Spawned via Script Interpreter

<<<<<<< HEAD
Identifies Service Control (sc.exe) spawning from script interpreter processes to create, modify, or start services. This can potentially indicate an attempt to elevate privileges or maintain persistence.

*Rule type*: eql

*Rule indices*: 

* logs-endpoint.events.process-*
* logs-system.security*
* winlogbeat-*
* logs-windows.forwarded*
* endgame-*
* logs-m365_defender.event-*
* logs-crowdstrike.fdr*
=======
Identifies Service Control (sc.exe) spawning from script interpreter processes to create, modify, or start services. This could be indicative of adversary lateral movement but will be noisy if commonly done by admins.

*Rule type*: eql

*Rule indices*:

* logs-endpoint.events.*
* logs-system.*
* winlogbeat-*
>>>>>>> 7c79a644 (8.17.0 Release notes  (#6224))

*Severity*: low

*Risk score*: 21

<<<<<<< HEAD
*Runs every*: 5m
=======
*Runs every*: 5 minutes
>>>>>>> 7c79a644 (8.17.0 Release notes  (#6224))

*Searches indices from*: now-9m ({ref}/common-options.html#date-math[Date Math format], see also <<rule-schedule, `Additional look-back time`>>)

*Maximum alerts per execution*: 100

<<<<<<< HEAD
*References*: 

* https://www.elastic.co/security-labs/invisible-miners-unveiling-ghostengine

*Tags*: 

* Domain: Endpoint
* OS: Windows
* Use Case: Threat Detection
* Tactic: Privilege Escalation
* Tactic: Defense Evasion
* Tactic: Execution
* Data Source: Elastic Endgame
* Resources: Investigation Guide
* Data Source: Elastic Defend
* Data Source: System
* Data Source: Microsoft Defender for Endpoint
* Data Source: Crowdstrike

*Version*: 213

*Rule authors*: 

* Elastic

*Rule license*: Elastic License v2


==== Investigation guide



*Triage and analysis*



*Investigating Service Control Spawned via Script Interpreter*


Windows services are background processes that run with SYSTEM privileges and provide specific functionality or support to other applications and system components.

The `sc.exe` command line utility is used to manage and control Windows services on a local or remote computer. Attackers may use `sc.exe` to create, modify, and start services to elevate their privileges from administrator to SYSTEM.

> **Note**:
> This investigation guide uses the https://www.elastic.co/guide/en/security/master/invest-guide-run-osquery.html[Osquery Markdown Plugin] introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.


*Possible investigation steps*


- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Examine the command line, registry changes events, and Windows events related to service activities (for example, 4697 and/or 7045) for suspicious characteristics.
  - Examine the created and existent services, the executables or drivers referenced, and command line arguments for suspicious entries.
    - !{osquery{"label":"Osquery - Retrieve All Services","query":"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services"}}
    - !{osquery{"label":"Osquery - Retrieve Services Running on User Accounts","query":"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\nuser_account == null)\n"}}
    - !{osquery{"label":"Osquery - Retrieve Service Unsigned Executables with Virustotal Link","query":"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\n"}}
  - Retrieve the referenced files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.


*False positive analysis*


- This activity is not inherently malicious if it occurs in isolation. As long as the analyst did not identify suspicious activity related to the user, host, and service, such alerts can be dismissed.


*Response and remediation*


- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.
- Delete the service or restore it to the original configuration.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).
=======
*Tags*:

* Elastic
* Host
* Windows
* Threat Detection
* Lateral Movement

*Version*: 100 (<<service-control-spawned-via-script-interpreter-history, version history>>)

*Added ({stack} release)*: 7.6.0

*Last modified ({stack} release)*: 8.5.0

*Rule authors*: Elastic

*Rule license*: Elastic License v2

==== Investigation guide


[source,markdown]
----------------------------------

----------------------------------
>>>>>>> 7c79a644 (8.17.0 Release notes  (#6224))


==== Rule query


<<<<<<< HEAD
[source, js]
----------------------------------
/* This rule is not compatible with Sysmon due to user.id issues */

process where host.os.type == "windows" and event.type == "start" and
  (process.name : "sc.exe" or ?process.pe.original_file_name == "sc.exe") and
  process.parent.name : ("cmd.exe", "wscript.exe", "rundll32.exe", "regsvr32.exe",
                         "wmic.exe", "mshta.exe","powershell.exe", "pwsh.exe") and
  process.args:("config", "create", "start", "delete", "stop", "pause") and
  /* exclude SYSTEM SID - look for service creations by non-SYSTEM user */
  not user.id : "S-1-5-18"

----------------------------------

*Framework*: MITRE ATT&CK^TM^

* Tactic:
** Name: Privilege Escalation
** ID: TA0004
** Reference URL: https://attack.mitre.org/tactics/TA0004/
* Technique:
** Name: Create or Modify System Process
** ID: T1543
** Reference URL: https://attack.mitre.org/techniques/T1543/
* Sub-technique:
** Name: Windows Service
** ID: T1543.003
** Reference URL: https://attack.mitre.org/techniques/T1543/003/
* Tactic:
** Name: Execution
** ID: TA0002
** Reference URL: https://attack.mitre.org/tactics/TA0002/
* Technique:
** Name: Windows Management Instrumentation
** ID: T1047
** Reference URL: https://attack.mitre.org/techniques/T1047/
* Technique:
** Name: Command and Scripting Interpreter
** ID: T1059
** Reference URL: https://attack.mitre.org/techniques/T1059/
* Sub-technique:
** Name: PowerShell
** ID: T1059.001
** Reference URL: https://attack.mitre.org/techniques/T1059/001/
* Sub-technique:
** Name: Windows Command Shell
** ID: T1059.003
** Reference URL: https://attack.mitre.org/techniques/T1059/003/
* Sub-technique:
** Name: Visual Basic
** ID: T1059.005
** Reference URL: https://attack.mitre.org/techniques/T1059/005/
* Tactic:
** Name: Defense Evasion
** ID: TA0005
** Reference URL: https://attack.mitre.org/tactics/TA0005/
* Technique:
** Name: System Binary Proxy Execution
** ID: T1218
** Reference URL: https://attack.mitre.org/techniques/T1218/
* Sub-technique:
** Name: Regsvr32
** ID: T1218.010
** Reference URL: https://attack.mitre.org/techniques/T1218/010/
* Sub-technique:
** Name: Rundll32
** ID: T1218.011
** Reference URL: https://attack.mitre.org/techniques/T1218/011/
=======
[source,js]
----------------------------------
/* This rule is not compatible with Sysmon due to user.id issues */
process where event.type == "start" and (process.name : "sc.exe" or
process.pe.original_file_name == "sc.exe") and process.parent.name :
("cmd.exe", "wscript.exe", "rundll32.exe", "regsvr32.exe",
"wmic.exe", "mshta.exe","powershell.exe", "pwsh.exe") and
process.args:("config", "create", "start", "delete", "stop", "pause")
and /* exclude SYSTEM SID - look for service creations by non-SYSTEM
user */ not user.id : "S-1-5-18"
----------------------------------

==== Threat mapping

*Framework*: MITRE ATT&CK^TM^

* Tactic:
** Name: Lateral Movement
** ID: TA0008
** Reference URL: https://attack.mitre.org/tactics/TA0008/
* Technique:
** Name: Remote Services
** ID: T1021
** Reference URL: https://attack.mitre.org/techniques/T1021/

[[service-control-spawned-via-script-interpreter-history]]
==== Rule version history

Version 100 (8.5.0 release)::
* Formatting only

Version 13 (8.4.0 release)::
* Formatting only

Version 11 (8.2.0 release)::
* Formatting only

Version 10 (8.1.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
process where event.type == "start" and (process.name : "sc.exe" or
process.pe.original_file_name == "sc.exe") and process.parent.name :
("cmd.exe", "wscript.exe", "rundll32.exe", "regsvr32.exe",
"wmic.exe", "mshta.exe","powershell.exe", "pwsh.exe") and
process.args:("config", "create", "start", "delete", "stop", "pause")
and /* exclude SYSTEM SID - look for service creations by non-SYSTEM
user */ not user.id : "S-1-5-18"
----------------------------------

Version 9 (7.13.0 release)::
* Rule name changed from: Local Service Commands
+
* Updated query, changed from:
+
[source, js]
----------------------------------
event.category:process and event.type:(start or process_started) and
process.name:sc.exe and process.args:(config or create or failure or
start)
----------------------------------

Version 8 (7.12.0 release)::
* Formatting only

Version 7 (7.11.2 release)::
* Formatting only

Version 6 (7.11.0 release)::
* Formatting only

Version 5 (7.10.0 release)::
* Formatting only

Version 4 (7.9.1 release)::
* Formatting only

Version 3 (7.9.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
event.action:"Process Create (rule: ProcessCreate)" and
process.name:sc.exe and process.args:(config or create or failure or
start)
----------------------------------

Version 2 (7.7.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
event.action:"Process Create (rule: ProcessCreate)" and
process.name:sc.exe and process.args:("create" or "config" or
"failure" or "start")
----------------------------------

>>>>>>> 7c79a644 (8.17.0 Release notes  (#6224))

[[remote-file-download-via-mpcmdrun]]
=== Remote File Download via MpCmdRun

Identifies the Windows Defender configuration utility (MpCmdRun.exe) being used to download a remote file.

*Rule type*: eql

*Rule indices*:

* winlogbeat-*
* logs-endpoint.events.*
* logs-windows.*

*Severity*: medium

*Risk score*: 47

*Runs every*: 5 minutes

*Searches indices from*: now-9m ({ref}/common-options.html#date-math[Date Math format], see also <<rule-schedule, `Additional look-back time`>>)

*Maximum alerts per execution*: 100

*References*:

* https://twitter.com/mohammadaskar2/status/1301263551638761477
* https://www.bleepingcomputer.com/news/microsoft/microsoft-defender-can-ironically-be-used-to-download-malware/

*Tags*:

* Elastic
* Host
* Windows
* Threat Detection
* Command and Control
* has_guide

*Version*: 101 (<<remote-file-download-via-mpcmdrun-history, version history>>)

*Added ({stack} release)*: 7.10.0

*Last modified ({stack} release)*: 8.5.0

*Rule authors*: Elastic

*Rule license*: Elastic License v2

==== Investigation guide


[source,markdown]
----------------------------------
## Triage and analysis

### Investigating Remote File Download via MpCmdRun

Attackers commonly transfer tooling or malware from external systems into a compromised environment using the command
and control channel. However, they can also abuse signed utilities to drop these files.

The `MpCmdRun.exe` is a command-line tool part of Windows Defender and is used to manage various Microsoft Windows
Defender Antivirus settings and perform certain tasks. It can also be abused by attackers to download remote files,
including malware and offensive tooling. This rule looks for the patterns used to perform downloads using the utility.

#### Possible investigation steps

- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files
for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.
- Identify the user account that performed the action and whether it should perform this kind of action.
- Contact the account owner and confirm whether they are aware of this activity.
- Investigate other alerts associated with the user/host during the past 48 hours.
- Check the reputation of the domain or IP address used to host the downloaded file.
- Retrieve the file and determine if it is malicious:
  - Use a private sandboxed malware analysis system to perform analysis.
    - Observe and collect information about the following activities:
      - Attempts to contact external domains and addresses.
      - File and registry access, modification, and creation activities.
      - Service creation and launch activities.
      - Scheduled task creation.
  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.
    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.

### False positive analysis

- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.

### Response and remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
  - Implement temporary network rules, procedures, and segmentation to contain the malware.
  - Stop suspicious processes.
  - Immediately block the identified indicators of compromise (IoCs).
  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
  attackers could use to reinfect the system.
- Remove and block malicious artifacts identified during triage.
- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business
systems, and web services.
- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and
malware components.
- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.
- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the
mean time to respond (MTTR).
----------------------------------


==== Rule query


[source,js]
----------------------------------
process where event.type == "start" and (process.name :
"MpCmdRun.exe" or process.pe.original_file_name == "MpCmdRun.exe") and
process.args : "-DownloadFile" and process.args : "-url" and
process.args : "-path"
----------------------------------

==== Threat mapping

*Framework*: MITRE ATT&CK^TM^

* Tactic:
** Name: Command and Control
** ID: TA0011
** Reference URL: https://attack.mitre.org/tactics/TA0011/
* Technique:
** Name: Ingress Tool Transfer
** ID: T1105
** Reference URL: https://attack.mitre.org/techniques/T1105/

[[remote-file-download-via-mpcmdrun-history]]
==== Rule version history

Version 101 (8.5.0 release)::
* Formatting only

Version 9 (8.4.0 release)::
* Formatting only

Version 7 (8.3.0 release)::
* Formatting only

Version 6 (8.2.0 release)::
* Formatting only

Version 5 (7.13.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
event.category:process and event.type:(start or process_started) and
(process.name:MpCmdRun.exe or
process.pe.original_file_name:MpCmdRun.exe) and
process.args:(("-DownloadFile" or "-downloadfile") and "-url" and
"-path")
----------------------------------

Version 4 (7.12.0 release)::
* Formatting only

Version 3 (7.11.2 release)::
* Formatting only

Version 2 (7.11.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
event.category:process and event.type:(start or process_started) and
(process.name:MpCmdRun.exe or
process.pe.original_file_name:MpCmdRun.exe or
winlog.event_data.OriginalFileName:MpCmdRun.exe) and
process.args:(("-DownloadFile" or "-downloadfile") and "-url" and
"-path")
----------------------------------


[[potential-chroot-container-escape-via-mount]]
=== Potential Chroot Container Escape via Mount

Monitors for the execution of a file system mount followed by a chroot execution. Given enough permissions, a user within a container is capable of mounting the root file system of the host, and leveraging chroot to escape its containarized environment. This behavior pattern is very uncommon and should be investigated.

*Rule type*: eql

*Rule indices*: 

* logs-endpoint.events.*

*Severity*: medium

*Risk score*: 47

*Runs every*: 5m

*Searches indices from*: now-9m ({ref}/common-options.html#date-math[Date Math format], see also <<rule-schedule, `Additional look-back time`>>)

*Maximum alerts per execution*: 100

*References*: 

* https://book.hacktricks.xyz/v/portugues-ht/linux-hardening/privilege-escalation/escaping-from-limited-bash

*Tags*: 

* Domain: Endpoint
* OS: Linux
* Use Case: Threat Detection
* Tactic: Privilege Escalation
* Domain: Container
* Data Source: Elastic Defend

*Version*: 1

*Rule authors*: 

* Elastic

*Rule license*: Elastic License v2


==== Rule query


[source, js]
----------------------------------
sequence by host.id, process.parent.entity_id with maxspan=5m
  [process where host.os.type == "linux" and event.action == "exec" and event.type == "start" and
   process.name == "mount" and process.args : "/dev/sd*" and process.args_count >= 3 and
   process.parent.name in ("bash", "dash", "sh", "tcsh", "csh", "zsh", "ksh", "fish")]
  [process where host.os.type == "linux" and event.action == "exec" and event.type == "start" and
   process.name == "chroot"]

----------------------------------

*Framework*: MITRE ATT&CK^TM^

* Tactic:
** Name: Privilege Escalation
** ID: TA0004
** Reference URL: https://attack.mitre.org/tactics/TA0004/
* Technique:
** Name: Escape to Host
** ID: T1611
** Reference URL: https://attack.mitre.org/techniques/T1611/

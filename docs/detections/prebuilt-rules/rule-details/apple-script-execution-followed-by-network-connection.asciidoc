[[apple-script-execution-followed-by-network-connection]]
=== Apple Script Execution followed by Network Connection

Detects execution via the Apple script interpreter (osascript) followed by a network connection from the same process within a short time period. Adversaries may use malicious scripts for execution and command and control.

*Rule type*: eql

<<<<<<< HEAD
*Rule indices*: 

=======
*Rule indices*:

* auditbeat-*
>>>>>>> 7c79a644 (8.17.0 Release notes  (#6224))
* logs-endpoint.events.*

*Severity*: medium

*Risk score*: 47

<<<<<<< HEAD
*Runs every*: 5m
=======
*Runs every*: 5 minutes
>>>>>>> 7c79a644 (8.17.0 Release notes  (#6224))

*Searches indices from*: now-9m ({ref}/common-options.html#date-math[Date Math format], see also <<rule-schedule, `Additional look-back time`>>)

*Maximum alerts per execution*: 100

<<<<<<< HEAD
*References*: 
=======
*References*:
>>>>>>> 7c79a644 (8.17.0 Release notes  (#6224))

* https://developer.apple.com/library/archive/documentation/LanguagesUtilities/Conceptual/MacAutomationScriptingGuide/index.html
* https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml

<<<<<<< HEAD
*Tags*: 

* Domain: Endpoint
* OS: macOS
* Use Case: Threat Detection
* Tactic: Command and Control
* Tactic: Execution
* Data Source: Elastic Defend

*Version*: 106

*Rule authors*: 

* Elastic

*Rule license*: Elastic License v2


==== Setup



*Setup*


This rule requires data coming in from Elastic Defend.


*Elastic Defend Integration Setup*

Elastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.


*Prerequisite Requirements:*

- Fleet is required for Elastic Defend.
- To configure Fleet Server refer to the https://www.elastic.co/guide/en/fleet/current/fleet-server.html[documentation].


*The following steps should be executed in order to add the Elastic Defend integration on a macOS System:*

- Go to the Kibana home page and click "Add integrations".
- In the query bar, search for "Elastic Defend" and select the integration to see more details about it.
- Click "Add Elastic Defend".
- Configure the integration name and optionally add a description.
- Select the type of environment you want to protect, for MacOS it is recommended to select "Traditional Endpoints".
- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html[Helper guide].
- We suggest selecting "Complete EDR (Endpoint Detection and Response)" as a configuration setting, that provides "All events; all preventions"
- Enter a name for the agent policy in "New agent policy name". If other agent policies already exist, you can click the "Existing hosts" tab and select an existing policy instead.
For more details on Elastic Agent configuration settings, refer to the https://www.elastic.co/guide/en/fleet/current/agent-policy.html[helper guide].
- Click "Save and Continue".
- To complete the integration, select "Add Elastic Agent to your hosts" and continue to the next section to install the Elastic Agent on your hosts.
For more details on Elastic Defend refer to the https://www.elastic.co/guide/en/security/current/install-endpoint.html[helper guide].


==== Rule query


[source, js]
----------------------------------
sequence by host.id, process.entity_id with maxspan=30s
 [process where host.os.type == "macos" and event.type == "start" and process.name == "osascript"]
 [network where host.os.type == "macos" and event.type != "end" and process.name == "osascript" and destination.ip != "::1" and
  not cidrmatch(destination.ip,
    "10.0.0.0/8", "127.0.0.0/8", "169.254.0.0/16", "172.16.0.0/12", "192.0.0.0/24", "192.0.0.0/29", "192.0.0.8/32",
    "192.0.0.9/32", "192.0.0.10/32", "192.0.0.170/32", "192.0.0.171/32", "192.0.2.0/24", "192.31.196.0/24",
    "192.52.193.0/24", "192.168.0.0/16", "192.88.99.0/24", "224.0.0.0/4", "100.64.0.0/10", "192.175.48.0/24",
    "198.18.0.0/15", "198.51.100.0/24", "203.0.113.0/24", "240.0.0.0/4", "::1", "FE80::/10", "FF00::/8")]

----------------------------------
=======
*Tags*:

* Elastic
* Host
* macOS
* Threat Detection
* Command and Control
* Execution

*Version*: 100 (<<apple-script-execution-followed-by-network-connection-history, version history>>)

*Added ({stack} release)*: 7.11.0

*Last modified ({stack} release)*: 8.5.0

*Rule authors*: Elastic

*Rule license*: Elastic License v2

==== Rule query


[source,js]
----------------------------------
sequence by host.id, process.entity_id with maxspan=30s [process
where event.type == "start" and process.name == "osascript"] [network
where event.type != "end" and process.name == "osascript" and
destination.ip != "::1" and not cidrmatch(destination.ip,
"10.0.0.0/8", "127.0.0.0/8", "169.254.0.0/16", "172.16.0.0/12",
"192.0.0.0/24", "192.0.0.0/29", "192.0.0.8/32", "192.0.0.9/32",
"192.0.0.10/32", "192.0.0.170/32", "192.0.0.171/32", "192.0.2.0/24",
"192.31.196.0/24", "192.52.193.0/24", "192.168.0.0/16",
"192.88.99.0/24", "224.0.0.0/4", "100.64.0.0/10", "192.175.48.0/24",
"198.18.0.0/15", "198.51.100.0/24", "203.0.113.0/24", "240.0.0.0/4",
"::1", "FE80::/10", "FF00::/8")]
----------------------------------

==== Threat mapping
>>>>>>> 7c79a644 (8.17.0 Release notes  (#6224))

*Framework*: MITRE ATT&CK^TM^

* Tactic:
** Name: Execution
** ID: TA0002
** Reference URL: https://attack.mitre.org/tactics/TA0002/
* Technique:
** Name: Command and Scripting Interpreter
** ID: T1059
** Reference URL: https://attack.mitre.org/techniques/T1059/
<<<<<<< HEAD
* Sub-technique:
** Name: AppleScript
** ID: T1059.002
** Reference URL: https://attack.mitre.org/techniques/T1059/002/
=======


>>>>>>> 7c79a644 (8.17.0 Release notes  (#6224))
* Tactic:
** Name: Command and Control
** ID: TA0011
** Reference URL: https://attack.mitre.org/tactics/TA0011/
* Technique:
** Name: Ingress Tool Transfer
** ID: T1105
** Reference URL: https://attack.mitre.org/techniques/T1105/
<<<<<<< HEAD
=======

[[apple-script-execution-followed-by-network-connection-history]]
==== Rule version history

Version 100 (8.5.0 release)::
* Formatting only

Version 5 (8.4.0 release)::
* Formatting only

Version 3 (7.14.0 release)::
* Updated query, changed from:
+
[source, js]
----------------------------------
sequence by host.id, process.entity_id with maxspan=30s [process
where event.type == "start" and process.name == "osascript"] [network
where event.type != "end" and process.name == "osascript" and
destination.ip != "::1" and not cidrmatch(destination.ip,
"10.0.0.0/8", "172.16.0.0/12",
"192.168.0.0/16", "127.0.0.0/8",
"169.254.0.0/16", "224.0.0.0/4",
"FE80::/10", "FF00::/8") ]
----------------------------------

Version 2 (7.12.0 release)::
* Formatting only

>>>>>>> 7c79a644 (8.17.0 Release notes  (#6224))

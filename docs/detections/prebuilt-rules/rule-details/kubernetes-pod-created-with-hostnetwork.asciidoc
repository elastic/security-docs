[[kubernetes-pod-created-with-hostnetwork]]
=== Kubernetes Pod Created With HostNetwork

This rules detects an attempt to create or modify a pod attached to the host network. HostNetwork allows a pod to use the node network namespace. Doing so gives the pod access to any service running on localhost of the host. An attacker could use this access to snoop on network activity of other pods on the same node or bypass restrictive network policies applied to its given namespace.

*Rule type*: query

*Rule indices*:

* logs-kubernetes.*

*Severity*: medium

*Risk score*: 47

*Runs every*: 5 minutes

*Searches indices from*: now-6m ({ref}/common-options.html#date-math[Date Math format], see also <<rule-schedule, `Additional look-back time`>>)

*Maximum alerts per execution*: 100

*References*:

* https://research.nccgroup.com/2021/11/10/detection-engineering-for-kubernetes-clusters/#part3-kubernetes-detections
* https://kubernetes.io/docs/concepts/security/pod-security-policy/#host-namespaces
* https://bishopfox.com/blog/kubernetes-pod-privilege-escalation

*Tags*:

* Elastic
* Kubernetes
* Continuous Monitoring
* Execution
* Privilege Escalation
*Added ({stack} release)*: 8.4.0

*Last modified ({stack} release)*: 8.4.0

*Rule authors*: Elastic

*Rule license*: Elastic License v2

==== Potential false positives

An administrator or developer may want to use a pod that runs as root and shares the hostï¿½s IPC, Network, and PID namespaces for debugging purposes. If something is going wrong in the cluster and there is no easy way to SSH onto the host nodes directly, a privileged pod of this nature can be useful for viewing things like iptable rules and network namespaces from the host's perspective.

==== Investigation guide


[source,markdown]
----------------------------------

----------------------------------


==== Rule query


[source,js]
----------------------------------
kubernetes.audit.objectRef.resource:"pods" and
kubernetes.audit.verb:("create" or "update" or "patch") and
kubernetes.audit.requestObject.spec.hostNetwork:true
----------------------------------

==== Threat mapping

*Framework*: MITRE ATT&CK^TM^

* Tactic:
** Name: Privilege Escalation
** ID: TA0004
** Reference URL: https://attack.mitre.org/tactics/TA0004/
* Technique:
** Name: Escape to Host
** ID: T1611
** Reference URL: https://attack.mitre.org/techniques/T1611/

[[prebuilt-rule-7-16-3-prebuilt-rules-7-16-3-summary]]
[role="xpack"]
== Update v7.16.3

This section lists all updates associated with version 7.16.3 of the Fleet integration *Prebuilt Security Detection Rules*.


[width="100%",options="header"]
|==============================================
|Rule |Description |Status |Version

|<<prebuilt-rule-7-16-3-aws-redshift-cluster-creation, AWS Redshift Cluster Creation>> | Identifies the creation of an Amazon Redshift cluster. Unexpected creation of this cluster by a non-administrative user may indicate a permission or role issue with current users. If unexpected, the resource may not properly be configured and could introduce security vulnerabilities. | new | 1 

|<<prebuilt-rule-7-16-3-suspicious-network-connection-attempt-by-root, Suspicious Network Connection Attempt by Root>> | Identifies an outbound network connection attempt followed by a session id change as the root user by the same process entity. This particular instantiation of a network connection is abnormal and should be investigated as it may indicate a potential reverse shell activity via a privileged process. | new | 1 

|<<prebuilt-rule-7-16-3-abnormal-process-id-or-lock-file-created, Abnormal Process ID or Lock File Created>> | Identifies the creation of a Process ID (PID), lock or reboot file created in temporary file storage paradigm (tmpfs) directory /var/run. On Linux, the PID files typically hold the process ID to track previous copies running and manage other tasks. Certain Linux malware use the /var/run directory for holding data, executables and other tasks, disguising itself or these files as legitimate PID files. | new | 1 

|<<prebuilt-rule-7-16-3-process-started-from-process-id-pid-file, Process Started from Process ID (PID) File>> | Identifies a new process starting from a process ID (PID), lock or reboot file within the temporary file storage paradigm (tmpfs) directory /var/run directory. On Linux, the PID files typically hold the process ID to track previous copies running and manage other tasks. Certain Linux malware use the /var/run directory for holding data, executables and other tasks, disguising itself or these files as legitimate PID files. | new | 1 

|<<prebuilt-rule-7-16-3-binary-executed-from-shared-memory-directory, Binary Executed from Shared Memory Directory>> | Identifies the execution of a binary by root in Linux shared memory directories: (/dev/shm/, /run/shm/, /var/run/, /var/lock/). This activity is to be considered highly abnormal and should be investigated. Threat actors have placed executables used for persistence on high-uptime servers in these directories as system backdoors. | new | 1 

|<<prebuilt-rule-7-16-3-linux-restricted-shell-breakout-via-linux-binary-s, Linux Restricted Shell Breakout via  Linux Binary(s)>> | Identifies Linux binary(s) abuse to breakout of restricted shells or environments by spawning an interactive system shell. The linux utility(s) activity of spawning shell is not a standard use of the binary for a user or system administrator. It may indicates an attempt to improve the capabilities or stability of an adversary access. | new | 1 

|<<prebuilt-rule-7-16-3-suspicious-crontab-creation-or-modification, Suspicious CronTab Creation or Modification>> | Identifies attempts to create or modify a crontab via a process that is not crontab (i.e python, osascript, etc.). This activity should not be highly prevalent and could indicate the use of cron as a persistence mechanism by a threat actor. | new | 1 

|<<prebuilt-rule-7-16-3-potential-local-ntlm-relay-via-http, Potential Local NTLM Relay via HTTP>> | Identifies attempt to coerce a local NTLM authentication via HTTP using the Windows Printer Spooler service as a target. An adversary may use this primitive in combination with other techniques to elevate privileges on a compromised system. | new | 1 

|<<prebuilt-rule-7-16-3-suspicious-microsoft-diagnostics-wizard-execution, Suspicious Microsoft Diagnostics Wizard Execution>> | Identifies potential abuse of the Microsoft Diagnostics Troubleshooting Wizard (MSDT) to proxy malicious command or binary execution via malicious process arguments. | new | 1 

|<<prebuilt-rule-7-16-3-service-creation-via-local-kerberos-authentication, Service Creation via Local Kerberos Authentication>> | Identifies a suspicious local successful logon event where the Logon Package is Kerberos, the remote address is set to localhost, followed by a sevice creation from the same LogonId. This may indicate an attempt to leverage a Kerberos relay attack variant that can be used to elevate privilege locally from a domain joined user to local System privileges. | new | 1 

|<<prebuilt-rule-7-16-3-potential-privilege-escalation-via-local-kerberos-relay-over-ldap, Potential Privilege Escalation via Local Kerberos Relay over LDAP>> | Identifies a suspicious local successful logon event where the Logon Package is Kerberos, the remote address is set to localhost, and the target user SID is the built-in local Administrator account. This may indicate an attempt to leverage a Kerberos relay attack variant that can be used to elevate privilege locally from a domain joined limited user to local System privileges. | new | 1 

|<<prebuilt-rule-7-16-3-remote-computer-account-dnshostname-update, Remote Computer Account DnsHostName Update>> | Identifies the remote update to a computer account's DnsHostName attribute. If the new value set is a valid domain controller DNS hostname and the subject computer name is not a domain controller, then it's highly likely a preparation step to exploit CVE-2022-26923 in an attempt to elevate privileges from a standard domain user to domain admin privileges. | new | 1 

|<<prebuilt-rule-7-16-3-tampering-of-bash-command-line-history, Tampering of Bash Command-Line History>> | Adversaries may attempt to clear or disable the Bash command-line history in an attempt to evade detection or forensic investigations. | update | 8 

|<<prebuilt-rule-7-16-3-ssh-authorized-keys-file-modification, SSH Authorized Keys File Modification>> | The Secure Shell (SSH) authorized_keys file specifies which users are allowed to log into a server using public key authentication. Adversaries may modify it to maintain persistence on a victim host by adding their own public key(s). | update | 2 

|<<prebuilt-rule-7-16-3-aws-iam-password-recovery-requested, AWS IAM Password Recovery Requested>> | Identifies AWS IAM password recovery requests. An adversary may attempt to gain unauthorized AWS access by abusing password recovery mechanisms. | update | 6 

|<<prebuilt-rule-7-16-3-aws-route-table-created, AWS Route Table Created>> | Identifies when an AWS Route Table has been created. | update | 3 

|<<prebuilt-rule-7-16-3-aws-route-table-modified-or-deleted, AWS Route Table Modified or Deleted>> | Identifies when an AWS Route Table has been modified or deleted. | update | 3 

|<<prebuilt-rule-7-16-3-microsoft-365-inbox-forwarding-rule-created, Microsoft 365 Inbox Forwarding Rule Created>> | Identifies when a new Inbox forwarding rule is created in Microsoft 365. Inbox rules process messages in the Inbox based on conditions and take actions. In this case, the rules will forward the emails to a defined address. Attackers can abuse Inbox Rules to intercept and exfiltrate email data without making organization-wide configuration changes or having the corresponding privileges. | update | 4 

|<<prebuilt-rule-7-16-3-attempts-to-brute-force-a-microsoft-365-user-account, Attempts to Brute Force a Microsoft 365 User Account>> | Identifies attempts to brute force a Microsoft 365 user account. An adversary may attempt a brute force attack to obtain unauthorized access to user accounts. | update | 7 

|<<prebuilt-rule-7-16-3-potential-password-spraying-of-microsoft-365-user-accounts, Potential Password Spraying of Microsoft 365 User Accounts>> | Identifies a high number (25) of failed Microsoft 365 user authentication attempts from a single IP address within 30 minutes, which could be indicative of a password spraying attack. An adversary may attempt a password spraying attack to obtain unauthorized access to user accounts. | update | 6 

|<<prebuilt-rule-7-16-3-hping-process-activity, Hping Process Activity>> | Hping ran on a Linux host. Hping is a FOSS command-line packet analyzer and has the ability to construct network packets for a wide variety of network security testing applications, including scanning and firewall auditing. | update | 8 

|<<prebuilt-rule-7-16-3-unusual-process-execution-temp, Unusual Process Execution - Temp>> | Identifies processes running in a temporary folder. This is sometimes done by adversaries to hide malware. | update | 8 

|<<prebuilt-rule-7-16-3-strace-process-activity, Strace Process Activity>> | Strace is a useful diagnostic, instructional, and debugging tool. This rule identifies a privileged context execution of strace which can be used to escape restrictive environments by instantiating a shell in order to elevate privileges or move laterally. | update | 8 

|<<prebuilt-rule-7-16-3-attempt-to-disable-gatekeeper, Attempt to Disable Gatekeeper>> | Detects attempts to disable Gatekeeper on macOS. Gatekeeper is a security feature that's designed to ensure that only trusted software is run. Adversaries may attempt to disable Gatekeeper before executing malicious code. | update | 2 

|<<prebuilt-rule-7-16-3-potential-privacy-control-bypass-via-localhost-secure-copy, Potential Privacy Control Bypass via Localhost Secure Copy>> | Identifies use of the Secure Copy Protocol (SCP) to copy files locally by abusing the auto addition of the Secure Shell Daemon (sshd) to the authorized application list for Full Disk Access. This may indicate attempts to bypass macOS privacy controls to access sensitive files. | update | 3 

|<<prebuilt-rule-7-16-3-emond-rules-creation-or-modification, Emond Rules Creation or Modification>> | Identifies the creation or modification of the Event Monitor Daemon (emond) rules. Adversaries may abuse this service by writing a rule to execute commands when a defined event occurs, such as system start up or user authentication. | update | 3 

|<<prebuilt-rule-7-16-3-exporting-exchange-mailbox-via-powershell, Exporting Exchange Mailbox via PowerShell>> | Identifies the use of the Exchange PowerShell cmdlet, New-MailBoxExportRequest, to export the contents of a primary mailbox or archive to a .pst file. Adversaries may target user email to collect sensitive information. | update | 8 

|<<prebuilt-rule-7-16-3-powershell-suspicious-script-with-audio-capture-capabilities, PowerShell Suspicious Script with Audio Capture Capabilities>> | Detects PowerShell scripts that can record audio, a common feature in popular post-exploitation tooling. | update | 6 

|<<prebuilt-rule-7-16-3-powershell-keylogging-script, PowerShell Keylogging Script>> | Detects the use of Win32 API Functions that can be used to capture user keystrokes in PowerShell scripts. Attackers use this technique to capture user input, looking for credentials and/or other valuable data. | update | 5 

|<<prebuilt-rule-7-16-3-powershell-suspicious-script-with-screenshot-capabilities, PowerShell Suspicious Script with Screenshot Capabilities>> | Detects PowerShell scripts that can take screenshots, which is a common feature in post-exploitation kits and remote access tools (RATs). | update | 4 

|<<prebuilt-rule-7-16-3-encrypting-files-with-winrar-or-7z, Encrypting Files with WinRar or 7z>> | Identifies use of WinRar or 7z to create an encrypted files. Adversaries will often compress and encrypt data in preparation for exfiltration. | update | 6 

|<<prebuilt-rule-7-16-3-network-connection-via-certutil, Network Connection via Certutil>> | Identifies certutil.exe making a network connection. Adversaries could abuse certutil.exe to download a certificate, or malware, from a remote URL. | update | 8 

|<<prebuilt-rule-7-16-3-connection-to-commonly-abused-web-services, Connection to Commonly Abused Web Services>> | Adversaries may implement command and control (C2) communications that use common web services to hide their activity. This attack technique is typically targeted at an organization and uses web services common to the victim network, which allows the adversary to blend into legitimate traffic activity. These popular services are typically targeted since they have most likely been used before compromise, which helps malicious traffic blend in. | update | 9 

|<<prebuilt-rule-7-16-3-potential-dns-tunneling-via-nslookup, Potential DNS Tunneling via NsLookup>> | This rule identifies a large number (15) of nslookup.exe executions with an explicit query type from the same host. This may indicate command and control activity utilizing the DNS protocol. | update | 5 

|<<prebuilt-rule-7-16-3-port-forwarding-rule-addition, Port Forwarding Rule Addition>> | Identifies the creation of a new port forwarding rule. An adversary may abuse this technique to bypass network segmentation restrictions. | update | 7 

|<<prebuilt-rule-7-16-3-potential-remote-desktop-tunneling-detected, Potential Remote Desktop Tunneling Detected>> | Identifies potential use of an SSH utility to establish RDP over a reverse SSH Tunnel. This can be used by attackers to enable routing of network packets that would otherwise not reach their intended destination. | update | 6 

|<<prebuilt-rule-7-16-3-remote-file-download-via-desktopimgdownldr-utility, Remote File Download via Desktopimgdownldr Utility>> | Identifies the desktopimgdownldr utility being used to download a remote file. An adversary may use desktopimgdownldr to download arbitrary files as an alternative to certutil. | update | 7 

|<<prebuilt-rule-7-16-3-remote-file-download-via-mpcmdrun, Remote File Download via MpCmdRun>> | Identifies the Windows Defender configuration utility (MpCmdRun.exe) being used to download a remote file. | update | 7 

|<<prebuilt-rule-7-16-3-remote-file-download-via-powershell, Remote File Download via PowerShell>> | Identifies powershell.exe being used to download an executable file from an untrusted remote destination. | update | 5 

|<<prebuilt-rule-7-16-3-remote-file-download-via-script-interpreter, Remote File Download via Script Interpreter>> | Identifies built-in Windows script interpreters (cscript.exe or wscript.exe) being used to download an executable file from a remote destination. | update | 5 

|<<prebuilt-rule-7-16-3-sunburst-command-and-control-activity, SUNBURST Command and Control Activity>> | The malware known as SUNBURST targets the SolarWind's Orion business software for command and control. This rule detects post-exploitation command and control activity of the SUNBURST backdoor. | update | 6 

|<<prebuilt-rule-7-16-3-remote-file-copy-via-teamviewer, Remote File Copy via TeamViewer>> | Identifies an executable or script file remotely downloaded via a TeamViewer transfer session. | update | 7 

|<<prebuilt-rule-7-16-3-potential-credential-access-via-dcsync, Potential Credential Access via DCSync>> | This rule identifies when a User Account starts the Active Directory Replication Process. Attackers can use the DCSync technique to get credential information of individual accounts or the entire domain, thus compromising the entire domain. | update | 3 

|<<prebuilt-rule-7-16-3-kerberos-pre-authentication-disabled-for-user, Kerberos Pre-authentication Disabled for User>> | Identifies the modification of an account's Kerberos pre-authentication options. An adversary with GenericWrite/GenericAll rights over the account can maliciously modify these settings to perform offline password cracking attacks such as AS-REP roasting. | update | 3 

|<<prebuilt-rule-7-16-3-creation-or-modification-of-domain-backup-dpapi-private-key, Creation or Modification of Domain Backup DPAPI private key>> | Identifies the creation or modification of Domain Backup private keys. Adversaries may extract the Data Protection API (DPAPI) domain backup key from a Domain Controller (DC) to be able to decrypt any domain user master key file. | update | 8 

|<<prebuilt-rule-7-16-3-credential-acquisition-via-registry-hive-dumping, Credential Acquisition via Registry Hive Dumping>> | Identifies attempts to export a registry hive which may contain credentials using the Windows reg.exe tool. | update | 6 

|<<prebuilt-rule-7-16-3-kerberos-traffic-from-unusual-process, Kerberos Traffic from Unusual Process>> | Identifies network connections to the standard Kerberos port from an unusual process. On Windows, the only process that normally performs Kerberos traffic from a domain joined host is lsass.exe. | update | 7 

|<<prebuilt-rule-7-16-3-lsass-memory-dump-handle-access, LSASS Memory Dump Handle Access>> | Identifies handle requests for the Local Security Authority Subsystem Service (LSASS) object access with specific access masks that many tools with a capability to dump memory to disk use (0x1fffff, 0x1010, 0x120089). This rule is tool agnostic as it has been validated against a host of various LSASS dump tools such as SharpDump, Procdump, Mimikatz, Comsvcs etc. It detects this behavior at a low level and does not depend on a specific tool or dump file name. | update | 2 

|<<prebuilt-rule-7-16-3-mimikatz-memssp-log-file-detected, Mimikatz Memssp Log File Detected>> | Identifies the password log file from the default Mimikatz memssp module. | update | 6 

|<<prebuilt-rule-7-16-3-potential-invoke-mimikatz-powershell-script, Potential Invoke-Mimikatz PowerShell Script>> | Mimikatz is a credential dumper capable of obtaining plaintext Windows account logins and passwords, along with many other features that make it useful for testing the security of networks. This rule detects Invoke-Mimikatz PowerShell script and alike. | update | 1 

|<<prebuilt-rule-7-16-3-modification-of-wdigest-security-provider, Modification of WDigest Security Provider>> | Identifies attempts to modify the WDigest security provider in the registry to force the user's password to be stored in clear text in memory. This behavior can be indicative of an adversary attempting to weaken the security configuration of an endpoint. Once the UseLogonCredential value is modified, the adversary may attempt to dump clear text passwords from memory. | update | 4 

|<<prebuilt-rule-7-16-3-windows-registry-file-creation-in-smb-share, Windows Registry File Creation in SMB Share>> | Identifies the creation or modification of a medium-size registry hive file on a Server Message Block (SMB) share, which may indicate an exfiltration attempt of a previously dumped Security Account Manager (SAM) registry hive for credential extraction on an attacker-controlled system. | update | 2 

|<<prebuilt-rule-7-16-3-powershell-minidump-script, PowerShell MiniDump Script>> | This rule detects PowerShell scripts capable of dumping process memory using WindowsErrorReporting or Dbghelp.dll MiniDumpWriteDump. Attackers can use this tooling to dump LSASS and get access to credentials. | update | 7 

|<<prebuilt-rule-7-16-3-powershell-kerberos-ticket-request, PowerShell Kerberos Ticket Request>> | Detects PowerShell scripts that have the capability of requesting kerberos tickets, which is a common step in Kerberoasting toolkits to crack service accounts. | update | 3 

|<<prebuilt-rule-7-16-3-potential-remote-credential-access-via-registry, Potential Remote Credential Access via Registry>> | Identifies remote access to the registry to potentially dump credential data from the Security Account Manager (SAM) registry hive in preparation for credential access and privileges elevation. | update | 2 

|<<prebuilt-rule-7-16-3-searching-for-saved-credentials-via-vaultcmd, Searching for Saved Credentials via VaultCmd>> | Windows Credential Manager allows you to create, view, or delete saved credentials for signing into websites, connected applications, and networks. An adversary may abuse this to list or dump credentials stored in the Credential Manager for saved usernames and passwords. This may also be performed in preparation of lateral movement. | update | 4 

|<<prebuilt-rule-7-16-3-sensitive-privilege-seenabledelegationprivilege-assigned-to-a-user, Sensitive Privilege SeEnableDelegationPrivilege assigned to a User>> | Identifies the assignment of the SeEnableDelegationPrivilege sensitive "user right" to a user. The SeEnableDelegationPrivilege "user right" enables computer and user accounts to be trusted for delegation. Attackers can abuse this right to compromise Active Directory accounts and elevate their privileges. | update | 3 

|<<prebuilt-rule-7-16-3-user-account-exposed-to-kerberoasting, User account exposed to Kerberoasting>> | Detects when a user account has the servicePrincipalName attribute modified. Attackers can abuse write privileges over a user to configure Service Principle Names (SPNs) so that they can perform Kerberoasting. Administrators can also configure this for legitimate purposes, exposing the account to Kerberoasting. | update | 2 

|<<prebuilt-rule-7-16-3-suspicious-remote-registry-access-via-sebackupprivilege, Suspicious Remote Registry Access via SeBackupPrivilege>> | Identifies remote access to the registry using an account with Backup Operators group membership. This may indicate an attempt to exfiltrate credentials by dumping the Security Account Manager (SAM) registry hive in preparation for credential access and privileges elevation. | update | 2 

|<<prebuilt-rule-7-16-3-symbolic-link-to-shadow-copy-created, Symbolic Link to Shadow Copy Created>> | Identifies the creation of symbolic links to a shadow copy. Symbolic links can be used to access files in the shadow copy, including sensitive files such as ntds.dit, System Boot Key and browser offline credentials. | update | 4 

|<<prebuilt-rule-7-16-3-modification-of-amsienable-registry-key, Modification of AmsiEnable Registry Key>> | Identifies modifications of the AmsiEnable registry key to 0, which disables the Antimalware Scan Interface (AMSI). An adversary can modify this key to disable AMSI protections. | update | 5 

|<<prebuilt-rule-7-16-3-clearing-windows-console-history, Clearing Windows Console History>> | Identifies when a user attempts to clear console history. An adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. | update | 3 

|<<prebuilt-rule-7-16-3-clearing-windows-event-logs, Clearing Windows Event Logs>> | Identifies attempts to clear or disable Windows event log stores using Windows wevetutil command. This is often done by attackers in an attempt to evade detection or destroy forensic evidence on a system. | update | 13 

|<<prebuilt-rule-7-16-3-windows-event-logs-cleared, Windows Event Logs Cleared>> | Identifies attempts to clear Windows event log stores. This is often done by attackers in an attempt to evade detection or destroy forensic evidence on a system. | update | 4 

|<<prebuilt-rule-7-16-3-suspicious-process-from-conhost, Suspicious Process from Conhost>> | Identifies a suspicious Conhost child process which may be an indication of code injection activity. | update | 6 

|<<prebuilt-rule-7-16-3-windows-defender-disabled-via-registry-modification, Windows Defender Disabled via Registry Modification>> | Identifies modifications to the Windows Defender registry settings to disable the service or set the service to be started manually. | update | 6 

|<<prebuilt-rule-7-16-3-windows-defender-exclusions-added-via-powershell, Windows Defender Exclusions Added via PowerShell>> | Identifies modifications to the Windows Defender configuration settings using PowerShell to add exclusions at the folder directory or process level. | update | 8 

|<<prebuilt-rule-7-16-3-powershell-script-block-logging-disabled, PowerShell Script Block Logging Disabled>> | Identifies attempts to disable PowerShell Script Block Logging via registry modification. Attackers may disable this logging to conceal their activities in the host and evade detection. | update | 3 

|<<prebuilt-rule-7-16-3-disable-windows-firewall-rules-via-netsh, Disable Windows Firewall Rules via Netsh>> | Identifies use of the netsh.exe to disable or weaken the local firewall. Attackers will use this command line tool to disable the firewall during troubleshooting or to enable network mobility. | update | 12 

|<<prebuilt-rule-7-16-3-disabling-windows-defender-security-settings-via-powershell, Disabling Windows Defender Security Settings via PowerShell>> | Identifies use of the Set-MpPreference PowerShell command to disable or weaken certain Windows Defender settings. | update | 4 

|<<prebuilt-rule-7-16-3-disable-windows-event-and-security-logs-using-built-in-tools, Disable Windows Event and Security Logs Using Built-in Tools>> | Identifies attempts to disable EventLog via the logman Windows utility, PowerShell, or auditpol. This is often done by attackers in an attempt to evade detection on a system. | update | 4 

|<<prebuilt-rule-7-16-3-remote-desktop-enabled-in-windows-firewall-by-netsh, Remote Desktop Enabled in Windows Firewall by Netsh>> | Identifies use of the network shell utility (netsh.exe) to enable inbound Remote Desktop Protocol (RDP) connections in the Windows Firewall. | update | 6 

|<<prebuilt-rule-7-16-3-enable-host-network-discovery-via-netsh, Enable Host Network Discovery via Netsh>> | Identifies use of the netsh.exe program to enable host discovery via the network. Attackers can use this command-line tool to weaken the host firewall settings. | update | 4 

|<<prebuilt-rule-7-16-3-microsoft-windows-defender-tampering, Microsoft Windows Defender Tampering>> | Identifies when one or more features on Microsoft Defender are disabled. Adversaries may disable or tamper with Microsoft Defender features to evade detection and conceal malicious behavior. | update | 4 

|<<prebuilt-rule-7-16-3-ms-office-macro-security-registry-modifications, MS Office Macro Security Registry Modifications>> | Microsoft Office Products offer options for users and developers to control the security settings for running and using Macros. Adversaries may abuse these security settings to modify the default behavior of the Office Application to trust future macros and/or disable security warnings, which could increase their chances of establishing persistence. | update | 3 

|<<prebuilt-rule-7-16-3-suspicious-net-reflection-via-powershell, Suspicious .NET Reflection via PowerShell>> | Detects the use of Reflection.Assembly to load PEs and DLLs in memory in PowerShell scripts. Attackers use this method to load executables and DLLs without writing to the disk, bypassing security solutions. | update | 3 

|<<prebuilt-rule-7-16-3-powershell-suspicious-payload-encoded-and-compressed, PowerShell Suspicious Payload Encoded and Compressed>> | Identifies the use of .NET functionality for decompression and base64 decoding combined in PowerShell scripts, which malware and security tools heavily use to deobfuscate payloads and load them directly in memory to bypass defenses. | update | 4 

|<<prebuilt-rule-7-16-3-potential-process-injection-via-powershell, Potential Process Injection via PowerShell>> | Detects the use of Windows API functions that are commonly abused by malware and security tools to load malicious code or inject it into remote processes. | update | 5 

|<<prebuilt-rule-7-16-3-windows-firewall-disabled-via-powershell, Windows Firewall Disabled via PowerShell>> | Identifies when the Windows Firewall is disabled using PowerShell cmdlets, which can help attackers evade network constraints, like internet and network lateral communication restrictions. | update | 5 

|<<prebuilt-rule-7-16-3-whitespace-padding-in-process-command-line, Whitespace Padding in Process Command Line>> | Identifies process execution events where the command line value contains a long sequence of whitespace characters or multiple occurrences of contiguous whitespace. Attackers may attempt to evade signature-based detections by padding their malicious command with unnecessary whitespace characters. These observations should be investigated for malicious behavior. | update | 9 

|<<prebuilt-rule-7-16-3-signed-proxy-execution-via-ms-work-folders, Signed Proxy Execution via MS Work Folders>> | Identifies the use of Windows Work Folders to execute a potentially masqueraded control.exe file in the current working directory. Misuse of Windows Work Folders could indicate malicious activity. | update | 2 

|<<prebuilt-rule-7-16-3-adfind-command-activity, AdFind Command Activity>> | This rule detects the Active Directory query tool, AdFind.exe. AdFind has legitimate purposes, but it is frequently leveraged by threat actors to perform post-exploitation Active Directory reconnaissance. The AdFind tool has been observed in Trickbot, Ryuk, Maze, and FIN6 campaigns. For Winlogbeat, this rule requires Sysmon. | update | 8 

|<<prebuilt-rule-7-16-3-enumeration-of-administrator-accounts, Enumeration of Administrator Accounts>> | Identifies instances of lower privilege accounts enumerating Administrator accounts or groups using built-in Windows tools. | update | 6 

|<<prebuilt-rule-7-16-3-account-discovery-command-via-system-account, Account Discovery Command via SYSTEM Account>> | Identifies when the SYSTEM account uses an account discovery utility. This could be a sign of discovery activity after an adversary has achieved privilege escalation. | update | 12 

|<<prebuilt-rule-7-16-3-file-and-directory-discovery, File and Directory Discovery>> | Enumeration of files and directories using built-in tools. Adversaries may use the information discovered to plan follow-on activity. | update | 5 

|<<prebuilt-rule-7-16-3-windows-network-enumeration, Windows Network Enumeration>> | Identifies attempts to enumerate hosts in a network using the built-in Windows net.exe tool. | update | 6 

|<<prebuilt-rule-7-16-3-peripheral-device-discovery, Peripheral Device Discovery>> | Identifies use of the Windows file system utility (fsutil.exe) to gather information about attached peripheral devices and components connected to a computer system. | update | 5 

|<<prebuilt-rule-7-16-3-powershell-suspicious-discovery-related-windows-api-functions, PowerShell Suspicious Discovery Related Windows API Functions>> | This rule detects the use of discovery-related Windows API functions in PowerShell Scripts. Attackers can use these functions to perform various situational awareness related activities, like enumerating users, shares, sessions, domain trusts, groups, etc. | update | 6 

|<<prebuilt-rule-7-16-3-external-ip-lookup-from-non-browser-process, External IP Lookup from Non-Browser Process>> | Identifies domains commonly used by adversaries for post-exploitation IP lookups. It is common for adversaries to test for Internet access and acquire their external IP address after they have gained access to a system. Among others, this has been observed in campaigns leveraging the information stealer, Trickbot. | update | 8 

|<<prebuilt-rule-7-16-3-enumeration-of-privileged-local-groups-membership, Enumeration of Privileged Local Groups Membership>> | Identifies instances of an unusual process enumerating built-in Windows privileged local groups membership like Administrators or Remote Desktop users. | update | 4 

|<<prebuilt-rule-7-16-3-remote-system-discovery-commands, Remote System Discovery Commands>> | Discovery of remote system information using built-in commands, which may be used to move laterally. | update | 5 

|<<prebuilt-rule-7-16-3-security-software-discovery-using-wmic, Security Software Discovery using WMIC>> | Identifies the use of Windows Management Instrumentation Command (WMIC) to discover certain System Security Settings such as AntiVirus or Host Firewall details. | update | 6 

|<<prebuilt-rule-7-16-3-whoami-process-activity, Whoami Process Activity>> | Identifies use of whoami.exe which displays user, group, and privileges information for the user who is currently logged on to the local system. | update | 9 

|<<prebuilt-rule-7-16-3-command-execution-via-solarwinds-process, Command Execution via SolarWinds Process>> | A suspicious SolarWinds child process (Cmd.exe or Powershell.exe) was detected. | update | 5 

|<<prebuilt-rule-7-16-3-suspicious-solarwinds-child-process, Suspicious SolarWinds Child Process>> | A suspicious SolarWinds child process was detected, which may indicate an attempt to execute malicious programs. | update | 5 

|<<prebuilt-rule-7-16-3-execution-of-file-written-or-modified-by-microsoft-office, Execution of File Written or Modified by Microsoft Office>> | Identifies an executable created by a Microsoft Office application and subsequently executed. These processes are often launched via scripts inside documents or during exploitation of Microsoft Office applications. | update | 6 

|<<prebuilt-rule-7-16-3-execution-of-file-written-or-modified-by-pdf-reader, Execution of File Written or Modified by PDF Reader>> | Identifies a suspicious file that was written by a PDF reader application and subsequently executed. These processes are often launched via exploitation of PDF applications. | update | 5 

|<<prebuilt-rule-7-16-3-suspicious-portable-executable-encoded-in-powershell-script, Suspicious Portable Executable Encoded in Powershell Script>> | Detects the presence of a portable executable (PE) in a PowerShell script by looking for its encoded header. Attackers embed PEs into PowerShell scripts to inject them into memory, avoiding defences by not writing to disk. | update | 6 

|<<prebuilt-rule-7-16-3-powershell-psreflect-script, PowerShell PSReflect Script>> | Detects the use of PSReflect in PowerShell scripts. Attackers leverage PSReflect as a library that enables PowerShell to access win32 API functions. | update | 4 

|<<prebuilt-rule-7-16-3-suspicious-pdf-reader-child-process, Suspicious PDF Reader Child Process>> | Identifies suspicious child processes of PDF reader applications. These child processes are often launched via exploitation of PDF applications or social engineering. | update | 9 

|<<prebuilt-rule-7-16-3-suspicious-powershell-engine-imageload, Suspicious PowerShell Engine ImageLoad>> | Identifies the PowerShell engine being invoked by unexpected processes. Rather than executing PowerShell functionality with powershell.exe, some attackers do this to operate more stealthily. | update | 6 

|<<prebuilt-rule-7-16-3-conhost-spawned-by-suspicious-parent-process, Conhost Spawned By Suspicious Parent Process>> | Detects when the Console Window Host (conhost.exe) process is spawned by a suspicious parent process, which could be indicative of code injection. | update | 6 

|<<prebuilt-rule-7-16-3-third-party-backup-files-deleted-via-unexpected-process, Third-party Backup Files Deleted via Unexpected Process>> | Identifies the deletion of backup files, saved using third-party software, by a process outside of the backup suite. Adversaries may delete Backup files to ensure that recovery from a ransomware attack is less likely. | update | 4 

|<<prebuilt-rule-7-16-3-deleting-backup-catalogs-with-wbadmin, Deleting Backup Catalogs with Wbadmin>> | Identifies use of the wbadmin.exe to delete the backup catalog. Ransomware and other malware may do this to prevent system recovery. | update | 12 

|<<prebuilt-rule-7-16-3-modification-of-boot-configuration, Modification of Boot Configuration>> | Identifies use of bcdedit.exe to delete boot configuration data. This tactic is sometimes used as by malware or an attacker as a destructive technique. | update | 11 

|<<prebuilt-rule-7-16-3-high-number-of-process-and-or-service-terminations, High Number of Process and/or Service Terminations>> | This rule identifies a high number (10) of process terminations (stop, delete, or suspend) from the same host within a short time period. | update | 5 

|<<prebuilt-rule-7-16-3-volume-shadow-copy-deleted-or-resized-via-vssadmin, Volume Shadow Copy Deleted or Resized via VssAdmin>> | Identifies use of vssadmin.exe for shadow copy deletion or resizing on endpoints. This commonly occurs in tandem with ransomware or other destructive attacks. | update | 13 

|<<prebuilt-rule-7-16-3-volume-shadow-copy-deletion-via-powershell, Volume Shadow Copy Deletion via PowerShell>> | Identifies the use of the Win32_ShadowCopy class and related cmdlets to achieve shadow copy deletion. This commonly occurs in tandem with ransomware or other destructive attacks. | update | 4 

|<<prebuilt-rule-7-16-3-volume-shadow-copy-deletion-via-wmic, Volume Shadow Copy Deletion via WMIC>> | Identifies use of wmic.exe for shadow copy deletion on endpoints. This commonly occurs in tandem with ransomware or other destructive attacks. | update | 12 

|<<prebuilt-rule-7-16-3-windows-script-executing-powershell, Windows Script Executing PowerShell>> | Identifies a PowerShell process launched by either cscript.exe or wscript.exe. Observing Windows scripting processes executing a PowerShell script, may be indicative of malicious activity. | update | 11 

|<<prebuilt-rule-7-16-3-suspicious-ms-office-child-process, Suspicious MS Office Child Process>> | Identifies suspicious child processes of frequently targeted Microsoft Office applications (Word, PowerPoint, Excel). These child processes are often launched during exploitation of Office applications or from documents with malicious macros. | update | 11 

|<<prebuilt-rule-7-16-3-potential-lateral-tool-transfer-via-smb-share, Potential Lateral Tool Transfer via SMB Share>> | Identifies the creation or change of a Windows executable file over network shares. Adversaries may transfer tools or other files between systems in a compromised environment. | update | 5 

|<<prebuilt-rule-7-16-3-rdp-enabled-via-registry, RDP Enabled via Registry>> | Identifies registry write modifications to enable Remote Desktop Protocol (RDP) access. This could be indicative of adversary lateral movement preparation. | update | 7 

|<<prebuilt-rule-7-16-3-adobe-hijack-persistence, Adobe Hijack Persistence>> | Detects writing executable files that will be automatically launched by Adobe on launch. | update | 11 

|<<prebuilt-rule-7-16-3-account-configured-with-never-expiring-password, Account Configured with Never-Expiring Password>> | Detects the creation and modification of an account with the "Don't Expire Password" option Enabled. Attackers can abuse this misconfiguration to persist in the domain and maintain long-term access using compromised accounts with this property. | update | 2 

|<<prebuilt-rule-7-16-3-creation-of-a-hidden-local-user-account, Creation of a Hidden Local User Account>> | Identifies the creation of a hidden local user account by appending the dollar sign to the account name. This is sometimes done by attackers to increase access to a system and avoid appearing in the results of accounts listing using the net users command. | update | 4 

|<<prebuilt-rule-7-16-3-suspicious-startup-shell-folder-modification, Suspicious Startup Shell Folder Modification>> | Identifies suspicious startup shell folder modifications to change the default Startup directory in order to bypass detections monitoring file creation in the Windows Startup folder. | update | 6 

|<<prebuilt-rule-7-16-3-potential-modification-of-accessibility-binaries, Potential Modification of Accessibility Binaries>> | Windows contains accessibility features that may be launched with a key combination before a user has logged in. An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system. | update | 9 

|<<prebuilt-rule-7-16-3-adminsdholder-sdprop-exclusion-added, AdminSDHolder SDProp Exclusion Added>> | Identifies a modification on the dsHeuristics attribute on the bit that holds the configuration of groups excluded from the SDProp process. The SDProp compares the permissions on protected objects with those defined on the AdminSDHolder object. If the permissions on any of the protected accounts and groups do not match, the permissions on the protected accounts and groups are reset to match those of the domain's AdminSDHolder object, meaning that groups excluded will remain unchanged. Attackers can abuse this misconfiguration to maintain long-term access to privileged accounts in these groups. | update | 2 

|<<prebuilt-rule-7-16-3-startup-persistence-by-a-suspicious-process, Startup Persistence by a Suspicious Process>> | Identifies files written to or modified in the startup folder by commonly abused processes. Adversaries may use this technique to maintain persistence. | update | 5 

|<<prebuilt-rule-7-16-3-startup-folder-persistence-via-unsigned-process, Startup Folder Persistence via Unsigned Process>> | Identifies files written or modified in the startup folder by unsigned processes. Adversaries may abuse this technique to maintain persistence in an environment. | update | 4 

|<<prebuilt-rule-7-16-3-persistent-scripts-in-the-startup-directory, Persistent Scripts in the Startup Directory>> | Identifies script engines creating files in the Startup folder, or the creation of script files in the Startup folder. Adversaries may abuse this technique to maintain persistence in an environment. | update | 5 

|<<prebuilt-rule-7-16-3-component-object-model-hijacking, Component Object Model Hijacking>> | Identifies Component Object Model (COM) hijacking via registry modification. Adversaries may establish persistence by executing malicious content triggered by hijacked references to COM objects. | update | 7 

|<<prebuilt-rule-7-16-3-system-shells-via-services, System Shells via Services>> | Windows services typically run as SYSTEM and can be used as a privilege escalation opportunity. Malware or penetration testers may run a shell as a service to gain SYSTEM permissions. | update | 12 

|<<prebuilt-rule-7-16-3-user-added-to-privileged-group-in-active-directory, User Added to Privileged Group in Active Directory>> | Identifies a user being added to a privileged group in Active Directory. Privileged accounts and groups in Active Directory are those to which powerful rights, privileges, and permissions are granted that allow them to perform nearly any action in Active Directory and on domain-joined systems. | update | 5 

|<<prebuilt-rule-7-16-3-user-account-creation, User Account Creation>> | Identifies attempts to create new users. This is sometimes done by attackers to increase access or establish persistence on a system or domain. | update | 11 

|<<prebuilt-rule-7-16-3-startup-logon-script-added-to-group-policy-object, Startup/Logon Script added to Group Policy Object>> | Detects the modification of Group Policy Objects (GPO) to add a startup/logon script to users or computer objects. | update | 4 

|<<prebuilt-rule-7-16-3-group-policy-abuse-for-privilege-addition, Group Policy Abuse for Privilege Addition>> | Detects the first occurrence of a modification to Group Policy Object Attributes to add privileges to user accounts or use them to add users as local admins. | update | 4 

|<<prebuilt-rule-7-16-3-scheduled-task-execution-at-scale-via-gpo, Scheduled Task Execution at Scale via GPO>> | Detects the modification of Group Policy Object attributes to execute a scheduled task in the objects controlled by the GPO. | update | 4 

|<<prebuilt-rule-7-16-3-potential-privilege-escalation-via-installerfiletakeover, Potential Privilege Escalation via InstallerFileTakeOver>> | Identifies a potential exploitation of InstallerTakeOver (CVE-2021-41379) default PoC execution. Successful exploitation allows an unprivileged user to escalate privileges to SYSTEM. | update | 5 

|<<prebuilt-rule-7-16-3-suspicious-dll-loaded-for-persistence-or-privilege-escalation, Suspicious DLL Loaded for Persistence or Privilege Escalation>> | Identifies the loading of a non Microsoft signed DLL that is missing on a default Windows install (phantom DLL) or one that can be loaded from a different location by a native Windows process. This may be abused to persist or elevate privileges via privileged file write vulnerabilities. | update | 4 

|<<prebuilt-rule-7-16-3-suspicious-print-spooler-file-deletion, Suspicious Print Spooler File Deletion>> | Detects deletion of print driver files by an unusual process. This may indicate a clean up attempt post successful privilege escalation via Print Spooler service related vulnerabilities. | update | 3 

|<<prebuilt-rule-7-16-3-unusual-print-spooler-child-process, Unusual Print Spooler Child Process>> | Detects unusual Print Spooler service (spoolsv.exe) child processes. This may indicate an attempt to exploit privilege escalation vulnerabilities related to the Printing Service on Windows. | update | 6 

|<<prebuilt-rule-7-16-3-linux-restricted-shell-breakout-via-apt-apt-get-changelog-escape, Linux Restricted Shell Breakout via  apt/apt-get Changelog Escape>> | Identifies Linux binary apt/apt-get abuse to breakout out of restricted shells or environments by spawning an interactive system shell. The apt utility allows us to manage installation and removal of softwares on Debian based Linux distributions and the activity of spawning shell is not a standard use of this binary for a user or system administrator. It indicates a potentially malicious actor attempting to improve the capabilities or stability of their access. | deprecated | 1 

|<<prebuilt-rule-7-16-3-linux-restricted-shell-breakout-via-awk-commands, Linux Restricted Shell Breakout via awk Commands>> | Identifies Linux binary awk abuse to breakout out of restricted shells or environments by spawning an interactive system shell. The awk utility is a text processing language used for data extraction and reporting tools and the activity of spawning shell is not a standard use of this binary for a user or system administrator. It indicates a potentially malicious actor attempting to improve the capabilities or stability of their access. | deprecated | 1 

|<<prebuilt-rule-7-16-3-linux-restricted-shell-breakout-via-busybox-shell-evasion, Linux Restricted Shell Breakout via busybox Shell Evasion>> | Identifies Linux binary busybox abuse to break out from restricted environments by spawning an interactive system shell.The busybox is software utility suite that provides several Unix utilities in a single executable file and the activity of spawing a shell is not a standard use of this binary by a user or system administrator. It indicates a potentially malicious actor attempting to improve the capabilities or stability of their access. | deprecated | 1 

|<<prebuilt-rule-7-16-3-linux-restricted-shell-breakout-via-c89-c99-shell-evasion, Linux Restricted Shell Breakout via c89/c99 Shell evasion>> | Identifies Linux binary c89/c99 abuse to break out from restricted environments by spawning an interactive system shell.The c89/c99 utility is an interface to the standard C compilation system and the activity of spawing a shell is not a standard use of this binary by a user or system administrator. It indicates a potentially malicious actor attempting to improve the capabilities or stability of their access. | deprecated | 1 

|<<prebuilt-rule-7-16-3-linux-restricted-shell-breakout-via-cpulimit-shell-evasion, Linux Restricted Shell Breakout via cpulimit Shell Evasion>> | Identifies Linux binary cpulimit abuse to break out from restricted environments by spawning an interactive system shell. The cpulimit utility is used to restrict the CPU usage of a process in cases of CPU or system load exceeding the defined threshold and the activity of spawning a shell is not a standard use of this binary by a user or system administrator. This can potentially indicate a malicious actor attempting to improve the capabilities or stability of their access. | deprecated | 1 

|<<prebuilt-rule-7-16-3-linux-restricted-shell-breakout-via-crash-shell-evasion, Linux Restricted Shell Breakout via crash Shell evasion>> | Identifies Linux binary crash abuse to break out from restricted environments by spawning an interactive system shell. The crash utility helps analyze Linux crash dump data or a live system and the activity of spawning a shell is not a standard use of this binary by a user or system administrator. It indicates a potentially malicious actor attempting to improve the capabilities or stability of their access. | deprecated | 2 

|<<prebuilt-rule-7-16-3-linux-restricted-shell-breakout-via-env-shell-evasion, Linux Restricted Shell Breakout via env Shell Evasion>> | Identifies Linux binary env abuse to break out from restricted environments by spawning an interactive system shell. The env utility is a shell command for Unix-like operating systems and is used to print a list of environment variables. The activity of spawning a shell is not a standard use of this binary for a user or system administrator. It indicates a potentially malicious actor attempting to improve the capabilities or stability of their access. | deprecated | 2 

|<<prebuilt-rule-7-16-3-linux-restricted-shell-breakout-via-the-expect-command, Linux Restricted Shell Breakout via the expect command>> | Identifies Linux binary expect command abuse to break out from restricted environments by spawning an interactive system shell. The expect utility allows us to automate control of interactive applications such as Telnet, FTP, SSH and others. The activity of spawning shell is not a standard use of this binary for a user or system administrator and could potentially indicate malicious actor attempting to improve the capabilities or stability of their access. | deprecated | 2 

|<<prebuilt-rule-7-16-3-linux-restricted-shell-breakout-via-the-find-command, Linux Restricted Shell Breakout via the find command>> | Identifies Linux binary find abuse to break out from restricted environments by spawning an interactive system shell. The find command in Unix is a command line utility for walking a file hierarchy. The activity of spawning shell is not a standard use of this binary for a user or system administrator. It indicates a potentially malicious actor attempting to improve the capabilities or stability of their access. | deprecated | 2 

|<<prebuilt-rule-7-16-3-linux-restricted-shell-breakout-via-flock-shell-evasion, Linux Restricted Shell Breakout via flock Shell evasion>> | Identifies Linux binary flock abuse to break out from restricted environments by spawning an interactive system shell. The flock utility allows users to manage advisory file locks in shell scripts or on the command line. The activity of spawning a shell is not a standard use of this binary by a user or system administrator. It indicates a potentially malicious actor attempting to improve the capabilities or stability of their access. | deprecated | 2 

|<<prebuilt-rule-7-16-3-linux-restricted-shell-breakout-via-the-gcc-command, Linux Restricted Shell Breakout via the gcc command>> | Identifies Linux binary gcc abuse to break out from restricted environments by spawning an interactive system shell. The gcc utility is a complier system for various languages and mainly used to compile C and C++ programs. The activity of spawning shell is not a standard use of this binary for a user or system administrator. It indicates a potentially malicious actor attempting to improve the capabilities or stability of their access. | deprecated | 2 

|<<prebuilt-rule-7-16-3-linux-restricted-shell-breakout-via-the-mysql-command, Linux Restricted Shell Breakout via the mysql command>> | Identifies MySQL server abuse to break out from restricted environments by spawning an interactive system shell. The MySQL server is an open source relational database management system. The activity of spawning shell is not a standard use of this binary for a user or system administrator. It indicates a potentially malicious actor attempting to improve the capabilities or stability of their access. | deprecated | 2 

|<<prebuilt-rule-7-16-3-linux-restricted-shell-breakout-via-the-ssh-command, Linux Restricted Shell Breakout via the SSH command>> | Identifies Linux binary SSH abuse to break out from restricted environments by spawning an interactive system shell. The SSH protocol is a network protocol that gives users, particularly system administrators, a secure way to access a computer over a network. The activity of spawning shell is not a standard use of this binary for a user or system administrator. It indicates a potentially malicious actor attempting to improve the capabilities or stability of their access. | deprecated | 2 

|<<prebuilt-rule-7-16-3-linux-restricted-shell-breakout-via-the-vi-command, Linux Restricted Shell Breakout via the vi command>> | Identifies Linux binary find abuse to break out from restricted environments by spawning an interactive system shell. The vi/vim editor is the standard text editor in Linux distributions, and the activity of spawning a shell is not a standard use of this binary by a user or system administrator. This could potentially indicate a malicious actor attempting to improve the capabilities or stability of their access. | deprecated | 2 

|==============================================

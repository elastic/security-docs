[[prebuilt-rule-8-7-5-prebuilt-rules-8-7-5-summary]]
[role="xpack"]
== Update v8.7.5

This section lists all updates associated with version 8.7.5 of the Fleet integration *Prebuilt Security Detection Rules*.


[width="100%",options="header"]
|==============================================
|Rule |Description |Status |Version

|<<prebuilt-rule-8-7-5-potential-external-linux-ssh-brute-force-detected, Potential External Linux SSH Brute Force Detected>> | Identifies multiple external consecutive login failures targeting a user account from the same source address within a short time interval. Adversaries will often brute force login attempts across multiple users with a common or known password, in an attempt to gain access to these accounts. | new | 1 

|<<prebuilt-rule-8-7-5-google-drive-ownership-transferred-via-google-workspace, Google Drive Ownership Transferred via Google Workspace>> | Drive and Docs is a Google Workspace service that allows users to leverage Google Drive and Google Docs. Access to files is based on inherited permissions from the child organizational unit the user belongs to which is scoped by administrators. Typically if a user is removed, their files can be transferred to another user by the administrator. This service can also be abused by adversaries to transfer files to an adversary account for potential exfiltration. | update | 105 

|<<prebuilt-rule-8-7-5-google-workspace-custom-gmail-route-created-or-modified, Google Workspace Custom Gmail Route Created or Modified>> | Detects when a custom Gmail route is added or modified in Google Workspace. Adversaries can add a custom e-mail route for outbound mail to route these e-mails to their own inbox of choice for data gathering. This allows adversaries to capture sensitive information from e-mail and potential attachments, such as invoices or payment documents. By default, all email from current Google Workspace users with accounts are routed through a domain's mail server for inbound and outbound mail. | update | 105 

|<<prebuilt-rule-8-7-5-application-removed-from-blocklist-in-google-workspace, Application Removed from Blocklist in Google Workspace>> | Google Workspace administrators may be aware of malicious applications within the Google marketplace and block these applications for user security purposes. An adversary, with administrative privileges, may remove this application from the explicit block list to allow distribution of the application amongst users. This may also indicate the unauthorized use of an application that had been previously blocked before by a user with admin privileges. | update | 105 

|<<prebuilt-rule-8-7-5-domain-added-to-google-workspace-trusted-domains, Domain Added to Google Workspace Trusted Domains>> | Detects when a domain is added to the list of trusted Google Workspace domains. An adversary may add a trusted domain in order to collect and exfiltrate data from their target’s organization with less restrictive security controls. | update | 204 

|<<prebuilt-rule-8-7-5-google-workspace-bitlocker-setting-disabled, Google Workspace Bitlocker Setting Disabled>> | Google Workspace administrators whom manage Windows devices and have Windows device management enabled may also enable BitLocker drive encryption to mitigate unauthorized data access on lost or stolen computers. Adversaries with valid account access may disable BitLocker to access sensitive data on an endpoint added to Google Workspace device management. | update | 105 

|<<prebuilt-rule-8-7-5-google-workspace-restrictions-for-google-marketplace-modified-to-allow-any-app, Google Workspace Restrictions for Google Marketplace Modified to Allow Any App>> | Detects when the Google Marketplace restrictions are changed to allow any application for users in Google Workspace. Malicious APKs created by adversaries may be uploaded to the Google marketplace but not installed on devices managed within Google Workspace. Administrators should set restrictions to not allow any application from the marketplace for security reasons. Adversaries may enable any app to be installed and executed on mobile devices within a Google Workspace environment prior to distributing the malicious APK to the end user. | update | 105 

|<<prebuilt-rule-8-7-5-google-workspace-admin-role-deletion, Google Workspace Admin Role Deletion>> | Detects when a custom admin role is deleted. An adversary may delete a custom admin role in order to impact the permissions or capabilities of system administrators. | update | 204 

|<<prebuilt-rule-8-7-5-application-added-to-google-workspace-domain, Application Added to Google Workspace Domain>> | Detects when a Google marketplace application is added to the Google Workspace domain. An adversary may add a malicious application to an organization’s Google Workspace domain in order to maintain a presence in their target’s organization and steal data. | update | 204 

|<<prebuilt-rule-8-7-5-google-workspace-2sv-policy-disabled, Google Workspace 2SV Policy Disabled>> | Google Workspace admins may setup 2-step verification (2SV) to add an extra layer of security to user accounts by asking users to verify their identity when they use login credentials. Admins have the ability to enforce 2SV from the admin console as well as the methods acceptable for verification and enrollment period. 2SV requires enablement on admin accounts prior to it being enabled for users within organization units. Adversaries may disable 2SV to lower the security requirements to access a valid account. | update | 105 

|<<prebuilt-rule-8-7-5-google-workspace-admin-role-assigned-to-a-user, Google Workspace Admin Role Assigned to a User>> | Assigning the administrative role to a user will grant them access to the Google Admin console and grant them administrator privileges which allow them to access and manage various resources and applications. An adversary may create a new administrator account for persistence or apply the admin role to an existing user to carry out further intrusion efforts. Users with super-admin privileges can bypass single-sign on if enabled in Google Workspace. | update | 205 

|<<prebuilt-rule-8-7-5-google-workspace-api-access-granted-via-domain-wide-delegation-of-authority, Google Workspace API Access Granted via Domain-Wide Delegation of Authority>> | Detects when a domain-wide delegation of authority is granted to a service account. Domain-wide delegation can be configured to grant third-party and internal applications to access the data of Google Workspace users. An adversary may configure domain-wide delegation to maintain access to their target’s data. | update | 204 

|<<prebuilt-rule-8-7-5-google-workspace-custom-admin-role-created, Google Workspace Custom Admin Role Created>> | Detects when a custom admin role is created in Google Workspace. An adversary may create a custom admin role in order to elevate the permissions of other user accounts and persist in their target’s environment. | update | 204 

|<<prebuilt-rule-8-7-5-google-workspace-password-policy-modified, Google Workspace Password Policy Modified>> | Detects when a Google Workspace password policy is modified. An adversary may attempt to modify a password policy in order to weaken an organization’s security controls. | update | 204 

|<<prebuilt-rule-8-7-5-google-workspace-role-modified, Google Workspace Role Modified>> | Detects when a custom admin role or its permissions are modified. An adversary may modify a custom admin role in order to elevate the permissions of other user accounts and persist in their target’s environment. | update | 204 

|<<prebuilt-rule-8-7-5-google-workspace-user-organizational-unit-changed, Google Workspace User Organizational Unit Changed>> | Users in Google Workspace are typically assigned a specific organizational unit that grants them permissions to certain services and roles that are inherited from this organizational unit. Adversaries may compromise a valid account and change which organizational account the user belongs to which then could allow them to inherit permissions to applications and resources inaccessible prior to. | update | 105 

|<<prebuilt-rule-8-7-5-mfa-disabled-for-google-workspace-organization, MFA Disabled for Google Workspace Organization>> | Detects when multi-factor authentication (MFA) is disabled for a Google Workspace organization. An adversary may attempt to modify a password policy in order to weaken an organization’s security controls. | update | 204 

|<<prebuilt-rule-8-7-5-potential-internal-linux-ssh-brute-force-detected, Potential Internal Linux SSH Brute Force Detected>> | Identifies multiple internal consecutive login failures targeting a user account from the same source address within a short time interval. Adversaries will often brute force login attempts across multiple users with a common or known password, in an attempt to gain access to these accounts. | update | 5 

|<<prebuilt-rule-8-7-5-interactive-terminal-spawned-via-python, Interactive Terminal Spawned via Python>> | Identifies when a terminal (tty) is spawned via Python. Attackers may upgrade a simple reverse shell to a fully interactive tty after obtaining initial access to a host. | update | 104 

|<<prebuilt-rule-8-7-5-reverse-shell-created-via-named-pipe, Reverse Shell Created via Named Pipe>> | Identifies a reverse shell via the abuse of named pipes on Linux with the help of OpenSSL or Netcat. First in, first out (FIFO) files are special files for reading and writing to by Linux processes. For this to work, a named pipe is created and passed to a Linux shell where the use of a network connection tool such as Netcat or OpenSSL has been established. The stdout and stderr are captured in the named pipe from the network connection and passed back to the shell for execution. | update | 5 

|<<prebuilt-rule-8-7-5-adding-hidden-file-attribute-via-attrib, Adding Hidden File Attribute via Attrib>> | Adversaries can add the 'hidden' attribute to files to hide them from the user in an attempt to evade detection. | update | 106 

|<<prebuilt-rule-8-7-5-code-signing-policy-modification-through-built-in-tools, Code Signing Policy Modification Through Built-in tools>> | Identifies attempts to disable/modify the code signing policy through system native utilities. Code signing provides authenticity on a program, and grants the user with the ability to check whether the program has been tampered with. By allowing the execution of unsigned or self-signed code, threat actors can craft and execute malicious code. | update | 3 

|<<prebuilt-rule-8-7-5-code-signing-policy-modification-through-registry, Code Signing Policy Modification Through Registry>> | Identifies attempts to disable/modify the code signing policy through the registry. Code signing provides authenticity on a program, and grants the user with the ability to check whether the program has been tampered with. By allowing the execution of unsigned or self-signed code, threat actors can craft and execute malicious code. | update | 3 

|<<prebuilt-rule-8-7-5-delete-volume-usn-journal-with-fsutil, Delete Volume USN Journal with Fsutil>> | Identifies use of the fsutil.exe to delete the volume USNJRNL. This technique is used by attackers to eliminate evidence of files created during post-exploitation activities. | update | 105 

|<<prebuilt-rule-8-7-5-network-connection-via-signed-binary, Network Connection via Signed Binary>> | Binaries signed with trusted digital certificates can execute on Windows systems protected by digital signature validation. Adversaries may use these binaries to 'live off the land' and execute malicious files that could bypass application allowlists and signature validation. | update | 103 

|<<prebuilt-rule-8-7-5-msbuild-making-network-connections, MsBuild Making Network Connections>> | Identifies MsBuild.exe making outbound network connections. This may indicate adversarial activity as MsBuild is often leveraged by adversaries to execute code and evade detection. | update | 103 

|<<prebuilt-rule-8-7-5-suspicious-certutil-commands, Suspicious CertUtil Commands>> | Identifies suspicious commands being used with certutil.exe. CertUtil is a native Windows component which is part of Certificate Services. CertUtil is often abused by attackers to live off the land for stealthier command and control or data exfiltration. | update | 104 

|<<prebuilt-rule-8-7-5-untrusted-driver-loaded, Untrusted Driver Loaded>> | Identifies attempt to load an untrusted driver. Adversaries may modify code signing policies to enable execution of unsigned or self-signed code. | update | 3 

|<<prebuilt-rule-8-7-5-potential-evasion-via-filter-manager, Potential Evasion via Filter Manager>> | The Filter Manager Control Program (fltMC.exe) binary may be abused by adversaries to unload a filter driver and evade defenses. | update | 105 

|<<prebuilt-rule-8-7-5-command-prompt-network-connection, Command Prompt Network Connection>> | Identifies cmd.exe making a network connection. Adversaries could abuse cmd.exe to download or execute malware from a remote URL. | update | 103 

|<<prebuilt-rule-8-7-5-network-connection-via-compiled-html-file, Network Connection via Compiled HTML File>> | Compiled HTML files (.chm) are commonly distributed as part of the Microsoft HTML Help system. Adversaries may conceal malicious code in a CHM file and deliver it to a victim for execution. CHM content is loaded by the HTML Help executable program (hh.exe). | update | 103 

|<<prebuilt-rule-8-7-5-network-connection-via-registration-utility, Network Connection via Registration Utility>> | Identifies the native Windows tools regsvr32.exe, regsvr64.exe, RegSvcs.exe, or RegAsm.exe making a network connection. This may be indicative of an attacker bypassing allowlists or running arbitrary scripts via a signed Microsoft binary. | update | 103 

|<<prebuilt-rule-8-7-5-first-time-seen-driver-loaded, First Time Seen Driver Loaded>> | Identifies the load of a driver with an original file name and signature values that were observed for the first time during the last 30 days. This rule type can help baseline drivers installation within your environment. | update | 3 

|<<prebuilt-rule-8-7-5-suspicious-service-was-installed-in-the-system, Suspicious Service was Installed in the System>> | Identifies the creation of a new Windows service with suspicious Service command values. Windows services typically run as SYSTEM and can be used for privilege escalation and persistence. | update | 6 

|<<prebuilt-rule-8-7-5-system-shells-via-services, System Shells via Services>> | Windows services typically run as SYSTEM and can be used as a privilege escalation opportunity. Malware or penetration testers may run a shell as a service to gain SYSTEM permissions. | update | 105 

|<<prebuilt-rule-8-7-5-service-control-spawned-via-script-interpreter, Service Control Spawned via Script Interpreter>> | Identifies Service Control (sc.exe) spawning from script interpreter processes to create, modify, or start services. This can potentially indicate an attempt to elevate privileges or maintain persistence. | update | 104 

|==============================================

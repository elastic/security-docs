[[prebuilt-rule-8-11-6-prebuilt-rules-8-11-6-summary]]
[role="xpack"]
== Update v8.11.6

This section lists all updates associated with version 8.11.6 of the Fleet integration *Prebuilt Security Detection Rules*.


[width="100%",options="header"]
|==============================================
|Rule |Description |Status |Version

|<<prebuilt-rule-8-11-6-potential-reverse-shell-via-child, Potential Reverse Shell via Child>> | This detection rule identifies suspicious network traffic patterns associated with TCP reverse shell activity. This activity consists of a network event that is followed by the creation of a shell process with suspicious command line arguments. An attacker may establish a Linux TCP reverse shell to gain remote access to a target system. | new | 1

|<<prebuilt-rule-8-11-6-statistical-model-detected-c2-beaconing-activity, Statistical Model Detected C2 Beaconing Activity>> | A statistical model has identified command-and-control (C2) beaconing activity. Beaconing can help attackers maintain stealthy communication with their C2 servers, receive instructions and payloads, exfiltrate data and maintain persistence in a network. | update | 2

|<<prebuilt-rule-8-11-6-statistical-model-detected-c2-beaconing-activity-with-high-confidence, Statistical Model Detected C2 Beaconing Activity with High Confidence>> | A statistical model has identified command-and-control (C2) beaconing activity with high confidence. Beaconing can help attackers maintain stealthy communication with their C2 servers, receive instructions and payloads, exfiltrate data and maintain persistence in a network. | update | 2

|<<prebuilt-rule-8-11-6-potential-data-exfiltration-activity-to-an-unusual-iso-code, Potential Data Exfiltration Activity to an Unusual ISO Code>> | A machine learning job has detected data exfiltration to a particular geo-location (by region name). Data transfers to geo-locations that are outside the normal traffic patterns of an organization could indicate exfiltration over command and control channels. | update | 2

|<<prebuilt-rule-8-11-6-potential-data-exfiltration-activity-to-an-unusual-ip-address, Potential Data Exfiltration Activity to an Unusual IP Address>> | A machine learning job has detected data exfiltration to a particular geo-location (by IP address). Data transfers to geo-locations that are outside the normal traffic patterns of an organization could indicate exfiltration over command and control channels. | update | 2

|<<prebuilt-rule-8-11-6-potential-data-exfiltration-activity-to-an-unusual-destination-port, Potential Data Exfiltration Activity to an Unusual Destination Port>> | A machine learning job has detected data exfiltration to a particular destination port. Data transfer patterns that are outside the normal traffic patterns of an organization could indicate exfiltration over command and control channels. | update | 2

|<<prebuilt-rule-8-11-6-potential-data-exfiltration-activity-to-an-unusual-region, Potential Data Exfiltration Activity to an Unusual Region>> | A machine learning job has detected data exfiltration to a particular geo-location (by region name). Data transfers to geo-locations that are outside the normal traffic patterns of an organization could indicate exfiltration over command and control channels. | update | 2

|<<prebuilt-rule-8-11-6-spike-in-bytes-sent-to-an-external-device, Spike in Bytes Sent to an External Device>> | A machine learning job has detected high bytes of data written to an external device. In a typical operational setting, there is usually a predictable pattern or a certain range of data that is written to external devices. An unusually large amount of data being written is anomalous and can signal illicit data copying or transfer activities. | update | 2

|<<prebuilt-rule-8-11-6-spike-in-bytes-sent-to-an-external-device-via-airdrop, Spike in Bytes Sent to an External Device via Airdrop>> | A machine learning job has detected high bytes of data written to an external device via Airdrop. In a typical operational setting, there is usually a predictable pattern or a certain range of data that is written to external devices. An unusually large amount of data being written is anomalous and can signal illicit data copying or transfer activities. | update | 2

|<<prebuilt-rule-8-11-6-unusual-process-writing-data-to-an-external-device, Unusual Process Writing Data to an External Device>> | A machine learning job has detected a rare process writing data to an external device. Malicious actors often use benign-looking processes to mask their data exfiltration activities. The discovery of such a process that has no legitimate reason to write data to external devices can indicate exfiltration. | update | 2

|<<prebuilt-rule-8-11-6-machine-learning-detected-dga-activity-using-a-known-sunburst-dns-domain, Machine Learning Detected DGA activity using a known SUNBURST DNS domain>> | A supervised machine learning model has identified a DNS question name that used by the SUNBURST malware and is predicted to be the result of a Domain Generation Algorithm. | update | 2

|<<prebuilt-rule-8-11-6-potential-dga-activity, Potential DGA Activity>> | A population analysis machine learning job detected potential DGA (domain generation algorithm) activity. Such activity is often used by malware command and control (C2) channels. This machine learning job looks for a source IP address making DNS requests that have an aggregate high probability of being DGA activity. | update | 2

|<<prebuilt-rule-8-11-6-machine-learning-detected-a-dns-request-with-a-high-dga-probability-score, Machine Learning Detected a DNS Request With a High DGA Probability Score>> | A supervised machine learning model has identified a DNS question name with a high probability of sourcing from a Domain Generation Algorithm (DGA), which could indicate command and control network activity. | update | 2

|<<prebuilt-rule-8-11-6-machine-learning-detected-a-dns-request-predicted-to-be-a-dga-domain, Machine Learning Detected a DNS Request Predicted to be a DGA Domain>> | A supervised machine learning model has identified a DNS question name that is predicted to be the result of a Domain Generation Algorithm (DGA), which could indicate command and control network activity. | update | 2

|<<prebuilt-rule-8-11-6-high-mean-of-process-arguments-in-an-rdp-session, High Mean of Process Arguments in an RDP Session>> | A machine learning job has detected unusually high number of process arguments in an RDP session. Executing sophisticated attacks such as lateral movement can involve the use of complex commands, obfuscation mechanisms, redirection and piping, which in turn increases the number of arguments in a command. | update | 2

|<<prebuilt-rule-8-11-6-high-mean-of-rdp-session-duration, High Mean of RDP Session Duration>> | A machine learning job has detected unusually high mean of RDP session duration. Long RDP sessions can be used to evade detection mechanisms via session persistence, and might be used to perform tasks such as lateral movement, that might require uninterrupted access to a compromised machine. | update | 2

|<<prebuilt-rule-8-11-6-unusual-remote-file-size, Unusual Remote File Size>> | A machine learning job has detected an unusually high file size shared by a remote host indicating potential lateral movement activity. One of the primary goals of attackers after gaining access to a network is to locate and exfiltrate valuable information. Instead of multiple small transfers that can raise alarms, attackers might choose to bundle data into a single large file transfer. | update | 2

|<<prebuilt-rule-8-11-6-high-variance-in-rdp-session-duration, High Variance in RDP Session Duration>> | A machine learning job has detected unusually high variance of RDP session duration. Long RDP sessions can be used to evade detection mechanisms via session persistence, and might be used to perform tasks such as lateral movement, that might require uninterrupted access to a compromised machine. | update | 2

|<<prebuilt-rule-8-11-6-unusual-remote-file-directory, Unusual Remote File Directory>> | An anomaly detection job has detected a remote file transfer on an unusual directory indicating a potential lateral movement activity on the host. Many Security solutions monitor well-known directories for suspicious activities, so attackers might use less common directories to bypass monitoring. | update | 2

|<<prebuilt-rule-8-11-6-unusual-remote-file-extension, Unusual Remote File Extension>> | An anomaly detection job has detected a remote file transfer with a rare extension, which could indicate potential lateral movement activity on the host. | update | 2

|<<prebuilt-rule-8-11-6-spike-in-number-of-connections-made-from-a-source-ip, Spike in Number of Connections Made from a Source IP>> | A machine learning job has detected a high count of destination IPs establishing an RDP connection with a single source IP. Once an attacker has gained access to one system, they might attempt to access more in the network in search of valuable assets, data, or further access points. | update | 2

|<<prebuilt-rule-8-11-6-spike-in-number-of-connections-made-to-a-destination-ip, Spike in Number of Connections Made to a Destination IP>> | A machine learning job has detected a high count of source IPs establishing an RDP connection with a single destination IP. Attackers might use multiple compromised systems to attack a target to ensure redundancy in case a source IP gets detected and blocked. | update | 2

|<<prebuilt-rule-8-11-6-spike-in-number-of-processes-in-an-rdp-session, Spike in Number of Processes in an RDP Session>> | A machine learning job has detected unusually high number of processes started in a single RDP session. Executing a large number of processes remotely on other machines can be an indicator of lateral movement activity. | update | 2

|<<prebuilt-rule-8-11-6-spike-in-remote-file-transfers, Spike in Remote File Transfers>> | A machine learning job has detected an abnormal volume of remote files shared on the host indicating potential lateral movement activity. One of the primary goals of attackers after gaining access to a network is to locate and exfiltrate valuable information. Attackers might perform multiple small transfers to match normal egress activity in the network, to evade detection. | update | 2

|<<prebuilt-rule-8-11-6-unusual-time-or-day-for-an-rdp-session, Unusual Time or Day for an RDP Session>> | A machine learning job has detected an RDP session started at an usual time or weekday. An RDP session at an unusual time could be followed by other suspicious activities, so catching this is a good first step in detecting a larger attack. | update | 2

|<<prebuilt-rule-8-11-6-mfa-deactivation-with-no-re-activation-for-okta-user-account, MFA Deactivation with no Re-Activation for Okta User Account>> | Detects multi-factor authentication (MFA) deactivation with no subsequent re-activation for an Okta user account. An adversary may deactivate MFA for an Okta user account in order to weaken the authentication requirements for the account. | update | 207

|<<prebuilt-rule-8-11-6-unusual-process-spawned-by-a-host, Unusual Process Spawned by a Host>> | A machine learning job has detected a suspicious Windows process. This process has been classified as suspicious in two ways. It was predicted to be suspicious by the ProblemChild supervised ML model, and it was found to be an unusual process, on a host that does not commonly manifest malicious activity. Such a process may be an instance of suspicious or malicious activity, possibly involving LOLbins, that may be resistant to detection using conventional search rules. | update | 2

|<<prebuilt-rule-8-11-6-unusual-process-spawned-by-a-parent-process, Unusual Process Spawned by a Parent Process>> | A machine learning job has detected a suspicious Windows process. This process has been classified as malicious in two ways. It was predicted to be malicious by the ProblemChild supervised ML model, and it was found to be an unusual child process name, for the parent process, by an unsupervised ML model. Such a process may be an instance of suspicious or malicious activity, possibly involving LOLbins, that may be resistant to detection using conventional search rules. | update | 2

|<<prebuilt-rule-8-11-6-unusual-process-spawned-by-a-user, Unusual Process Spawned by a User>> | A machine learning job has detected a suspicious Windows process. This process has been classified as malicious in two ways. It was predicted to be malicious by the ProblemChild supervised ML model, and it was found to be suspicious given that its user context is unusual and does not commonly manifest malicious activity,by an unsupervised ML model. Such a process may be an instance of suspicious or malicious activity, possibly involving LOLbins, that may be resistant to detection using conventional search rules. | update | 2

|<<prebuilt-rule-8-11-6-machine-learning-detected-a-suspicious-windows-event-predicted-to-be-malicious-activity, Machine Learning Detected a Suspicious Windows Event Predicted to be Malicious Activity>> | A supervised machine learning model (ProblemChild) has identified a suspicious Windows process event with high probability of it being malicious activity. Alternatively, the model's blocklist identified the event as being malicious. | update | 2

|<<prebuilt-rule-8-11-6-machine-learning-detected-a-suspicious-windows-event-with-a-high-malicious-probability-score, Machine Learning Detected a Suspicious Windows Event with a High Malicious Probability Score>> | A supervised machine learning model (ProblemChild) has identified a suspicious Windows process event with high probability of it being malicious activity. Alternatively, the model's blocklist identified the event as being malicious. | update | 2

|<<prebuilt-rule-8-11-6-suspicious-windows-process-cluster-spawned-by-a-host, Suspicious Windows Process Cluster Spawned by a Host>> | A machine learning job combination has detected a set of one or more suspicious Windows processes with unusually high scores for malicious probability. These process(es) have been classified as malicious in several ways. The process(es) were predicted to be malicious by the ProblemChild supervised ML model. If the anomaly contains a cluster of suspicious processes, each process has the same host name, and the aggregate score of the event cluster was calculated to be unusually high by an unsupervised ML model. Such a cluster often contains suspicious or malicious activity, possibly involving LOLbins, that may be resistant to detection using conventional search rules. | update | 2

|<<prebuilt-rule-8-11-6-suspicious-windows-process-cluster-spawned-by-a-parent-process, Suspicious Windows Process Cluster Spawned by a Parent Process>> | A machine learning job combination has detected a set of one or more suspicious Windows processes with unusually high scores for malicious probability. These process(es) have been classified as malicious in several ways. The process(es) were predicted to be malicious by the ProblemChild supervised ML model. If the anomaly contains a cluster of suspicious processes, each process has the same parent process name, and the aggregate score of the event cluster was calculated to be unusually high by an unsupervised ML model. Such a cluster often contains suspicious or malicious activity, possibly involving LOLbins, that may be resistant to detection using conventional search rules. | update | 2

|<<prebuilt-rule-8-11-6-suspicious-windows-process-cluster-spawned-by-a-user, Suspicious Windows Process Cluster Spawned by a User>> | A machine learning job combination has detected a set of one or more suspicious Windows processes with unusually high scores for malicious probability. These process(es) have been classified as malicious in several ways. The process(es) were predicted to be malicious by the ProblemChild supervised ML model. If the anomaly contains a cluster of suspicious processes, each process has the same user name, and the aggregate score of the event cluster was calculated to be unusually high by an unsupervised ML model. Such a cluster often contains suspicious or malicious activity, possibly involving LOLbins, that may be resistant to detection using conventional search rules. | update | 2

|<<prebuilt-rule-8-11-6-network-activity-detected-via-cat, Network Activity Detected via cat>> | This rule monitors for the execution of the cat command, followed by a connection attempt by the same process. Cat is capable of transfering data via tcp/udp channels by redirecting its read output to a /dev/tcp or /dev/udp channel. This activity is highly suspicious, and should be investigated. Attackers may leverage this capability to transfer tools or files to another host in the network or exfiltrate data while attempting to evade detection in the process. | update | 4

|<<prebuilt-rule-8-11-6-potential-protocol-tunneling-via-chisel-client, Potential Protocol Tunneling via Chisel Client>> | This rule monitors for common command line flags leveraged by the Chisel client utility followed by a connection attempt. Chisel is a command-line utility used for creating and managing TCP and UDP tunnels, enabling port forwarding and secure communication between machines. Attackers can abuse the Chisel utility to establish covert communication channels, bypass network restrictions, and carry out malicious activities by creating tunnels that allow unauthorized access to internal systems. | update | 4

|<<prebuilt-rule-8-11-6-potential-protocol-tunneling-via-chisel-server, Potential Protocol Tunneling via Chisel Server>> | This rule monitors for common command line flags leveraged by the Chisel server utility followed by a received connection within a timespan of 1 minute. Chisel is a command-line utility used for creating and managing TCP and UDP tunnels, enabling port forwarding and secure communication between machines. Attackers can abuse the Chisel utility to establish covert communication channels, bypass network restrictions, and carry out malicious activities by creating tunnels that allow unauthorized access to internal systems. | update | 4

|<<prebuilt-rule-8-11-6-suspicious-utility-launched-via-proxychains, Suspicious Utility Launched via ProxyChains>> | This rule monitors for the execution of suspicious linux tools through ProxyChains. ProxyChains is a command-line tool that enables the routing of network connections through intermediary proxies, enhancing anonymity and enabling access to restricted resources. Attackers can exploit the ProxyChains utility to hide their true source IP address, evade detection, and perform malicious activities through a chain of proxy servers, potentially masking their identity and intentions. | update | 4

|<<prebuilt-rule-8-11-6-potential-linux-tunneling-and-or-port-forwarding, Potential Linux Tunneling and/or Port Forwarding>> | This rule monitors for a set of Linux utilities that can be used for tunneling and port forwarding. Attackers can leverage tunneling and port forwarding techniques to bypass network defenses, establish hidden communication channels, and gain unauthorized access to internal resources, facilitating data exfiltration, lateral movement, and remote control. | update | 4

|<<prebuilt-rule-8-11-6-suspicious-network-activity-to-the-internet-by-previously-unknown-executable, Suspicious Network Activity to the Internet by Previously Unknown Executable>> | This rule monitors for network connectivity to the internet from a previously unknown executable located in a suspicious directory to a previously unknown destination ip. An alert from this rule can indicate the presence of potentially malicious activity, such as the execution of unauthorized or suspicious processes attempting to establish connections to unknown or suspicious destinations such as a command and control server. Detecting and investigating such behavior can help identify and mitigate potential security threats, protecting the system and its data from potential compromise. | update | 6

|<<prebuilt-rule-8-11-6-potential-protocol-tunneling-via-earthworm, Potential Protocol Tunneling via EarthWorm>> | Identifies the execution of the EarthWorm tunneler. Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection and network filtering, or to enable access to otherwise unreachable systems. | update | 109

|<<prebuilt-rule-8-11-6-potential-reverse-shell-via-java, Potential Reverse Shell via Java>> | This detection rule identifies the execution of a Linux shell process from a Java JAR application post an incoming network connection. This behavior may indicate reverse shell activity via a Java application. | update | 6

|<<prebuilt-rule-8-11-6-potential-reverse-shell-via-suspicious-child-process, Potential Reverse Shell via Suspicious Child Process>> | This detection rule detects the creation of a shell through a suspicious process chain. Any reverse shells spawned by the specified utilities that are initialized from a single process followed by a network connection attempt will be captured through this rule. Attackers may spawn reverse shells to establish persistence onto a target system. | update | 7

|<<prebuilt-rule-8-11-6-potential-reverse-shell, Potential Reverse Shell>> | This detection rule identifies suspicious network traffic patterns associated with TCP reverse shell activity. This activity consists of a parent-child relationship where a network event is followed by the creation of a shell process. An attacker may establish a Linux TCP reverse shell to gain remote access to a target system. | update | 7

|<<prebuilt-rule-8-11-6-exchange-mailbox-export-via-powershell, Exchange Mailbox Export via PowerShell>> | Identifies the use of the Exchange PowerShell cmdlet, New-MailBoxExportRequest, to export the contents of a primary mailbox or archive to a .pst file. Adversaries may target user email to collect sensitive information. | update | 7

|<<prebuilt-rule-8-11-6-potential-file-transfer-via-certreq, Potential File Transfer via Certreq>> | Identifies Certreq making an HTTP Post request. Adversaries could abuse Certreq to download files or upload data to a remote URL. | update | 6

|<<prebuilt-rule-8-11-6-ingress-transfer-via-windows-bits, Ingress Transfer via Windows BITS>> | Identifies downloads of executable and archive files via the Windows Background Intelligent Transfer Service (BITS). Adversaries could leverage Windows BITS transfer jobs to download remote payloads. | update | 6

|<<prebuilt-rule-8-11-6-multiple-logon-failure-followed-by-logon-success, Multiple Logon Failure Followed by Logon Success>> | Identifies multiple logon failures followed by a successful one from the same source address. Adversaries will often brute force login attempts across multiple users with a common or known password, in an attempt to gain access to accounts. | update | 9

|<<prebuilt-rule-8-11-6-ntds-or-sam-database-file-copied, NTDS or SAM Database File Copied>> | Identifies a copy operation of the Active Directory Domain Database (ntds.dit) or Security Account Manager (SAM) files. Those files contain sensitive information including hashed domain and/or local credentials. | update | 109

|<<prebuilt-rule-8-11-6-suspicious-module-loaded-by-lsass, Suspicious Module Loaded by LSASS>> | Identifies LSASS loading an unsigned or untrusted DLL. Windows Security Support Provider (SSP) DLLs are loaded into LSSAS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. | update | 6

|<<prebuilt-rule-8-11-6-lsass-process-access-via-windows-api, LSASS Process Access via Windows API>> | Identifies access attempts to the LSASS handle, which may indicate an attempt to dump credentials from LSASS memory. | update | 6

|<<prebuilt-rule-8-11-6-network-logon-provider-registry-modification, Network Logon Provider Registry Modification>> | Identifies the modification of the network logon provider registry. Adversaries may register a rogue network logon provider module for persistence and/or credential access via intercepting the authentication credentials in clear text during user logon. | update | 107

|<<prebuilt-rule-8-11-6-powershell-kerberos-ticket-dump, PowerShell Kerberos Ticket Dump>> | Detects PowerShell scripts that have the capability of dumping Kerberos tickets from LSA, which potentially indicates an attacker's attempt to acquire credentials for lateral movement. | update | 3

|<<prebuilt-rule-8-11-6-powershell-kerberos-ticket-request, PowerShell Kerberos Ticket Request>> | Detects PowerShell scripts that have the capability of requesting kerberos tickets, which is a common step in Kerberoasting toolkits to crack service accounts. | update | 110

|<<prebuilt-rule-8-11-6-potential-credential-access-via-renamed-com-services-dll, Potential Credential Access via Renamed COM+ Services DLL>> | Identifies suspicious renamed COMSVCS.DLL Image Load, which exports the MiniDump function that can be used to dump a process memory. This may indicate an attempt to dump LSASS memory while bypassing command-line based detection in preparation for credential access. | update | 107

|<<prebuilt-rule-8-11-6-windows-event-logs-cleared, Windows Event Logs Cleared>> | Identifies attempts to clear Windows event log stores. This is often done by attackers in an attempt to evade detection or destroy forensic evidence on a system. | update | 108

|<<prebuilt-rule-8-11-6-suspicious-managed-code-hosting-process, Suspicious Managed Code Hosting Process>> | Identifies a suspicious managed code hosting process which could indicate code injection or other form of suspicious code execution. | update | 107

|<<prebuilt-rule-8-11-6-suspicious-script-object-execution, Suspicious Script Object Execution>> | Identifies scrobj.dll loaded into unusual Microsoft processes. This usually means a malicious scriptlet is being executed in the target process. | update | 106

|<<prebuilt-rule-8-11-6-group-policy-discovery-via-microsoft-gpresult-utility, Group Policy Discovery via Microsoft GPResult Utility>> | Detects the usage of gpresult.exe to query group policy objects. Attackers may query group policy objects during the reconnaissance phase after compromising a system to gain a better understanding of the active directory environment and possible methods to escalate privileges or move laterally. | update | 6

|<<prebuilt-rule-8-11-6-potential-powershell-hacktool-script-by-function-names, Potential PowerShell HackTool Script by Function Names>> | Detects known PowerShell offensive tooling functions names in PowerShell scripts. Attackers commonly use out-of-the-box offensive tools without modifying the code. This rule aim is to take advantage of that. | update | 8

|<<prebuilt-rule-8-11-6-direct-outbound-smb-connection, Direct Outbound SMB Connection>> | Identifies unexpected processes making network connections over port 445. Windows File Sharing is typically implemented over Server Message Block (SMB), which communicates between hosts using port 445. When legitimate, these network connections are established by the kernel. Processes making 445/tcp connections may be port scanners, exploits, or suspicious user-level processes moving laterally. | update | 108

|<<prebuilt-rule-8-11-6-remote-scheduled-task-creation-via-rpc, Remote Scheduled Task Creation via RPC>> | Identifies scheduled task creation from a remote source. This could be indicative of adversary lateral movement. | update | 7

|<<prebuilt-rule-8-11-6-installation-of-custom-shim-databases, Installation of Custom Shim Databases>> | Identifies the installation of custom Application Compatibility Shim databases. This Windows functionality has been abused by attackers to stealthily gain persistence and arbitrary code execution in legitimate Windows processes. | update | 106

|<<prebuilt-rule-8-11-6-persistence-via-powershell-profile, Persistence via PowerShell profile>> | Identifies the creation or modification of a PowerShell profile. PowerShell profile is a script that is executed when PowerShell starts to customize the user environment, which can be abused by attackers to persist in a environment where PowerShell is common. | update | 7

|<<prebuilt-rule-8-11-6-account-password-reset-remotely, Account Password Reset Remotely>> | Identifies an attempt to reset a potentially privileged account password remotely. Adversaries may manipulate account passwords to maintain access or evade password duration policies and preserve compromised credentials. | update | 108

| Potential Process Herpaderping Attempt| Identifies process execution followed by a file overwrite of an executable by the same parent process. This may indicate an evasion attempt to execute malicious code in a stealthy way. | deprecated | 106

| Deprecated - Potential Reverse Shell via Suspicious Parent Process | This detection rule detects the creation of a shell through a suspicious parent child relationship. Any reverse shells spawned by the specified utilities that use a forked process to initialize the connection attempt will be captured through this rule. Attackers may spawn reverse shells to establish persistence onto a target system. | deprecated | 7

| Malicious Remote File Creation | Malicious remote file creation, which can be an indicator of lateral movement activity. | deprecated | 2

|==============================================

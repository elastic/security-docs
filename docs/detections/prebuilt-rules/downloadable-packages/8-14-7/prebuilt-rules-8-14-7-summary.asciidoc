[[prebuilt-rule-8-14-7-prebuilt-rules-8-14-7-summary]]
[role="xpack"]
== Update v8.14.7

This section lists all updates associated with version 8.14.7 of the Fleet integration *Prebuilt Security Detection Rules*.


[width="100%",options="header"]
|==============================================
|Rule |Description |Status |Version

|<<prebuilt-rule-8-14-7-active-directory-forced-authentication-from-linux-host-smb-named-pipes, Active Directory Forced Authentication from Linux Host - SMB Named Pipes>> | Identifies a potential forced authentication using related SMB named pipes. Attackers may attempt to force targets to authenticate to a host controlled by them to capture hashes or enable relay attacks. | new | 1 

|<<prebuilt-rule-8-14-7-aws-s3-bucket-server-access-logging-disabled, AWS S3 Bucket Server Access Logging Disabled>> | Identifies when server access logging is disabled for an Amazon S3 bucket. Server access logs provide a detailed record of requests made to an S3 bucket. When server access logging is disabled for a bucket, it could indicate an adversary's attempt to impair defenses by disabling logs that contain evidence of malicious activity. | new | 1 

|<<prebuilt-rule-8-14-7-aws-s3-bucket-replicated-to-another-account, AWS S3 Bucket Replicated to Another Account>> | Identifies when the `PutBucketReplication` operation is used to replicate S3 objects to a bucket in another AWS account. Adversaries may use bucket replication to exfiltrate sensitive data to an environment they control. | new | 1 

|<<prebuilt-rule-8-14-7-aws-s3-object-versioning-suspended, AWS S3 Object Versioning Suspended>> | Identifies when object versioning is suspended for an Amazon S3 bucket. Object versioning allows for multiple versions of an object to exist in the same bucket. This allows for easy recovery of deleted or overwritten objects. When object versioning is suspended for a bucket, it could indicate an adversary's attempt to inhibit system recovery following malicious activity. Additionally, when versioning is suspended, buckets can then be deleted. | new | 1 

|<<prebuilt-rule-8-14-7-egress-connection-from-entrypoint-in-container, Egress Connection from Entrypoint in Container>> | This rule identifies a sequence of events where a process named `entrypoint.sh` is started in a container, followed by a network connection attempt. This sequence indicates a potential egress connection from an entrypoint in a container. An entrypoint is a command or script specified in the Dockerfile and executed when the container starts. Attackers can use this technique to establish a foothold in the environment, escape from a container to the host, or establish persistence. | new | 1 

|<<prebuilt-rule-8-14-7-privileged-docker-container-creation, Privileged Docker Container Creation>> | This rule leverages the new_terms rule type to identify the creation of a potentially unsafe docker container from an unusual parent process. Attackers can use the `--privileged` flag to create containers with escalated privileges, which can lead to trivial privilege escalation, docker escaping and persistence. access. | new | 1 

|<<prebuilt-rule-8-14-7-dpkg-package-installed-by-unusual-parent-process, DPKG Package Installed by Unusual Parent Process>> | This rule detects the installation of a Debian package (dpkg) by an unusual parent process. The dpkg command is used to install, remove, and manage Debian packages on a Linux system. Attackers can abuse the dpkg command to install malicious packages on a system. | new | 1 

|<<prebuilt-rule-8-14-7-unusual-dpkg-execution, Unusual DPKG Execution>> | This rule detects the execution of the DPKG command by processes not associated with the DPKG package manager. The DPKG command is used to install, remove, and manage Debian packages on a Linux system. Attackers can abuse the DPKG command to install malicious packages on a system. | new | 1 

|<<prebuilt-rule-8-14-7-git-hook-command-execution, Git Hook Command Execution>> | This rule detects the execution of a potentially malicious process from a Git hook. Git hooks are scripts that Git executes before or after events such as: commit, push, and receive. An attacker can abuse Git hooks to execute arbitrary commands on the system and establish persistence. | new | 1 

|<<prebuilt-rule-8-14-7-git-hook-egress-network-connection, Git Hook Egress Network Connection>> | This rule detects a suspicious egress network connection attempt from a Git hook script. Git hooks are scripts that Git executes before or after events such as: commit, push, and receive. An attacker can abuse these features to execute arbitrary commands on the system, establish persistence or to initialize a network connection to a remote server and exfiltrate data or download additional payloads. | new | 1 

|<<prebuilt-rule-8-14-7-rpm-package-installed-by-unusual-parent-process, RPM Package Installed by Unusual Parent Process>> | This rule leverages the new_terms rule type to identify the installation of RPM packages by an unusual parent process. RPM is a package management system used in Linux systems such as Red Hat, CentOS and Fedora. Attacks may backdoor RPM packages to gain initial access or install malicious RPM packages to maintain persistence. | new | 1 

|<<prebuilt-rule-8-14-7-docker-escape-via-nsenter, Docker Escape via Nsenter>> | This rule identifies a UID change event via `nsenter`. The `nsenter` command is used to enter a namespace, which is a way to isolate processes and resources. Attackers can use `nsenter` to escape from a container to the host, which can lead to privilege escalation and lateral movement. | new | 1 

|<<prebuilt-rule-8-14-7-service-dacl-modification-via-sc-exe, Service DACL Modification via sc.exe>> | Identifies DACL modifications to deny access to a service, making it unstoppable, or hide it from system and users. | new | 2 

|<<prebuilt-rule-8-14-7-potential-wsus-abuse-for-lateral-movement, Potential WSUS Abuse for Lateral Movement>> | Identifies a potential Windows Server Update Services (WSUS) abuse to execute psexec to enable for lateral movement. WSUS is limited to executing Microsoft signed binaries, which limits the executables that can be used to tools published by Microsoft. | new | 2 

|<<prebuilt-rule-8-14-7-aws-systems-manager-securestring-parameter-request-with-decryption-flag, AWS Systems Manager SecureString Parameter Request with Decryption Flag>> | Detects the first occurrence of a user identity accessing AWS Systems Manager (SSM) SecureString parameters using the GetParameter or GetParameters API actions with credentials in the request parameters. This could indicate that the user is accessing sensitive information. This rule detects when a user accesses a SecureString parameter with the `withDecryption` parameter set to true. This is a [NewTerms](https://www.elastic.co/guide/en/security/current/rules-ui-create.html#create-new-terms-rule) rule that detects the first occurrence of a specific AWS ARN accessing SecureString parameters with decryption within the last 10 days. | update | 2 

|<<prebuilt-rule-8-14-7-aws-s3-bucket-expiration-lifecycle-configuration-added, AWS S3 Bucket Expiration Lifecycle Configuration Added>> | Identifies an expiration lifecycle configuration added to an S3 bucket. Lifecycle configurations can be used to manage objects in a bucket, including setting expiration policies. This rule detects when a lifecycle configuration is added to an S3 bucket, which could indicate that objects in the bucket will be automatically deleted after a specified period of time. This could be used to evade detection by deleting objects that contain evidence of malicious activity. | update | 2 

|<<prebuilt-rule-8-14-7-aws-lambda-layer-added-to-existing-function, AWS Lambda Layer Added to Existing Function>> | Identifies when an Lambda Layer is added to an existing Lambda function. AWS layers are a way to share code and data across multiple functions. By adding a layer to an existing function, an attacker can persist or execute code in the context of the function. | update | 2 

|<<prebuilt-rule-8-14-7-aws-rds-db-snapshot-shared-with-another-account, AWS RDS DB Snapshot Shared with Another Account>> | Identifies an AWS RDS DB snapshot being shared with another AWS account. DB snapshots contain a full backup of an entire DB instance including sensitive data that can be abused if shared with unauthorized accounts or made public. Adversaries may use snapshots to restore a DB Instance in an environment they control as a means of data exfiltration. | update | 2 

|<<prebuilt-rule-8-14-7-aws-s3-bucket-policy-added-to-share-with-external-account, AWS S3 Bucket Policy Added to Share with External Account>> | Identifies an AWS S3 bucket policy change to share permissions with an external account. Adversaries may attempt to backdoor an S3 bucket by sharing it with an external account. This can be used to exfiltrate data or to provide access to other adversaries. This rule identifies changes to a bucket policy via the `PutBucketPolicy` API call where the policy includes an `Effect=Allow` statement that does not contain the AWS account ID of the bucket owner. | update | 2 

|<<prebuilt-rule-8-14-7-aws-s3-bucket-enumeration-or-brute-force, AWS S3 Bucket Enumeration or Brute Force>> | Identifies a high number of failed S3 operations from a single source and account (or anonymous account) within a short timeframe. This activity can be indicative of attempting to cause an increase in billing to an account for excessive random operations, cause resource exhaustion, or enumerating bucket names for discovery. | update | 2 

|<<prebuilt-rule-8-14-7-aws-rds-db-instance-or-cluster-deletion-protection-disabled, AWS RDS DB Instance or Cluster Deletion Protection Disabled>> | Identifies the modification of an AWS RDS DB instance or cluster to remove the deletionProtection feature. Deletion protection is enabled automatically for instances set up through the console and can be used to protect them from unintentional deletion activity. If disabled an instance or cluster can be deleted, destroying sensitive or critical information. Adversaries with the proper permissions can take advantage of this to set up future deletion events against a compromised environment. | update | 2 

|<<prebuilt-rule-8-14-7-aws-rds-snapshot-deleted, AWS RDS Snapshot Deleted>> | Identifies the deletion of an AWS RDS DB snapshot. Snapshots contain a full backup of an entire DB instance. Unauthorized deletion of snapshots can make it impossible to recover critical or sensitive data. This rule detects deleted snapshots and instances modified so that backupRetentionPeriod is set to 0 which disables automated backups and is functionally similar to deleting the system snapshot. | update | 2 

|<<prebuilt-rule-8-14-7-aws-iam-roles-anywhere-profile-creation, AWS IAM Roles Anywhere Profile Creation>> | Identifies the creation of an AWS Roles Anywhere profile. AWS Roles Anywhere is a feature that allows you to use AWS Identity and Access Management (IAM) profiles to manage access to your AWS resources from any location via trusted anchors. This rule detects the creation of a profile that can be assumed from any service. Adversaries may create profiles tied to overly permissive roles to maintain access to AWS resources. Ensure that the profile creation is expected and that the trust policy is configured securely. | update | 2 

|<<prebuilt-rule-8-14-7-aws-iam-roles-anywhere-trust-anchor-created-with-external-ca, AWS IAM Roles Anywhere Trust Anchor Created with External CA>> | Identifies when an AWS IAM Roles Anywhere Trust Anchor with an external certificate authority is created. AWS Roles Anywhere profiles are legitimate profiles that can be created by administrators to allow access from any location. This rule detects when a trust anchor is created with an external certificate authority that is not managed by AWS Certificate Manager Private Certificate Authority (ACM PCA). Adversaries may accomplish this to maintain persistence in the environment. | update | 2 

|<<prebuilt-rule-8-14-7-aws-iam-user-created-access-keys-for-another-user, AWS IAM User Created Access Keys For Another User>> | An adversary with access to a set of compromised credentials may attempt to persist or escalate privileges by creating a new set of credentials for an existing user. This rule looks for use of the IAM `CreateAccessKey` API operation to create new programatic access keys for another IAM user. | update | 2 

|<<prebuilt-rule-8-14-7-aws-rds-db-instance-or-cluster-password-modified, AWS RDS DB Instance or Cluster Password Modified>> | Identifies the modification of the master password for an AWS RDS DB instance or cluster. DB instances may contain sensitive data that can be abused if accessed by unauthorized actors. Amazon RDS API operations never return the password, so this operation provides a means to regain access if the password is lost. Adversaries with the proper permissions can take advantage of this to evade defenses and gain unauthorized access to a DB instance or cluster to support persistence mechanisms or privilege escalation. | update | 2 

|<<prebuilt-rule-8-14-7-aws-rds-db-instance-made-public, AWS RDS DB Instance Made Public>> | Identifies the creation or modification of an AWS RDS DB instance to enable public access. DB instances may contain sensitive data that can be abused if shared with unauthorized accounts or made public. Adversaries may enable public access on a DB instance to maintain persistence or evade defenses by bypassing access controls. | update | 2 

|<<prebuilt-rule-8-14-7-aws-iam-administratoraccess-policy-attached-to-group, AWS IAM AdministratorAccess Policy Attached to Group>> | An adversary with access to a set of compromised credentials may attempt to persist or escalate privileges by attaching additional permissions to user groups the compromised user account belongs to. This rule looks for use of the IAM `AttachGroupPolicy` API operation to attach the highly permissive `AdministratorAccess` AWS managed policy to an existing IAM user group. | update | 2 

|<<prebuilt-rule-8-14-7-aws-iam-administratoraccess-policy-attached-to-role, AWS IAM AdministratorAccess Policy Attached to Role>> | An adversary with access to a set of compromised credentials may attempt to persist or escalate privileges by attaching additional permissions to compromised IAM roles. This rule looks for use of the IAM `AttachRolePolicy` API operation to attach the highly permissive `AdministratorAccess` AWS managed policy to an existing IAM role. | update | 2 

|<<prebuilt-rule-8-14-7-aws-iam-administratoraccess-policy-attached-to-user, AWS IAM AdministratorAccess Policy Attached to User>> | An adversary with access to a set of compromised credentials may attempt to persist or escalate privileges by attaching additional permissions to compromised user accounts. This rule looks for use of the IAM `AttachUserPolicy` API operation to attach the highly permissive `AdministratorAccess` AWS managed policy to an existing IAM user. | update | 2 

|<<prebuilt-rule-8-14-7-potential-persistence-via-file-modification, Potential Persistence via File Modification>> | This rule leverages the File Integrity Monitoring (FIM) integration to detect file modifications of files that are commonly used for persistence on Linux systems. The rule detects modifications to files that are commonly used for cron jobs, systemd services, message-of-the-day (MOTD), SSH configurations, shell configurations, runtime control, init daemon, passwd/sudoers/shadow files, Systemd udevd, and XDG/KDE autostart entries. To leverage this rule, the paths specified in the query need to be added to the FIM policy in the Elastic Security app. | update | 3 

|<<prebuilt-rule-8-14-7-first-time-seen-google-workspace-oauth-login-from-third-party-application, First Time Seen Google Workspace OAuth Login from Third-Party Application>> | Detects the first time a third-party application logs in and authenticated with OAuth. OAuth is used to grant permissions to specific resources and services in Google Workspace. Compromised credentials or service accounts could allow an adversary to authenticate to Google Workspace as a valid user and inherit their privileges. | update | 4 

|<<prebuilt-rule-8-14-7-new-okta-authentication-behavior-detected, New Okta Authentication Behavior Detected>> | Detects events where Okta behavior detection has identified a new authentication behavior. | update | 2 

|<<prebuilt-rule-8-14-7-multiple-okta-sessions-detected-for-a-single-user, Multiple Okta Sessions Detected for a Single User>> | Detects when a user has started multiple Okta sessions with the same user account and different session IDs. This may indicate that an attacker has stolen the user's session cookie and is using it to access the user's account from a different location. | update | 2 

|<<prebuilt-rule-8-14-7-suspicious-network-activity-to-the-internet-by-previously-unknown-executable, Suspicious Network Activity to the Internet by Previously Unknown Executable>> | This rule monitors for network connectivity to the internet from a previously unknown executable located in a suspicious directory. An alert from this rule can indicate the presence of potentially malicious activity, such as the execution of unauthorized or suspicious processes attempting to establish connections to unknown or suspicious destinations such as a command and control server. Detecting and investigating such behavior can help identify and mitigate potential security threats, protecting the system and its data from potential compromise. | update | 10 

|<<prebuilt-rule-8-14-7-system-binary-moved-or-copied, System Binary Moved or Copied>> | This rule monitors for the copying or moving of a system binary. Adversaries may copy/move and rename system binaries to evade detection. Copying a system binary to a different location should not occur often, so if it does, the activity should be investigated. | update | 10 

|<<prebuilt-rule-8-14-7-suspicious-system-commands-executed-by-previously-unknown-executable, Suspicious System Commands Executed by Previously Unknown Executable>> | This rule monitors for the execution of several commonly used system commands executed by a previously unknown executable located in commonly abused directories. An alert from this rule can indicate the presence of potentially malicious activity, such as the execution of unauthorized or suspicious processes attempting to run malicious code. Detecting and investigating such behavior can help identify and mitigate potential security threats, protecting the system and its data from potential compromise. | update | 106 

|<<prebuilt-rule-8-14-7-unknown-execution-of-binary-with-rwx-memory-region, Unknown Execution of Binary with RWX Memory Region>> | Monitors for the execution of a previously unknown unix binary with read, write and execute memory region permissions. The mprotect() system call is used to change the access protections on a region of memory that has already been allocated. This syscall allows a process to modify the permissions of pages in its virtual address space, enabling or disabling permissions such as read, write, and execute for those pages. RWX permissions on memory is in many cases overly permissive, and should be analyzed thoroughly. | update | 2 

|<<prebuilt-rule-8-14-7-potential-linux-ransomware-note-creation-detected, Potential Linux Ransomware Note Creation Detected>> | This rule identifies a sequence of a mass file encryption event in conjunction with the creation of a .txt file with a file name containing ransomware keywords executed by the same process in a 1 second timespan. Ransomware is a type of malware that encrypts a victim's files or systems and demands payment (usually in cryptocurrency) in exchange for the decryption key. One important indicator of a ransomware attack is the mass encryption of the file system, after which a new file extension is added to the file. | update | 9 

|<<prebuilt-rule-8-14-7-suspicious-apt-package-manager-execution, Suspicious APT Package Manager Execution>> | Detects suspicious process events executed by the APT package manager, potentially indicating persistence through an APT backdoor. In Linux, APT (Advanced Package Tool) is a command-line utility used for handling packages on Debian-based systems, providing functions for installing, updating, upgrading, and removing software along with managing package repositories. Attackers can backdoor APT to gain persistence by injecting malicious code into scripts that APT runs, thereby ensuring continued unauthorized access or control each time APT is used for package management. | update | 3 

|<<prebuilt-rule-8-14-7-apt-package-manager-configuration-file-creation, APT Package Manager Configuration File Creation>> | Detects file creation events in the configuration directory for the APT package manager. In Linux, APT (Advanced Package Tool) is a command-line utility used for handling packages on (by default) Debian-based systems, providing functions for installing, updating, upgrading, and removing software along with managing package repositories. Attackers can backdoor APT to gain persistence by injecting malicious code into scripts that APT runs, thereby ensuring continued unauthorized access or control each time APT is used for package management. | update | 2 

|<<prebuilt-rule-8-14-7-suspicious-apt-package-manager-network-connection, Suspicious APT Package Manager Network Connection>> | Detects suspicious network events executed by the APT package manager, potentially indicating persistence through an APT backdoor. In Linux, APT (Advanced Package Tool) is a command-line utility used for handling packages on Debian-based systems, providing functions for installing, updating, upgrading, and removing software along with managing package repositories. Attackers can backdoor APT to gain persistence by injecting malicious code into scripts that APT runs, thereby ensuring continued unauthorized access or control each time APT is used for package management. | update | 3 

|<<prebuilt-rule-8-14-7-cron-job-created-or-modified, Cron Job Created or Modified>> | This rule monitors for (ana)cron jobs being created or renamed. Linux cron jobs are scheduled tasks that can be leveraged by system administrators to set up scheduled tasks, but may be abused by malicious actors for persistence, privilege escalation and command execution. By creating or modifying cron job configurations, attackers can execute malicious commands or scripts at predefined intervals, ensuring their continued presence and enabling unauthorized activities. | update | 12 

|<<prebuilt-rule-8-14-7-dnf-package-manager-plugin-file-creation, DNF Package Manager Plugin File Creation>> | Detects file creation events in the plugin directories for the Yum package manager. In Linux, DNF (Dandified YUM) is a command-line utility used for handling packages on Fedora-based systems, providing functions for installing, updating, upgrading, and removing software along with managing package repositories. Attackers can backdoor DNF to gain persistence by injecting malicious code into plugins that DNF runs, thereby ensuring continued unauthorized access or control each time DNF is used for package management. | update | 2 

|<<prebuilt-rule-8-14-7-persistence-via-kde-autostart-script-or-desktop-file-modification, Persistence via KDE AutoStart Script or Desktop File Modification>> | Identifies the creation or modification of a K Desktop Environment (KDE) AutoStart script or desktop file that will execute upon each user logon. Adversaries may abuse this method for persistence. | update | 112 

|<<prebuilt-rule-8-14-7-suspicious-file-creation-via-kworker, Suspicious File Creation via Kworker>> | This rule monitors for a file creation event originating from a kworker parent process. kworker, or kernel worker, processes are part of the kernel's workqueue mechanism. They are responsible for executing work that has been scheduled to be done in kernel space, which might include tasks like handling interrupts, background activities, and other kernel-related tasks. Attackers may attempt to evade detection by masquerading as a kernel worker process. | update | 5 

|<<prebuilt-rule-8-14-7-creation-or-modification-of-pluggable-authentication-module-or-configuration, Creation or Modification of Pluggable Authentication Module or Configuration>> | This rule monitors for the creation or modification of Pluggable Authentication Module (PAM) shared object files or configuration files. Attackers may create or modify these files to maintain persistence on a compromised system, or harvest account credentials. | update | 2 

|<<prebuilt-rule-8-14-7-rc-local-rc-common-file-creation, rc.local/rc.common File Creation>> | This rule monitors the creation/alteration of the rc.local/rc.common file. The /etc/rc.local file is used to start custom applications, services, scripts or commands during start-up. The rc.local file has mostly been replaced by Systemd. However, through the "systemd-rc-local-generator", rc.local files can be converted to services that run at boot. Adversaries may alter rc.local/rc.common to execute malicious code at start-up, and gain persistence onto the system. | update | 113 

|<<prebuilt-rule-8-14-7-shell-configuration-creation-or-modification, Shell Configuration Creation or Modification>> | This rule monitors the creation/alteration of a shell configuration file. Unix systems use shell configuration files to set environment variables, create aliases, and customize the user's environment. Adversaries may modify or add a shell configuration file to execute malicious code and gain persistence in the system. This behavior is consistent with the Kaiji malware family. | update | 3 

|<<prebuilt-rule-8-14-7-network-connection-initiated-by-sshd-child-process, Network Connection Initiated by SSHD Child Process>> | This rule identifies an egress internet connection initiated by an SSH Daemon child process. This behavior is indicative of the alteration of a shell configuration file or other mechanism that launches a process when a new SSH login occurs. Attackers can also backdoor the SSH daemon to allow for persistence, call out to a C2 or to steal credentials. | update | 2 

|<<prebuilt-rule-8-14-7-systemd-timer-created, Systemd Timer Created>> | Detects the creation of a systemd timer within any of the default systemd timer directories. Systemd timers can be used by an attacker to gain persistence, by scheduling the execution of a command or script. Similarly to cron/at, systemd timers can be set up to execute on boot time, or on a specific point in time, which allows attackers to regain access in case the connection to the infected asset was lost. | update | 13 

|<<prebuilt-rule-8-14-7-systemd-service-created, Systemd Service Created>> | This rule detects the creation or renaming of a new Systemd file in all of the common Systemd service locations for both root and regular users. Systemd service files are configuration files in Linux systems used to define and manage system services. Malicious actors can leverage systemd service files to achieve persistence by creating or modifying services to execute malicious commands or payloads during system startup or at a predefined interval by adding a systemd timer. This allows them to maintain unauthorized access, execute additional malicious activities, or evade detection. | update | 13 

|<<prebuilt-rule-8-14-7-systemd-service-started-by-unusual-parent-process, Systemd Service Started by Unusual Parent Process>> | Systemctl is a process used in Linux systems to manage systemd processes through service configuration files. Malicious actors can leverage systemd services to achieve persistence by creating or modifying service files to execute malicious commands or payloads during system startup. This allows them to maintain unauthorized access, execute additional malicious activities, or evade detection. | update | 2 

|<<prebuilt-rule-8-14-7-systemd-udevd-rule-file-creation, Systemd-udevd Rule File Creation>> | Monitors for the creation of rule files that are used by systemd-udevd to manage device nodes and handle kernel device events in the Linux operating system. Systemd-udevd can be exploited for persistence by adversaries by creating malicious udev rules that trigger on specific events, executing arbitrary commands or payloads whenever a certain device is plugged in or recognized by the system. | update | 5 

|<<prebuilt-rule-8-14-7-user-or-group-creation-modification, User or Group Creation/Modification>> | This rule leverages the `auditd_manager` integration to detect user or group creation or modification events on Linux systems. Threat actors may attempt to create or modify users or groups to establish persistence on the system. | update | 2 

|<<prebuilt-rule-8-14-7-network-connections-initiated-through-xdg-autostart-entry, Network Connections Initiated Through XDG Autostart Entry>> | Detects network connections initiated through Cross-Desktop Group (XDG) autostart entries for GNOME and XFCE-based Linux distributions. XDG Autostart entries can be used to execute arbitrary commands or scripts when a user logs in. This rule helps to identify potential malicious activity where an attacker may have modified XDG autostart scripts to establish persistence on the system. | update | 2 

|<<prebuilt-rule-8-14-7-yum-package-manager-plugin-file-creation, Yum Package Manager Plugin File Creation>> | Detects file creation events in the plugin directories for the Yum package manager.  In Linux, Yum (Yellowdog Updater, Modified) is a command-line utility used for handling packages on (by default) Fedora-based systems, providing functions for installing, updating, upgrading, and removing software along with managing package repositories. Attackers can backdoor Yum to gain persistence by injecting malicious code into plugins that Yum runs, thereby ensuring continued unauthorized access or control each time Yum is used for package management. | update | 2 

|<<prebuilt-rule-8-14-7-network-connection-via-sudo-binary, Network Connection via Sudo Binary>> | Detects network connections initiated by the "sudo" binary. This behavior is uncommon and may occur in instances where reverse shell shellcode is injected into a process run with elevated permissions via "sudo". Attackers may attempt to inject shellcode into processes running as root, to escalate privileges. | update | 3 

|<<prebuilt-rule-8-14-7-potential-shell-via-wildcard-injection-detected, Potential Shell via Wildcard Injection Detected>> | This rule monitors for the execution of a set of linux binaries, that are potentially vulnerable to wildcard injection, with suspicious command line flags followed by a shell spawn event. Linux wildcard injection is a type of security vulnerability where attackers manipulate commands or input containing wildcards (e.g., *, ?, []) to execute unintended operations or access sensitive data by tricking the system into interpreting the wildcard characters in unexpected ways. | update | 6 

|<<prebuilt-rule-8-14-7-privilege-escalation-via-cap-setuid-setgid-capabilities, Privilege Escalation via CAP_SETUID/SETGID Capabilities>> | Identifies instances where a process (granted CAP_SETUID and/or CAP_SETGID capabilities) is executed, after which the user's access is elevated to UID/GID 0 (root). In Linux, the CAP_SETUID and CAP_SETGID capabilities allow a process to change its UID and GID, respectively, providing control over user and group identity management. Attackers may leverage a misconfiguration for exploitation in order to escalate their privileges to root. | update | 3 

|<<prebuilt-rule-8-14-7-uid-elevation-from-previously-unknown-executable, UID Elevation from Previously Unknown Executable>> | Monitors for the elevation of regular user permissions to root permissions through a previously unknown executable. Attackers may attempt to evade detection by hijacking the execution flow and hooking certain functions/syscalls through a rootkit in order to provide easy access to root via a special modified command. | update | 3 

|<<prebuilt-rule-8-14-7-powershell-keylogging-script, PowerShell Keylogging Script>> | Detects the use of Win32 API Functions that can be used to capture user keystrokes in PowerShell scripts. Attackers use this technique to capture user input, looking for credentials and/or other valuable data. | update | 113 

|<<prebuilt-rule-8-14-7-connection-to-commonly-abused-web-services, Connection to Commonly Abused Web Services>> | Adversaries may implement command and control (C2) communications that use common web services to hide their activity. This attack technique is typically targeted at an organization and uses web services common to the victim network, which allows the adversary to blend into legitimate traffic activity. These popular services are typically targeted since they have most likely been used before compromise, which helps malicious traffic blend in. | update | 114 

|<<prebuilt-rule-8-14-7-potential-adidns-poisoning-via-wildcard-record-creation, Potential ADIDNS Poisoning via Wildcard Record Creation>> | Active Directory Integrated DNS (ADIDNS) is one of the core components of AD DS, leveraging AD's access control and replication to maintain domain consistency. It stores DNS zones as AD objects, a feature that, while robust, introduces some security issues, such as wildcard records, mainly because of the default permission (Any authenticated users) to create DNS-named records. Attackers can create wildcard records to redirect traffic that doesn't explicitly match records contained in the zone, becoming the Man-in-the-Middle and being able to abuse DNS similarly to LLMNR/NBNS spoofing. | update | 2 

|<<prebuilt-rule-8-14-7-potential-wpad-spoofing-via-dns-record-creation, Potential WPAD Spoofing via DNS Record Creation>> | Identifies the creation of a DNS record that is potentially meant to enable WPAD spoofing. Attackers can disable the Global Query Block List (GQBL) and create a "wpad" record to exploit hosts running WPAD with default settings for privilege escalation and lateral movement. | update | 2 

|<<prebuilt-rule-8-14-7-creation-of-a-dns-named-record, Creation of a DNS-Named Record>> | Active Directory Integrated DNS (ADIDNS) is one of the core components of AD DS, leveraging AD's access control and replication to maintain domain consistency. It stores DNS zones as AD objects, a feature that, while robust, introduces some security issues because of the default permission (Any authenticated users) to create DNS-named records. Attackers can perform Dynamic Spoofing attacks, where they monitor LLMNR/NBT-NS requests and create DNS-named records to target systems that are requested from multiple systems. They can also create specific records to target specific services, such as wpad, for spoofing attacks. | update | 2 

|<<prebuilt-rule-8-14-7-access-to-a-sensitive-ldap-attribute, Access to a Sensitive LDAP Attribute>> | Identify access to sensitive Active Directory object attributes that contains credentials and decryption keys such as unixUserPassword, ms-PKI-AccountCredentials and msPKI-CredentialRoamingTokens. | update | 11 

|<<prebuilt-rule-8-14-7-lsass-memory-dump-creation, LSASS Memory Dump Creation>> | Identifies the creation of a Local Security Authority Subsystem Service (lsass.exe) default memory dump. This may indicate a credential access attempt via trusted system utilities such as Task Manager (taskmgr.exe) and SQL Dumper (sqldumper.exe) or known pentesting tools such as Dumpert and AndrewSpecial. | update | 110 

|<<prebuilt-rule-8-14-7-powershell-invoke-ninjacopy-script, PowerShell Invoke-NinjaCopy script>> | Detects PowerShell scripts that contain the default exported functions used on Invoke-NinjaCopy. Attackers can use Invoke-NinjaCopy to read SYSTEM files that are normally locked, such as the NTDS.dit file or registry hives. | update | 6 

|<<prebuilt-rule-8-14-7-powershell-kerberos-ticket-dump, PowerShell Kerberos Ticket Dump>> | Detects PowerShell scripts that have the capability of dumping Kerberos tickets from LSA, which potentially indicates an attacker's attempt to acquire credentials for lateral movement. | update | 5 

|<<prebuilt-rule-8-14-7-potential-powershell-pass-the-hash-relay-script, Potential PowerShell Pass-the-Hash/Relay Script>> | Detects PowerShell scripts that can execute pass-the-hash (PtH) attacks, intercept and relay NTLM challenges, and carry out other man-in-the-middle (MitM) attacks. | update | 2 

|<<prebuilt-rule-8-14-7-potential-shadow-credentials-added-to-ad-object, Potential Shadow Credentials added to AD Object>> | Identify the modification of the msDS-KeyCredentialLink attribute in an Active Directory Computer or User Object. Attackers can abuse control over the object and create a key pair, append to raw public key in the attribute, and obtain persistent and stealthy access to the target user or computer object. | update | 109 

|<<prebuilt-rule-8-14-7-user-account-exposed-to-kerberoasting, User account exposed to Kerberoasting>> | Detects when a user account has the servicePrincipalName attribute modified. Attackers can abuse write privileges over a user to configure Service Principle Names (SPNs) so that they can perform Kerberoasting. Administrators can also configure this for legitimate purposes, exposing the account to Kerberoasting. | update | 110 

|<<prebuilt-rule-8-14-7-suspicious-net-reflection-via-powershell, Suspicious .NET Reflection via PowerShell>> | Detects the use of Reflection.Assembly to load PEs and DLLs in memory in PowerShell scripts. Attackers use this method to load executables and DLLs without writing to the disk, bypassing security solutions. | update | 213 

|<<prebuilt-rule-8-14-7-powershell-suspicious-payload-encoded-and-compressed, PowerShell Suspicious Payload Encoded and Compressed>> | Identifies the use of .NET functionality for decompression and base64 decoding combined in PowerShell scripts, which malware and security tools heavily use to deobfuscate payloads and load them directly in memory to bypass defenses. | update | 212 

|<<prebuilt-rule-8-14-7-powershell-script-with-encryption-decryption-capabilities, PowerShell Script with Encryption/Decryption Capabilities>> | Identifies the use of Cmdlets and methods related to encryption/decryption of files in PowerShell scripts, which malware and offensive security tools can abuse to encrypt data or decrypt payloads to bypass security solutions. | update | 7 

|<<prebuilt-rule-8-14-7-potential-process-injection-via-powershell, Potential Process Injection via PowerShell>> | Detects the use of Windows API functions that are commonly abused by malware and security tools to load malicious code or inject it into remote processes. | update | 111 

|<<prebuilt-rule-8-14-7-suspicious-access-to-ldap-attributes, Suspicious Access to LDAP Attributes>> | Identify read access to a high number of Active Directory object attributes. The knowledge of objects properties can help adversaries find vulnerabilities, elevate privileges or collect sensitive information. | update | 2 

|<<prebuilt-rule-8-14-7-powershell-suspicious-discovery-related-windows-api-functions, PowerShell Suspicious Discovery Related Windows API Functions>> | This rule detects the use of discovery-related Windows API functions in PowerShell Scripts. Attackers can use these functions to perform various situational awareness related activities, like enumerating users, shares, sessions, domain trusts, groups, etc. | update | 214 

|<<prebuilt-rule-8-14-7-potential-powershell-hacktool-script-by-author, Potential PowerShell HackTool Script by Author>> | Detects known PowerShell offensive tooling author's name in PowerShell scripts. Attackers commonly use out-of-the-box offensive tools without modifying the code, which may still contain the author artifacts. This rule identifies common author handles found in popular PowerShell scripts used for red team exercises. | update | 2 

|<<prebuilt-rule-8-14-7-powershell-psreflect-script, PowerShell PSReflect Script>> | Detects the use of PSReflect in PowerShell scripts. Attackers leverage PSReflect as a library that enables PowerShell to access win32 API functions. | update | 211 

|<<prebuilt-rule-8-14-7-adminsdholder-backdoor, AdminSDHolder Backdoor>> | Detects modifications in the AdminSDHolder object. Attackers can abuse the SDProp process to implement a persistent backdoor in Active Directory. SDProp compares the permissions on protected objects with those defined on the AdminSDHolder object. If the permissions on any of the protected accounts and groups do not match, the permissions on the protected accounts and groups are reset to match those of the domain's AdminSDHolder object, regaining their Administrative Privileges. | update | 107 

|<<prebuilt-rule-8-14-7-adminsdholder-sdprop-exclusion-added, AdminSDHolder SDProp Exclusion Added>> | Identifies a modification on the dsHeuristics attribute on the bit that holds the configuration of groups excluded from the SDProp process. The SDProp compares the permissions on protected objects with those defined on the AdminSDHolder object. If the permissions on any of the protected accounts and groups do not match, the permissions on the protected accounts and groups are reset to match those of the domain's AdminSDHolder object, meaning that groups excluded will remain unchanged. Attackers can abuse this misconfiguration to maintain long-term access to privileged accounts in these groups. | update | 111 

|<<prebuilt-rule-8-14-7-modification-of-the-mspkiaccountcredentials, Modification of the msPKIAccountCredentials>> | Identify the modification of the msPKIAccountCredentials attribute in an Active Directory User Object. Attackers can abuse the credentials roaming feature to overwrite an arbitrary file for privilege escalation. ms-PKI-AccountCredentials contains binary large objects (BLOBs) of encrypted credential objects from the credential manager store, private keys, certificates, and certificate requests. | update | 10 

|<<prebuilt-rule-8-14-7-suspicious-dll-loaded-for-persistence-or-privilege-escalation, Suspicious DLL Loaded for Persistence or Privilege Escalation>> | Identifies the loading of a non Microsoft signed DLL that is missing on a default Windows install (phantom DLL) or one that can be loaded from a different location by a native Windows process. This may be abused to persist or elevate privileges via privileged file write vulnerabilities. | update | 112 

|<<prebuilt-rule-8-14-7-powershell-script-with-token-impersonation-capabilities, PowerShell Script with Token Impersonation Capabilities>> | Detects scripts that contain PowerShell functions, structures, or Windows API functions related to token impersonation/theft. Attackers may duplicate then impersonate another user's token to escalate privileges and bypass access controls. | update | 12 

|<<prebuilt-rule-8-14-7-suspicious-file-changes-activity-detected, Suspicious File Changes Activity Detected>> | This rule identifies a sequence of 100 file extension rename events within a set of common file paths by the same process in a timespan of 1 second. Ransomware is a type of malware that encrypts a victim's files or systems and demands payment (usually in cryptocurrency) in exchange for the decryption key. One important indicator of a ransomware attack is the mass encryption of the file system, after which a new file extension is added to the file. | deprecated | 9 

|==============================================

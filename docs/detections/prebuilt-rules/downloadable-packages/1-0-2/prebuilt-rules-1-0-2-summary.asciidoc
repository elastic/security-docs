[[prebuilt-rule-1-0-2-prebuilt-rules-1-0-2-summary]]
[role="xpack"]
== Update v1.0.2

This section lists all updates associated with version 1.0.2 of the Fleet integration *Prebuilt Security Detection Rules*.


[width="100%",options="header"]
|==============================================
|Rule |Description |Status |Version

|<<prebuilt-rule-1-0-2-potential-java-jndi-exploitation-attempt, Potential JAVA/JNDI Exploitation Attempt>> | Identifies an outbound network connection by JAVA to LDAP, RMI or DNS standard ports followed by a suspicious JAVA child processes. This may indicate an attempt to exploit a JAVA/NDI (Java Naming and Directory Interface) injection vulnerability. | new | 2 

|<<prebuilt-rule-1-0-2-azure-ad-global-administrator-role-assigned, Azure AD Global Administrator Role Assigned>> | In Azure Active Directory (Azure AD), permissions to manage resources are assigned using roles. The Global Administrator is a role that enables users to have access to all administrative features in Azure AD and services that use Azure AD identities like the Microsoft 365 Defender portal, the Microsoft 365 compliance center, Exchange, SharePoint Online, and Skype for Business Online. Attackers can add users as Global Administrators to maintain access and manage all subscriptions and their settings and resources. | new | 2 

|<<prebuilt-rule-1-0-2-o365-email-reported-by-user-as-malware-or-phish, O365 Email Reported by User as Malware or Phish>> | Detects the occurrence of emails reported as Phishing or Malware by Users. Security Awareness training is essential to stay ahead of scammers and threat actors, as security products can be bypassed, and the user can still receive a malicious message. Educating users to report suspicious messages can help identify gaps in security controls and prevent malware infections and Business Email Compromise attacks. | new | 1 

|<<prebuilt-rule-1-0-2-onedrive-malware-file-upload, OneDrive Malware File Upload>> | Identifies the occurence of files uploaded to OneDrive being detected as Malware by the file scanning engine. Attackers can use File Sharing and Organization Repositories to spread laterally within the company and amplify their access. Users can inadvertently share these files without knowing their maliciousness, giving adversaries opportunity to gain initial access to other endpoints in the environment. | new | 1 

|<<prebuilt-rule-1-0-2-sharepoint-malware-file-upload, SharePoint Malware File Upload>> | Identifies the occurence of files uploaded to SharePoint being detected as Malware by the file scanning engine. Attackers can use File Sharing and Organization Repositories to spread laterally within the company and amplify their access. Users can inadvertently share these files without knowing their maliciousness, giving adversaries opportunities to gain initial access to other endpoints in the environment. | new | 2 

|<<prebuilt-rule-1-0-2-microsoft-365-global-administrator-role-assigned, Microsoft 365 Global Administrator Role Assigned>> | In Azure Active Directory (Azure AD), permissions to manage resources are assigned using roles. The Global Administrator is a role that enables users to have access to all administrative features in Azure AD and services that use Azure AD identities like the Microsoft 365 Defender portal, the Microsoft 365 compliance center, Exchange, SharePoint Online, and Skype for Business Online. Attackers can add users as Global Administrators to maintain access and manage all subscriptions and their settings and resources. | new | 2 

|<<prebuilt-rule-1-0-2-potential-abuse-of-repeated-mfa-push-notifications, Potential Abuse of Repeated MFA Push Notifications>> | Detects when an attacker abuses the Multi-Factor authentication mechanism by repeatedly issuing login requests until the user eventually accepts the Okta push notification. An adversary may attempt to bypass the Okta MFA policies configured for an organization to obtain unauthorized access. | new | 2 

|<<prebuilt-rule-1-0-2-okta-user-session-impersonation, Okta User Session Impersonation>> | A user has initiated a session impersonation granting them access to the environment with the permissions of the user they are impersonating. This would likely indicate Okta administrative access and should only ever occur if requested and expected. | new | 1 

|<<prebuilt-rule-1-0-2-linux-restricted-shell-breakout-via-apt-apt-get-changelog-escape, Linux Restricted Shell Breakout via  apt/apt-get Changelog Escape>> | Identifies Linux binary apt/apt-get abuse to breakout out of restricted shells or environments by spawning an interactive system shell. The apt utility allows us to manage installation and removal of softwares on Debian based Linux distributions and the activity of spawning shell is not a standard use of this binary for a user or system administrator. It indicates a potentially malicious actor attempting to improve the capabilities or stability of their access. | new | 1 

|<<prebuilt-rule-1-0-2-linux-restricted-shell-breakout-via-awk-commands, Linux Restricted Shell Breakout via awk Commands>> | Identifies Linux binary awk abuse to breakout out of restricted shells or environments by spawning an interactive system shell. The awk utility is a text processing language used for data extraction and reporting tools and the activity of spawning shell is not a standard use of this binary for a user or system administrator. It indicates a potentially malicious actor attempting to improve the capabilities or stability of their access. | new | 1 

|<<prebuilt-rule-1-0-2-linux-restricted-shell-breakout-via-busybox-shell-evasion, Linux Restricted Shell Breakout via busybox Shell Evasion>> | Identifies Linux binary busybox abuse to break out from restricted environments by spawning an interactive system shell.The busybox is software utility suite that provides several Unix utilities in a single executable file and the activity of spawing a shell is not a standard use of this binary by a user or system administrator. It indicates a potentially malicious actor attempting to improve the capabilities or stability of their access. | new | 1 

|<<prebuilt-rule-1-0-2-linux-restricted-shell-breakout-via-c89-c99-shell-evasion, Linux Restricted Shell Breakout via c89/c99 Shell evasion>> | Identifies Linux binary c89/c99 abuse to break out from restricted environments by spawning an interactive system shell.The c89/c99 utility is an interface to the standard C compilation system and the activity of spawing a shell is not a standard use of this binary by a user or system administrator. It indicates a potentially malicious actor attempting to improve the capabilities or stability of their access. | new | 1 

|<<prebuilt-rule-1-0-2-linux-restricted-shell-breakout-via-cpulimit-shell-evasion, Linux Restricted Shell Breakout via cpulimit Shell Evasion>> | Identifies Linux binary cpulimit abuse to break out from restricted environments by spawning an interactive system shell. The cpulimit utility is used to restrict the CPU usage of a process in cases of CPU or system load exceeding the defined threshold and the activity of spawning a shell is not a standard use of this binary by a user or system administrator. This can potentially indicate a malicious actor attempting to improve the capabilities or stability of their access. | new | 1 

|<<prebuilt-rule-1-0-2-linux-restricted-shell-breakout-via-crash-shell-evasion, Linux Restricted Shell Breakout via crash Shell evasion>> | Identifies Linux binary crash abuse to break out from restricted environments by spawning an interactive system shell.The crash utility helps to analyze Linux crash dump data or a live system and the activity of spawing a shell is not a standard use of this binary by a user or system administrator. It indicates a potentially malicious actor attempting to improve the capabilities or stability of their access. | new | 1 

|<<prebuilt-rule-1-0-2-linux-restricted-shell-breakout-via-env-shell-evasion, Linux Restricted Shell Breakout via env Shell Evasion>> | Identifies Linux binary env abuse to break out from restricted environments by spawning an interactive system shell.The env utility is a shell command for Unix like OS which is used to print a list of environment variables and the activity of spawning shell is not a standard use of this binary for a user or system administrator. It indicates a potentially malicious actor attempting to improve the capabilities or stability of their access | new | 1 

|<<prebuilt-rule-1-0-2-linux-restricted-shell-breakout-via-the-expect-command, Linux Restricted Shell Breakout via the expect command>> | Identifies Linux binary expect abuse to break out from restricted environments by spawning an interactive system shell. The expect utility allows us to automate control of interactive applications such as telnet,ftp,ssh and others and the activity of spawning shell is not a standard use of this binary for a user or system administrator and could potentially indicate malicious actor attempting to improve the capabilities or stability of their access. | new | 1 

|<<prebuilt-rule-1-0-2-linux-restricted-shell-breakout-via-the-find-command, Linux Restricted Shell Breakout via the find command>> | Identifies Linux binary find abuse to break out from restricted environments by spawning an interactive system shell. The find command in Unix is a command line utility for walking a file hirerarchy and the activity of spawning shell is not a standard use of this binary for a user or system administrator.It indicates a potentially malicious actor attempting to improve the capabilities or stability of their access. | new | 1 

|<<prebuilt-rule-1-0-2-linux-restricted-shell-breakout-via-flock-shell-evasion, Linux Restricted Shell Breakout via flock Shell evasion>> | Identifies Linux binary flock abuse to break out from restricted environments by spawning an interactive system shell.The flock utility allows us to manage advisory file locks in shell scripts or on the command line and the activity of spawing a shell is not a standard use of this binary by a user or system administrator. It indicates a potentially malicious actor attempting to improve the capabilities or stability of their access. | new | 1 

|<<prebuilt-rule-1-0-2-linux-restricted-shell-breakout-via-the-gcc-command, Linux Restricted Shell Breakout via the gcc command>> | Identifies Linux binary gcc abuse to break out from restricted environments by spawning an interactive system shell.The gcc utility is a complier system for various languages and mainly used to complie C and C++ programs and the activity of spawning shell is not a standard use of this binary for a user or system administrator.It indicates a potentially malicious actor attempting to improve the capabilities or stability of their access. | new | 1 

|<<prebuilt-rule-1-0-2-linux-restricted-shell-breakout-via-the-mysql-command, Linux Restricted Shell Breakout via the mysql command>> | Identifies MySQL server abuse to break out from restricted environments by spawning an interactive system shell.The MySQL is an open source relational database management system and the activity of spawning shell is not a standard use of this binary for a user or system administrator.It indicates a potentially malicious actor attempting to improve the capabilities or stability of their access. | new | 1 

|<<prebuilt-rule-1-0-2-linux-restricted-shell-breakout-via-the-ssh-command, Linux Restricted Shell Breakout via the ssh command>> | Identifies Linux binary ssh abuse to break out from restricted environments by spawning an interactive system shell.The ssh is a network protocol that gives users,particularly system administrators a secure way to access a computer over a network and the activity of spawning shell is not a standard use of this binary for a user or system administrator.It indicates a potentially malicious actor attempting to improve the capabilities or stability of their access. | new | 1 

|<<prebuilt-rule-1-0-2-linux-restricted-shell-breakout-via-the-vi-command, Linux Restricted Shell Breakout via the vi command>> | Identifies Linux binary find abuse to break out from restricted environments by spawning an interactive system shell. The vi/vim is the standard text editor in Linux distribution and the activity of spawning a shell is not a standard use of this binary by a user or system administrator and could potentially indicate malicious actor attempting to improve the capabilities or stability of their access." | new | 1 

|<<prebuilt-rule-1-0-2-potential-privilege-escalation-via-pkexec, Potential Privilege Escalation via PKEXEC>> | Identifies an attempt to exploit a local privilege escalation in polkit pkexec (CVE-2021-4034) via unsecure environment variable injection. Successful exploitation allows an unprivileged user to escalate to the root user. | new | 2 

|<<prebuilt-rule-1-0-2-potential-credential-access-via-dcsync, Potential Credential Access via DCSync>> | This rule identifies when a User Account starts the Active Directory Replication Process. Attackers can use the DCSync technique to get credential information of individual accounts or the entire domain, thus compromising the entire domain. | new | 2 

|<<prebuilt-rule-1-0-2-kerberos-pre-authentication-disabled-for-user, Kerberos Pre-authentication Disabled for User>> | Identifies the modification of an account's Kerberos pre-authentication options. An adversary with GenericWrite/GenericAll rights over the account can maliciously modify these settings to perform offline password cracking attacks such as AS-REP roasting. | new | 2 

|<<prebuilt-rule-1-0-2-lsass-memory-dump-handle-access, LSASS Memory Dump Handle Access>> | Identifies handle requests for the Local Security Authority Subsystem Service (LSASS) object access with specific access masks that many tools with a capability to dump memory to disk use (0x1fffff, 0x1010, 0x120089). This rule is tool agnostic as it has been validated against a host of various LSASS dump tools such as SharpDump, Procdump, Mimikatz, Comsvcs etc. It detects this behavior at a low level and does not depend on a specific tool or dump file name. | new | 1 

|<<prebuilt-rule-1-0-2-windows-registry-file-creation-in-smb-share, Windows Registry File Creation in SMB Share>> | Identifies the creation or modification of a medium-size registry hive file on an SMB share, which may indicate an exfiltration attempt of a previously dumped SAM registry hive for credential extraction on an attacker-controlled system. | new | 1 

|<<prebuilt-rule-1-0-2-powershell-kerberos-ticket-request, PowerShell Kerberos Ticket Request>> | Detects PowerShell scripts that have the capability of requesting kerberos tickets, which is a common step in Kerberoasting toolkits to crack service accounts. | new | 2 

|<<prebuilt-rule-1-0-2-potential-remote-credential-access-via-registry, Potential Remote Credential Access via Registry>> | Identifies remote access to the registry to potentially dump credential data from the SAM registry hive in preparation for credential access and privileges elevation. | new | 1 

|<<prebuilt-rule-1-0-2-sensitive-privilege-seenabledelegationprivilege-assigned-to-a-user, Sensitive Privilege SeEnableDelegationPrivilege assigned to a User>> | Identifies the assignment of the SeEnableDelegationPrivilege sensitive "user right" to a user. The SeEnableDelegationPrivilege "user right" enables computer and user accounts to be trusted for delegation. Attackers can abuse this right to compromise Active Directory accounts and elevate their privileges. | new | 2 

|<<prebuilt-rule-1-0-2-potential-shadow-credentials-added-to-ad-object, Potential Shadow Credentials added to AD Object>> | Identify the modification of the msDS-KeyCredentialLink attribute in an Active Directory Computer or User Object. Attackers can abuse control over the object and create a key pair, append to raw public key in the attribute, and obtain persistent and stealthy access to the target user or computer object. | new | 2 

|<<prebuilt-rule-1-0-2-user-account-exposed-to-kerberoasting, User account exposed to Kerberoasting>> | Detects when a user account has the servicePrincipalName attribute modified. Attackers can abuse write privileges over a user to configure SPNs so that they can perform Kerberoasting. Administrators can also configure this for legitimate purposes, exposing the account to Kerberoasting. | new | 1 

|<<prebuilt-rule-1-0-2-suspicious-remote-registry-access-via-sebackupprivilege, Suspicious Remote Registry Access via SeBackupPrivilege>> | Identifies remote access to the registry via an account with Backup Operators group membership. This may indicate an attempt to exfiltrate credentials via dumping the SAM registry hive in preparation for credential access and privileges elevation. | new | 1 

|<<prebuilt-rule-1-0-2-powershell-script-block-logging-disabled, PowerShell Script Block Logging Disabled>> | Identifies attempts to disable PowerShell Script Block Logging via registry modification. Attackers may disable this logging to conceal their activities in the host and evade detection. | new | 2 

|<<prebuilt-rule-1-0-2-ms-office-macro-security-registry-modifications, MS Office Macro Security Registry Modifications>> | Microsoft Office Products offer options for users and developers to control the security settings for running and using Macros. Adversaries may abuse these security settings to modify the default behavior of the Office Application to trust future macros and/or disable security warnings, which could increase their chances of establishing persistence. | new | 2 

|<<prebuilt-rule-1-0-2-signed-proxy-execution-via-ms-workfolders, Signed Proxy Execution via MS WorkFolders>> | Identifies the use of Windows Work Folders to execute a potentially masqueraded control.exe file in the current working directory. Misuse of Windows Work Folders could indicate malicious activity. | new | 1 

|<<prebuilt-rule-1-0-2-adminsdholder-backdoor, AdminSDHolder Backdoor>> | Detects modifications in the AdminSDHolder object. Attackers can abuse the SDProp process to implement a persistent backdoor in Active Directory. SDProp compares the permissions on protected objects with those defined on the AdminSDHolder object. If the permissions on any of the protected accounts and groups do not match, the permissions on the protected accounts and groups are reset to match those of the domain's AdminSDHolder object, regaining their Administrative Privileges. | new | 2 

|<<prebuilt-rule-1-0-2-account-configured-with-never-expiring-password, Account configured with never Expiring Password>> | Detects the creation and modification of an account with the "Don't Expire Password" option Enabled. Attackers can abuse this misconfiguration to persist in the domain and maintain long-term access using compromised accounts with this property. | new | 1 

|<<prebuilt-rule-1-0-2-krbtgt-delegation-backdoor, KRBTGT Delegation Backdoor>> | Identifies the modification of the msDS-AllowedToDelegateTo attribute to KRBTGT. Attackers can use this technique to maintain persistence to the domain by having the ability to request tickets for the KRBTGT service. | new | 2 

|<<prebuilt-rule-1-0-2-adminsdholder-sdprop-exclusion-added, AdminSDHolder SDProp Exclusion Added>> | Identifies a modification on the dsHeuristics attribute on the bit that holds the configuration of groups excluded from the SDProp process. The SDProp compares the permissions on protected objects with those defined on the AdminSDHolder object. If the permissions on any of the protected accounts and groups do not match, the permissions on the protected accounts and groups are reset to match those of the domain's AdminSDHolder object, meaning that groups excluded will remain unchanged. Attackers can abuse this misconfiguration to maintain long-term access to privileged accounts in these groups. | new | 1 

|<<prebuilt-rule-1-0-2-potential-privileged-escalation-via-samaccountname-spoofing, Potential Privileged Escalation via SamAccountName Spoofing>> | Identifies a suspicious computer account name rename event, which may indicate an attempt to exploit CVE-2021-42278 to elevate privileges from a standard domain user to a user with domain admin privileges. CVE-2021-42278 is a security vulnerability that allows potential attackers to impersonate a domain controller via samAccountName attribute spoofing. | new | 2 

|<<prebuilt-rule-1-0-2-windows-service-installed-via-an-unusual-client, Windows Service Installed via an Unusual Client>> | Identifies the creation of a Windows service by an unusual client process. Services may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges from administrator to SYSTEM. | new | 1 

|<<prebuilt-rule-1-0-2-potential-cookies-theft-via-browser-debugging, Potential Cookies Theft via Browser Debugging>> | Identifies the execution of a Chromium based browser with the debugging process argument, which may indicate an attempt to steal authentication cookies. An adversary may steal web application or service session cookies and use them to gain access web applications or Internet services as an authenticated user without needing credentials. | update | 2 

|<<prebuilt-rule-1-0-2-agent-spoofing-mismatched-agent-id, Agent Spoofing - Mismatched Agent ID>> | Detects events that have a mismatch on the expected event agent ID. The status "agent_id_mismatch" occurs when the expected agent ID associated with the API key does not match the actual agent ID in an event. This could indicate attempts to spoof events in order to masquerade actual activity to evade detection. | update | 3 

|<<prebuilt-rule-1-0-2-agent-spoofing-multiple-hosts-using-same-agent, Agent Spoofing - Multiple Hosts Using Same Agent>> | Detects when multiple hosts are using the same agent ID. This could occur in the event of an agent being taken over and used to inject illegitimate documents into an instance as an attempt to spoof events in order to masquerade actual activity to evade detection. | update | 2 

|<<prebuilt-rule-1-0-2-webserver-access-logs-deleted, WebServer Access Logs Deleted>> | Identifies the deletion of WebServer access logs. This may indicate an attempt to evade detection or destroy forensic evidence on a system. | update | 4 

|<<prebuilt-rule-1-0-2-timestomping-using-touch-command, Timestomping using Touch Command>> | Timestomping is an anti-forensics technique which is used to modify the timestamps of a file, often to mimic files that are in the same folder. | update | 5 

|<<prebuilt-rule-1-0-2-security-software-discovery-via-grep, Security Software Discovery via Grep>> | Identifies the use of the grep command to discover known third-party macOS and Linux security tools, such as Antivirus or Host Firewall details. | update | 3 

|<<prebuilt-rule-1-0-2-virtual-machine-fingerprinting-via-grep, Virtual Machine Fingerprinting via Grep>> | An adversary may attempt to get detailed information about the operating system and hardware. This rule identifies common locations used to discover virtual machine hardware by a non-root user. This technique has been used by the Pupy RAT and other malware. | update | 2 

|<<prebuilt-rule-1-0-2-potential-reverse-shell-activity-via-terminal, Potential Reverse Shell Activity via Terminal>> | Identifies the execution of a shell process with suspicious arguments which may be indicative of reverse shell activity. | update | 2 

|<<prebuilt-rule-1-0-2-suspicious-java-child-process, Suspicious JAVA Child Process>> | Identifies suspicious child processes of the Java interpreter process. This may indicate an attempt to execute a malicious JAR file or an exploitation attempt via a JAVA specific vulnerability. | update | 4 

|<<prebuilt-rule-1-0-2-hosts-file-modified, Hosts File Modified>> | The hosts file on endpoints is used to control manual IP address to hostname resolutions. The hosts file is the first point of lookup for DNS hostname resolution so if adversaries can modify the endpoint hosts file, they can route traffic to malicious infrastructure. This rule detects modifications to the hosts file on Microsoft Windows, Linux (Ubuntu or RHEL) and macOS systems. | update | 9 

|<<prebuilt-rule-1-0-2-threat-intel-filebeat-module-v8-x-indicator-match, Threat Intel Filebeat Module (v8.x) Indicator Match>> | This rule is triggered when indicators from the Threat Intel Filebeat module (v8.x) has a match against local file or network observations. | update | 3 

|<<prebuilt-rule-1-0-2-threat-intel-indicator-match, Threat Intel Indicator Match>> | This rule is triggered when indicators from the Threat Intel integrations have a match against local file or network observations. | update | 3 

|<<prebuilt-rule-1-0-2-aws-cloudtrail-log-created, AWS CloudTrail Log Created>> | Identifies the creation of an AWS log trail that specifies the settings for delivery of log data. | update | 6 

|<<prebuilt-rule-1-0-2-aws-cloudtrail-log-deleted, AWS CloudTrail Log Deleted>> | Identifies the deletion of an AWS log trail. An adversary may delete trails in an attempt to evade defenses. | update | 7 

|<<prebuilt-rule-1-0-2-aws-cloudwatch-alarm-deletion, AWS CloudWatch Alarm Deletion>> | Identifies the deletion of an AWS CloudWatch alarm. An adversary may delete alarms in an attempt to evade defenses. | update | 7 

|<<prebuilt-rule-1-0-2-aws-ec2-flow-log-deletion, AWS EC2 Flow Log Deletion>> | Identifies the deletion of one or more flow logs in AWS Elastic Compute Cloud (EC2). An adversary may delete flow logs in an attempt to evade defenses. | update | 7 

|<<prebuilt-rule-1-0-2-aws-ec2-network-access-control-list-deletion, AWS EC2 Network Access Control List Deletion>> | Identifies the deletion of an Amazon Elastic Compute Cloud (EC2) network access control list (ACL) or one of its ingress/egress entries. | update | 7 

|<<prebuilt-rule-1-0-2-aws-elasticache-security-group-created, AWS ElastiCache Security Group Created>> | Identifies when an ElastiCache security group has been created. | update | 2 

|<<prebuilt-rule-1-0-2-aws-elasticache-security-group-modified-or-deleted, AWS ElastiCache Security Group Modified or Deleted>> | Identifies when an ElastiCache security group has been modified or deleted. | update | 2 

|<<prebuilt-rule-1-0-2-aws-guardduty-detector-deletion, AWS GuardDuty Detector Deletion>> | Identifies the deletion of an Amazon GuardDuty detector. Upon deletion, GuardDuty stops monitoring the environment and all existing findings are lost. | update | 7 

|<<prebuilt-rule-1-0-2-aws-s3-bucket-configuration-deletion, AWS S3 Bucket Configuration Deletion>> | Identifies the deletion of various Amazon Simple Storage Service (S3) bucket configuration components. | update | 6 

|<<prebuilt-rule-1-0-2-aws-waf-access-control-list-deletion, AWS WAF Access Control List Deletion>> | Identifies the deletion of a specified AWS Web Application Firewall (WAF) access control list. | update | 7 

|<<prebuilt-rule-1-0-2-aws-waf-rule-or-rule-group-deletion, AWS WAF Rule or Rule Group Deletion>> | Identifies the deletion of a specified AWS Web Application Firewall (WAF) rule or rule group. | update | 8 

|<<prebuilt-rule-1-0-2-aws-rds-snapshot-restored, AWS RDS Snapshot Restored>> | Identifies when an attempt was made to restore an RDS Snapshot. Snapshots are sometimes shared by threat actors in order to exfiltrate bulk data. If the permissions were modified, verify if the snapshot was shared with an unauthorized or unexpected AWS account. | update | 3 

|<<prebuilt-rule-1-0-2-aws-eventbridge-rule-disabled-or-deleted, AWS EventBridge Rule Disabled or Deleted>> | Identifies when a user has disabled or deleted an EventBridge rule. This activity can result in an unintended loss of visibility in applications or a break in the flow with other AWS services. | update | 3 

|<<prebuilt-rule-1-0-2-aws-cloudwatch-log-group-deletion, AWS CloudWatch Log Group Deletion>> | Identifies the deletion of a specified AWS CloudWatch log group. When a log group is deleted, all the archived log events associated with the log group are also permanently deleted. | update | 7 

|<<prebuilt-rule-1-0-2-aws-cloudwatch-log-stream-deletion, AWS CloudWatch Log Stream Deletion>> | Identifies the deletion of an AWS CloudWatch log stream, which permanently deletes all associated archived log events with the stream. | update | 7 

|<<prebuilt-rule-1-0-2-aws-efs-file-system-or-mount-deleted, AWS EFS File System or Mount Deleted>> | Detects when an EFS File System or Mount is deleted. An adversary could break any file system using the mount target that is being deleted, which might disrupt instances or applications using those mounts. The mount must be deleted prior to deleting the File System, or the adversary will be unable to delete the File System. | update | 3 

|<<prebuilt-rule-1-0-2-aws-iam-group-deletion, AWS IAM Group Deletion>> | Identifies the deletion of a specified AWS Identity and Access Management (IAM) resource group. Deleting a resource group does not delete resources that are members of the group; it only deletes the group structure. | update | 6 

|<<prebuilt-rule-1-0-2-aws-rds-security-group-deletion, AWS RDS Security Group Deletion>> | Identifies the deletion of an Amazon Relational Database Service (RDS) Security group. | update | 3 

|<<prebuilt-rule-1-0-2-aws-deletion-of-rds-instance-or-cluster, AWS Deletion of RDS Instance or Cluster>> | Identifies the deletion of an Amazon Relational Database Service (RDS) Aurora database cluster, global database cluster, or database instance. | update | 7 

|<<prebuilt-rule-1-0-2-spike-in-aws-error-messages, Spike in AWS Error Messages>> | A machine learning job detected a significant spike in the rate of a particular error in the CloudTrail messages. Spikes in error messages may accompany attempts at privilege escalation, lateral movement, or discovery. | update | 9 

|<<prebuilt-rule-1-0-2-unusual-country-for-an-aws-command, Unusual Country For an AWS Command>> | A machine learning job detected AWS command activity that, while not inherently suspicious or abnormal, is sourcing from a geolocation (country) that is unusual for the command. This can be the result of compromised credentials or keys being used by a threat actor in a different geography than the authorized user(s). | update | 9 

|<<prebuilt-rule-1-0-2-aws-ec2-network-access-control-list-creation, AWS EC2 Network Access Control List Creation>> | Identifies the creation of an AWS Elastic Compute Cloud (EC2) network access control list (ACL) or an entry in a network ACL with a specified rule number. | update | 7 

|<<prebuilt-rule-1-0-2-aws-security-group-configuration-change-detection, AWS Security Group Configuration Change Detection>> | Identifies a change to an AWS Security Group Configuration. A security group is like a virtual firewall, and modifying configurations may allow unauthorized access. Threat actors may abuse this to establish persistence, exfiltrate data, or pivot in an AWS environment. | update | 4 

|<<prebuilt-rule-1-0-2-aws-iam-group-creation, AWS IAM Group Creation>> | Identifies the creation of a group in AWS Identity and Access Management (IAM). Groups specify permissions for multiple users. Any user in a group automatically has the permissions that are assigned to the group. | update | 7 

|<<prebuilt-rule-1-0-2-aws-rds-cluster-creation, AWS RDS Cluster Creation>> | Identifies the creation of a new Amazon Relational Database Service (RDS) Aurora DB cluster or global database spread across multiple regions. | update | 7 

|<<prebuilt-rule-1-0-2-aws-rds-security-group-creation, AWS RDS Security Group Creation>> | Identifies the creation of an Amazon Relational Database Service (RDS) Security group. | update | 3 

|<<prebuilt-rule-1-0-2-aws-rds-instance-creation, AWS RDS Instance Creation>> | Identifies the creation of an Amazon Relational Database Service (RDS) Aurora database instance. | update | 3 

|<<prebuilt-rule-1-0-2-aws-route-table-created, AWS Route Table Created>> | Identifies when an AWS Route Table has been created. | update | 2 

|<<prebuilt-rule-1-0-2-aws-route-table-modified-or-deleted, AWS Route Table Modified or Deleted>> | Identifies when an AWS Route Table has been modified or deleted. | update | 2 

|<<prebuilt-rule-1-0-2-aws-saml-activity, AWS SAML Activity>> | Identifies when SAML activity has occurred in AWS. An adversary could manipulate SAML to maintain access to the target. | update | 2 

|<<prebuilt-rule-1-0-2-aws-security-token-service-sts-assumerole-usage, AWS Security Token Service (STS) AssumeRole Usage>> | Identifies the use of AssumeRole. AssumeRole returns a set of temporary security credentials that can be used to access AWS resources. An adversary could use those credentials to move laterally and escalate privileges. | update | 2 

|<<prebuilt-rule-1-0-2-azure-event-hub-deletion, Azure Event Hub Deletion>> | Identifies an Event Hub deletion in Azure. An Event Hub is an event processing service that ingests and processes large volumes of events and data. An adversary may delete an Event Hub in an attempt to evade detection. | update | 6 

|<<prebuilt-rule-1-0-2-azure-firewall-policy-deletion, Azure Firewall Policy Deletion>> | Identifies the deletion of a firewall policy in Azure. An adversary may delete a firewall policy in an attempt to evade defenses and/or to eliminate barriers to their objective. | update | 6 

|<<prebuilt-rule-1-0-2-azure-frontdoor-web-application-firewall-waf-policy-deleted, Azure Frontdoor Web Application Firewall (WAF) Policy Deleted>> | Identifies the deletion of a Frontdoor Web Application Firewall (WAF) Policy in Azure. An adversary may delete a Frontdoor Web Application Firewall (WAF) Policy in an attempt to evade defenses and/or to eliminate barriers to their objective. | update | 2 

|<<prebuilt-rule-1-0-2-azure-kubernetes-events-deleted, Azure Kubernetes Events Deleted>> | Identifies when events are deleted in Azure Kubernetes. Kubernetes events are objects that log any state changes. Example events are a container creation, an image pull, or a pod scheduling on a node. An adversary may delete events in Azure Kubernetes in an attempt to evade detection. | update | 4 

|<<prebuilt-rule-1-0-2-azure-network-watcher-deletion, Azure Network Watcher Deletion>> | Identifies the deletion of a Network Watcher in Azure. Network Watchers are used to monitor, diagnose, view metrics, and enable or disable logs for resources in an Azure virtual network. An adversary may delete a Network Watcher in an attempt to evade defenses. | update | 6 

|<<prebuilt-rule-1-0-2-azure-alert-suppression-rule-created-or-modified, Azure Alert Suppression Rule Created or Modified>> | Identifies the creation of suppression rules in Azure. Suppression rules are a mechanism used to suppress alerts previously identified as false positives or too noisy to be in production. This mechanism can be abused or mistakenly configured, resulting in defense evasions and loss of security visibility. | update | 2 

|<<prebuilt-rule-1-0-2-azure-service-principal-credentials-added, Azure Service Principal Credentials Added>> | Identifies when new Service Principal credentials have been added in Azure. In most organizations, credentials will be added to service principals infrequently. Hijacking an application (by adding a rogue secret or certificate) with granted permissions will allow the attacker to access data that is normally protected by MFA requirements. | update | 2 

|<<prebuilt-rule-1-0-2-azure-kubernetes-pods-deleted, Azure Kubernetes Pods Deleted>> | Identifies the deletion of Azure Kubernetes Pods. Adversaries may delete a Kubernetes pod to disrupt the normal behavior of the environment. | update | 3 

|<<prebuilt-rule-1-0-2-azure-virtual-network-device-modified-or-deleted, Azure Virtual Network Device Modified or Deleted>> | Identifies when a virtual network device is modified or deleted. This can be a network virtual appliance, virtual hub, or virtual router. | update | 2 

|<<prebuilt-rule-1-0-2-azure-conditional-access-policy-modified, Azure Conditional Access Policy Modified>> | Identifies when an Azure Conditional Access policy is modified. Azure Conditional Access policies control access to resources via if-then statements. For example, if a user wants to access a resource, then they must complete an action such as using multi-factor authentication to access it. An adversary may modify a Conditional Access policy in order to weaken their target's security controls. | update | 6 

|<<prebuilt-rule-1-0-2-gcp-pub-sub-subscription-creation, GCP Pub/Sub Subscription Creation>> | Identifies the creation of a subscription in Google Cloud Platform (GCP). In GCP, the publisher-subscriber relationship (Pub/Sub) is an asynchronous messaging service that decouples event-producing and event-processing services. A subscription is a named resource representing the stream of messages to be delivered to the subscribing application. | update | 6 

|<<prebuilt-rule-1-0-2-gcp-pub-sub-topic-creation, GCP Pub/Sub Topic Creation>> | Identifies the creation of a topic in Google Cloud Platform (GCP). In GCP, the publisher-subscriber relationship (Pub/Sub) is an asynchronous messaging service that decouples event-producing and event-processing services. A topic is used to forward messages from publishers to subscribers. | update | 6 

|<<prebuilt-rule-1-0-2-gcp-logging-bucket-deletion, GCP Logging Bucket Deletion>> | Identifies a Logging bucket deletion in Google Cloud Platform (GCP). Log buckets are containers that store and organize log data. A deleted bucket stays in a pending state for 7 days, and Logging continues to route logs to the bucket during that time. To stop routing logs to a deleted bucket, you can delete the log sinks that have the bucket as their destination, or modify the filter for the sinks to stop it from routing logs to the deleted bucket. An adversary may delete a log bucket to evade detection. | update | 7 

|<<prebuilt-rule-1-0-2-gcp-logging-sink-deletion, GCP Logging Sink Deletion>> | Identifies a Logging sink deletion in Google Cloud Platform (GCP). Every time a log entry arrives, Logging compares the log entry to the sinks in that resource. Each sink whose filter matches the log entry writes a copy of the log entry to the sink's export destination. An adversary may delete a Logging sink to evade detection. | update | 6 

|<<prebuilt-rule-1-0-2-gcp-pub-sub-subscription-deletion, GCP Pub/Sub Subscription Deletion>> | Identifies the deletion of a subscription in Google Cloud Platform (GCP). In GCP, the publisher-subscriber relationship (Pub/Sub) is an asynchronous messaging service that decouples event-producing and event-processing services. A subscription is a named resource representing the stream of messages to be delivered to the subscribing application. | update | 6 

|<<prebuilt-rule-1-0-2-gcp-pub-sub-topic-deletion, GCP Pub/Sub Topic Deletion>> | Identifies the deletion of a topic in Google Cloud Platform (GCP). In GCP, the publisher-subscriber relationship (Pub/Sub) is an asynchronous messaging service that decouples event-producing and event-processing services. A publisher application creates and sends messages to a topic. Deleting a topic can interrupt message flow in the Pub/Sub pipeline. | update | 6 

|<<prebuilt-rule-1-0-2-gcp-iam-role-deletion, GCP IAM Role Deletion>> | Identifies an Identity and Access Management (IAM) role deletion in Google Cloud Platform (GCP). A role contains a set of permissions that allows you to perform specific actions on Google Cloud resources. An adversary may delete an IAM role to inhibit access to accounts utilized by legitimate users. | update | 6 

|<<prebuilt-rule-1-0-2-gcp-storage-bucket-deletion, GCP Storage Bucket Deletion>> | Identifies when a Google Cloud Platform (GCP) storage bucket is deleted. An adversary may delete a storage bucket in order to disrupt their target's business operations. | update | 6 

|<<prebuilt-rule-1-0-2-gcp-virtual-private-cloud-route-creation, GCP Virtual Private Cloud Route Creation>> | Identifies when a virtual private cloud (VPC) route is created in Google Cloud Platform (GCP). Google Cloud routes define the paths that network traffic takes from a virtual machine (VM) instance to other destinations. These destinations can be inside a Google VPC network or outside it. An adversary may create a route in order to impact the flow of network traffic in their target's cloud environment. | update | 7 

|<<prebuilt-rule-1-0-2-gcp-iam-custom-role-creation, GCP IAM Custom Role Creation>> | Identifies an Identity and Access Management (IAM) custom role creation in Google Cloud Platform (GCP). Custom roles are user-defined, and allow for the bundling of one or more supported permissions to meet specific needs. Custom roles will not be updated automatically and could lead to privilege creep if not carefully scrutinized. | update | 6 

|<<prebuilt-rule-1-0-2-gcp-iam-service-account-key-deletion, GCP IAM Service Account Key Deletion>> | Identifies the deletion of an Identity and Access Management (IAM) service account key in Google Cloud Platform (GCP). Each service account is associated with two sets of public/private RSA key pairs that are used to authenticate. If a key is deleted, the application will no longer be able to access Google Cloud resources using that key. A security best practice is to rotate your service account keys regularly. | update | 6 

|<<prebuilt-rule-1-0-2-gcp-kubernetes-rolebindings-created-or-patched, GCP Kubernetes Rolebindings Created or Patched>> | Identifies the creation or patching of potentially malicious role bindings. Users can use role bindings and cluster role bindings to assign roles to Kubernetes subjects (users, groups, or service accounts). | update | 2 

|<<prebuilt-rule-1-0-2-microsoft-365-inbox-forwarding-rule-created, Microsoft 365 Inbox Forwarding Rule Created>> | Identifies when a new Inbox forwarding rule is created in Microsoft 365. Inbox rules process messages in the Inbox based on conditions and take actions. In this case, the rules will forward the emails to a defined address. Attackers can abuse Inbox Rules to intercept and exfiltrate email data without making organization-wide configuration changes or having the corresponding privileges. | update | 3 

|<<prebuilt-rule-1-0-2-attempts-to-brute-force-a-microsoft-365-user-account, Attempts to Brute Force a Microsoft 365 User Account>> | Identifies attempts to brute force a Microsoft 365 user account. An adversary may attempt a brute force attack to obtain unauthorized access to user accounts. | update | 6 

|<<prebuilt-rule-1-0-2-potential-password-spraying-of-microsoft-365-user-accounts, Potential Password Spraying of Microsoft 365 User Accounts>> | Identifies a high number (25) of failed Microsoft 365 user authentication attempts from a single IP address within 30 minutes, which could be indicative of a password spraying attack. An adversary may attempt a password spraying attack to obtain unauthorized access to user accounts. | update | 5 

|<<prebuilt-rule-1-0-2-o365-excessive-single-sign-on-logon-errors, O365 Excessive Single Sign-On Logon Errors>> | Identifies accounts with a high number of single sign-on (SSO) logon errors. Excessive logon errors may indicate an attempt to brute force a password or SSO token. | update | 4 

|<<prebuilt-rule-1-0-2-microsoft-365-exchange-dlp-policy-removed, Microsoft 365 Exchange DLP Policy Removed>> | Identifies when a Data Loss Prevention (DLP) policy is removed in Microsoft 365. An adversary may remove a DLP policy to evade existing DLP monitoring. | update | 5 

|<<prebuilt-rule-1-0-2-microsoft-365-exchange-malware-filter-policy-deletion, Microsoft 365 Exchange Malware Filter Policy Deletion>> | Identifies when a malware filter policy has been deleted in Microsoft 365. A malware filter policy is used to alert administrators that an internal user sent a message that contained malware. This may indicate an account or machine compromise that would need to be investigated. Deletion of a malware filter policy may be done to evade detection. | update | 5 

|<<prebuilt-rule-1-0-2-microsoft-365-exchange-malware-filter-rule-modification, Microsoft 365 Exchange Malware Filter Rule Modification>> | Identifies when a malware filter rule has been deleted or disabled in Microsoft 365. An adversary or insider threat may want to modify a malware filter rule to evade detection. | update | 5 

|<<prebuilt-rule-1-0-2-microsoft-365-exchange-safe-attachment-rule-disabled, Microsoft 365 Exchange Safe Attachment Rule Disabled>> | Identifies when a safe attachment rule is disabled in Microsoft 365. Safe attachment rules can extend malware protections to include routing all messages and attachments without a known malware signature to a special hypervisor environment. An adversary or insider threat may disable a safe attachment rule to exfiltrate data or evade defenses. | update | 5 

|<<prebuilt-rule-1-0-2-o365-mailbox-audit-logging-bypass, O365 Mailbox Audit Logging Bypass>> | Detects the occurrence of mailbox audit bypass associations. The mailbox audit is responsible for logging specified mailbox events (like accessing a folder or a message or permanently deleting a message). However, actions taken by some authorized accounts, such as accounts used by third-party tools or accounts used for lawful monitoring, can create a large number of mailbox audit log entries and may not be of interest to your organization. Because of this, administrators can create bypass associations, allowing certain accounts to perform their tasks without being logged. Attackers can abuse this allowlist mechanism to conceal actions taken, as the mailbox audit will log no activity done by the account. | update | 3 

|<<prebuilt-rule-1-0-2-microsoft-365-exchange-transport-rule-creation, Microsoft 365 Exchange Transport Rule Creation>> | Identifies a transport rule creation in Microsoft 365. As a best practice, Exchange Online mail transport rules should not be set to forward email to domains outside of your organization. An adversary may create transport rules to exfiltrate data. | update | 6 

|<<prebuilt-rule-1-0-2-microsoft-365-exchange-transport-rule-modification, Microsoft 365 Exchange Transport Rule Modification>> | Identifies when a transport rule has been disabled or deleted in Microsoft 365. Mail flow rules (also known as transport rules) are used to identify and take action on messages that flow through your organization. An adversary or insider threat may modify a transport rule to exfiltrate data or evade defenses. | update | 5 

|<<prebuilt-rule-1-0-2-microsoft-365-potential-ransomware-activity, Microsoft 365 Potential ransomware activity>> | Identifies when Microsoft Cloud App Security reports that a user has uploaded files to the cloud that might be infected with ransomware. | update | 3 

|<<prebuilt-rule-1-0-2-microsoft-365-unusual-volume-of-file-deletion, Microsoft 365 Unusual Volume of File Deletion>> | Identifies that a user has deleted an unusually large volume of files as reported by Microsoft Cloud App Security. | update | 2 

|<<prebuilt-rule-1-0-2-microsoft-365-exchange-anti-phish-policy-deletion, Microsoft 365 Exchange Anti-Phish Policy Deletion>> | Identifies the deletion of an anti-phishing policy in Microsoft 365. By default, Microsoft 365 includes built-in features that help protect users from phishing attacks. Anti-phishing polices increase this protection by refining settings to better detect and prevent attacks. | update | 5 

|<<prebuilt-rule-1-0-2-microsoft-365-exchange-anti-phish-rule-modification, Microsoft 365 Exchange Anti-Phish Rule Modification>> | Identifies the modification of an anti-phishing rule in Microsoft 365. By default, Microsoft 365 includes built-in features that help protect users from phishing attacks. Anti-phishing rules increase this protection by refining settings to better detect and prevent attacks. | update | 5 

|<<prebuilt-rule-1-0-2-microsoft-365-exchange-safe-link-policy-disabled, Microsoft 365 Exchange Safe Link Policy Disabled>> | Identifies when a Safe Link policy is disabled in Microsoft 365. Safe Link policies for Office applications extend phishing protection to documents that contain hyperlinks, even after they have been delivered to a user. | update | 5 

|<<prebuilt-rule-1-0-2-microsoft-365-user-restricted-from-sending-email, Microsoft 365 User Restricted from Sending Email>> | Identifies when a user has been restricted from sending email due to exceeding sending limits of the service policies per the Security Compliance Center. | update | 2 

|<<prebuilt-rule-1-0-2-microsoft-365-exchange-dkim-signing-configuration-disabled, Microsoft 365 Exchange DKIM Signing Configuration Disabled>> | Identifies when a DomainKeys Identified Mail (DKIM) signing configuration is disabled in Microsoft 365. With DKIM in Microsoft 365, messages that are sent from Exchange Online will be cryptographically signed. This will allow the receiving email system to validate that the messages were generated by a server that the organization authorized and were not spoofed. | update | 6 

|<<prebuilt-rule-1-0-2-microsoft-365-teams-custom-application-interaction-allowed, Microsoft 365 Teams Custom Application Interaction Allowed>> | Identifies when custom applications are allowed in Microsoft Teams. If an organization requires applications other than those available in the Teams app store, custom applications can be developed as packages and uploaded. An adversary may abuse this behavior to establish persistence in an environment. | update | 5 

|<<prebuilt-rule-1-0-2-o365-exchange-suspicious-mailbox-right-delegation, O365 Exchange Suspicious Mailbox Right Delegation>> | Identifies the assignment of rights to access content from another mailbox. An adversary may use the compromised account to send messages to other accounts in the network of the target organization while creating inbox rules, so messages can evade spam/phishing detection mechanisms. | update | 2 

|<<prebuilt-rule-1-0-2-microsoft-365-exchange-management-group-role-assignment, Microsoft 365 Exchange Management Group Role Assignment>> | Identifies when a new role is assigned to a management group in Microsoft 365. An adversary may attempt to add a role in order to maintain persistence in an environment. | update | 5 

|<<prebuilt-rule-1-0-2-microsoft-365-teams-external-access-enabled, Microsoft 365 Teams External Access Enabled>> | Identifies when external access is enabled in Microsoft Teams. External access lets Teams and Skype for Business users communicate with other users that are outside their organization. An adversary may enable external access or add an allowed domain to exfiltrate data or maintain persistence in an environment. | update | 5 

|<<prebuilt-rule-1-0-2-microsoft-365-teams-guest-access-enabled, Microsoft 365 Teams Guest Access Enabled>> | Identifies when guest access is enabled in Microsoft Teams. Guest access in Teams allows people outside the organization to access teams and channels. An adversary may enable guest access to maintain persistence in an environment. | update | 5 

|<<prebuilt-rule-1-0-2-new-or-modified-federation-domain, New or Modified Federation Domain>> | Identifies a new or modified federation domain, which can be used to create a trust between O365 and an external identity provider. | update | 2 

|<<prebuilt-rule-1-0-2-unauthorized-access-to-an-okta-application, Unauthorized Access to an Okta Application>> | Identifies unauthorized access attempts to Okta applications. | update | 2 

|<<prebuilt-rule-1-0-2-potential-protocol-tunneling-via-earthworm, Potential Protocol Tunneling via EarthWorm>> | Identifies the execution of the EarthWorm tunneler. Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection and network filtering, or to enable access to otherwise unreachable systems. | update | 2 

|<<prebuilt-rule-1-0-2-potential-openssh-backdoor-logging-activity, Potential OpenSSH Backdoor Logging Activity>> | Identifies a Secure Shell (SSH) client or server process creating or writing to a known SSH backdoor log file. Adversaries may modify SSH related binaries for persistence or credential access via patching sensitive functions to enable unauthorized access or to log SSH credentials for exfiltration. | update | 2 

|<<prebuilt-rule-1-0-2-tampering-of-bash-command-line-history, Tampering of Bash Command-Line History>> | Adversaries may attempt to clear or disable the Bash command-line history in an attempt to evade detection or forensic investigations. | update | 7 

|<<prebuilt-rule-1-0-2-creation-of-hidden-files-and-directories, Creation of Hidden Files and Directories>> | Users can mark specific files as hidden simply by putting a "." as the first character in the file or folder name. Adversaries can use this to their advantage to hide files and folders on the system for persistence and defense evasion. This rule looks for hidden files or folders in common writable directories. | update | 8 

|<<prebuilt-rule-1-0-2-system-log-file-deletion, System Log File Deletion>> | Identifies the deletion of sensitive Linux system logs. This may indicate an attempt to evade detection or destroy forensic evidence on a system. | update | 4 

|<<prebuilt-rule-1-0-2-persistence-via-kde-autostart-script-or-desktop-file-modification, Persistence via KDE AutoStart Script or Desktop File Modification>> | Identifies the creation or modification of a K Desktop Environment (KDE) AutoStart script or desktop file that will execute upon each user logon. Adversaries may abuse this method for persistence. | update | 2 

|<<prebuilt-rule-1-0-2-access-of-stored-browser-credentials, Access of Stored Browser Credentials>> | Identifies the execution of a process with arguments pointing to known browser files that store passwords and cookies. Adversaries may acquire credentials from web browsers by reading files specific to the target browser. | update | 2 

|<<prebuilt-rule-1-0-2-access-to-keychain-credentials-directories, Access to Keychain Credentials Directories>> | Adversaries may collect the keychain storage data from a system to acquire credentials. Keychains are the built-in way for macOS to keep track of users' passwords and credentials for many services and features such as WiFi passwords, websites, secure notes and certificates. | update | 6 

|<<prebuilt-rule-1-0-2-dumping-of-keychain-content-via-security-command, Dumping of Keychain Content via Security Command>> | Adversaries may dump the content of the keychain storage data from a system to acquire credentials. Keychains are the built-in way for macOS to keep track of users' passwords and credentials for many services and features, including Wi-Fi and website passwords, secure notes, certificates, and Kerberos. | update | 2 

|<<prebuilt-rule-1-0-2-keychain-password-retrieval-via-command-line, Keychain Password Retrieval via Command Line>> | Adversaries may collect keychain storage data from a system to in order to acquire credentials. Keychains are the built-in way for macOS to keep track of users' passwords and credentials for many services and features, including Wi-Fi and website passwords, secure notes, certificates, and Kerberos. | update | 3 

|<<prebuilt-rule-1-0-2-prompt-for-credentials-with-osascript, Prompt for Credentials with OSASCRIPT>> | Identifies the use of osascript to execute scripts via standard input that may prompt a user with a rogue dialog for credentials. | update | 4 

|<<prebuilt-rule-1-0-2-systemkey-access-via-command-line, SystemKey Access via Command Line>> | Keychains are the built-in way for macOS to keep track of users' passwords and credentials for many services and features, including Wi-Fi and website passwords, secure notes, certificates, and Kerberos. Adversaries may collect the keychain storage data from a system to acquire credentials. | update | 2 

|<<prebuilt-rule-1-0-2-attempt-to-remove-file-quarantine-attribute, Attempt to Remove File Quarantine Attribute>> | Identifies a potential Gatekeeper bypass. In macOS, when applications or programs are downloaded from the internet, there is a quarantine flag set on the file. This attribute is read by Apple's Gatekeeper defense program at execution time. An adversary may disable this attribute to evade defenses. | update | 4 

|<<prebuilt-rule-1-0-2-potential-privacy-control-bypass-via-tccdb-modification, Potential Privacy Control Bypass via TCCDB Modification>> | Identifies the use of sqlite3 to directly modify the Transparency, Consent, and Control (TCC) SQLite database. This may indicate an attempt to bypass macOS privacy controls, including access to sensitive resources like the system camera, microphone, address book, and calendar. | update | 3 

|<<prebuilt-rule-1-0-2-potential-privacy-control-bypass-via-localhost-secure-copy, Potential Privacy Control Bypass via Localhost Secure Copy>> | Identifies use of the Secure Copy Protocol (SCP) to copy files locally by abusing the auto addition of the Secure Shell Daemon (sshd) to the authorized application list for Full Disk Access. This may indicate attempts to bypass macOS privacy controls to access sensitive files. | update | 2 

|<<prebuilt-rule-1-0-2-enumeration-of-users-or-groups-via-built-in-commands, Enumeration of Users or Groups via Built-in Commands>> | Identifies the execution of macOS built-in commands related to account or group enumeration. | update | 3 

|<<prebuilt-rule-1-0-2-macos-installer-spawns-network-event, macOS Installer Spawns Network Event>> | Identifies when the built in macOS Installer program generates a network event after attempting to install a .pkg file. This activity has been observed being leveraged by malware. | update | 4 

|<<prebuilt-rule-1-0-2-attempt-to-mount-smb-share-via-command-line, Attempt to Mount SMB Share via Command Line>> | Identifies the execution of macOS built-in commands to mount a Server Message Block (SMB) network share. Adversaries may use valid accounts to interact with a remote network share using SMB. | update | 2 

|<<prebuilt-rule-1-0-2-virtual-private-network-connection-attempt, Virtual Private Network Connection Attempt>> | Identifies the execution of macOS built-in commands to connect to an existing Virtual Private Network (VPN). | update | 2 

|<<prebuilt-rule-1-0-2-creation-of-hidden-login-item-via-apple-script, Creation of Hidden Login Item via Apple Script>> | Identifies the execution of osascript to create a hidden login item. This may indicate an attempt to persist a malicious program while concealing its presence. | update | 2 

|<<prebuilt-rule-1-0-2-launchdaemon-creation-or-modification-and-immediate-loading, LaunchDaemon Creation or Modification and Immediate Loading>> | Indicates the creation or modification of a launch daemon, which adversaries may use to repeatedly execute malicious payloads as part of persistence. | update | 4 

|<<prebuilt-rule-1-0-2-emond-rules-creation-or-modification, Emond Rules Creation or Modification>> | Identifies the creation or modification of the Event Monitor Daemon (emond) rules. Adversaries may abuse this service by writing a rule to execute commands when a defined event occurs, such as system start up or user authentication. | update | 2 

|<<prebuilt-rule-1-0-2-creation-of-hidden-launch-agent-or-daemon, Creation of Hidden Launch Agent or Daemon>> | Identifies the creation of a hidden launch agent or daemon. An adversary may establish persistence by installing a new launch agent or daemon which executes at login. | update | 2 

|<<prebuilt-rule-1-0-2-persistence-via-folder-action-script, Persistence via Folder Action Script>> | Detects modification of a Folder Action script. A Folder Action script is executed when the folder to which it is attached has items added or removed, or when its window is opened, closed, moved, or resized. Adversaries may abuse this feature to establish persistence by utilizing a malicious script. | update | 5 

|<<prebuilt-rule-1-0-2-persistence-via-login-or-logout-hook, Persistence via Login or Logout Hook>> | Identifies use of the Defaults command to install a login or logoff hook in MacOS. An adversary may abuse this capability to establish persistence in an environment by inserting code to be executed at login or logout. | update | 5 

|<<prebuilt-rule-1-0-2-sublime-plugin-or-application-script-modification, Sublime Plugin or Application Script Modification>> | Adversaries may create or modify the Sublime application plugins or scripts to execute a malicious payload each time the Sublime application is started. | update | 2 

|<<prebuilt-rule-1-0-2-unexpected-child-process-of-macos-screensaver-engine, Unexpected Child Process of macOS Screensaver Engine>> | Identifies when a child process is spawned by the screensaver engine process, which is consistent with an attacker's malicious payload being executed after the screensaver activated on the endpoint. An adversary can maintain persistence on a macOS endpoint by creating a malicious screensaver (.saver) file and configuring the screensaver plist file to execute code each time the screensaver is activated. | update | 3 

|<<prebuilt-rule-1-0-2-screensaver-plist-file-modified-by-unexpected-process, Screensaver Plist File Modified by Unexpected Process>> | Identifies when a screensaver plist file is modified by an unexpected process. An adversary can maintain persistence on a macOS endpoint by creating a malicious screensaver (.saver) file and configuring the screensaver plist file to execute code each time the screensaver is activated. | update | 2 

|<<prebuilt-rule-1-0-2-apple-scripting-execution-with-administrator-privileges, Apple Scripting Execution with Administrator Privileges>> | Identifies execution of the Apple script interpreter (osascript) without a password prompt and with administrator privileges. | update | 2 

|<<prebuilt-rule-1-0-2-unusual-process-for-a-windows-host, Unusual Process For a Windows Host>> | Identifies rare processes that do not usually run on individual hosts, which can indicate execution of unauthorized services, malware, or persistence mechanisms. Processes are considered rare when they only run occasionally as compared with other processes running on the host. | update | 10 

|<<prebuilt-rule-1-0-2-exporting-exchange-mailbox-via-powershell, Exporting Exchange Mailbox via PowerShell>> | Identifies the use of the Exchange PowerShell cmdlet, New-MailBoxExportRequest, to export the contents of a primary mailbox or archive to a .pst file. Adversaries may target user email to collect sensitive information. | update | 7 

|<<prebuilt-rule-1-0-2-powershell-suspicious-script-with-audio-capture-capabilities, PowerShell Suspicious Script with Audio Capture Capabilities>> | Detects PowerShell scripts that can record audio, a common feature in popular post-exploitation tooling. | update | 5 

|<<prebuilt-rule-1-0-2-powershell-keylogging-script, PowerShell Keylogging Script>> | Detects the use of Win32 API Functions that can be used to capture user keystrokes in PowerShell scripts. Attackers use this technique to capture user input, looking for credentials and/or other valuable data. | update | 4 

|<<prebuilt-rule-1-0-2-powershell-suspicious-script-with-screenshot-capabilities, PowerShell Suspicious Script with Screenshot Capabilities>> | Detects PowerShell scripts that can take screenshots, which is a common feature in post-exploitation kits and remote access tools (RATs). | update | 3 

|<<prebuilt-rule-1-0-2-encrypting-files-with-winrar-or-7z, Encrypting Files with WinRar or 7z>> | Identifies use of WinRar or 7z to create an encrypted files. Adversaries will often compress and encrypt data in preparation for exfiltration. | update | 5 

|<<prebuilt-rule-1-0-2-network-connection-via-certutil, Network Connection via Certutil>> | Identifies certutil.exe making a network connection. Adversaries could abuse certutil.exe to download a certificate, or malware, from a remote URL. | update | 7 

|<<prebuilt-rule-1-0-2-connection-to-commonly-abused-web-services, Connection to Commonly Abused Web Services>> | Adversaries may implement command and control (C2) communications that use common web services to hide their activity. This attack technique is typically targeted at an organization and uses web services common to the victim network, which allows the adversary to blend into legitimate traffic activity. These popular services are typically targeted since they have most likely been used before compromise, which helps malicious traffic blend in. | update | 8 

|<<prebuilt-rule-1-0-2-potential-dns-tunneling-via-nslookup, Potential DNS Tunneling via NsLookup>> | This rule identifies a large number (15) of nslookup.exe executions with an explicit query type from the same host. This may indicate command and control activity utilizing the DNS protocol. | update | 4 

|<<prebuilt-rule-1-0-2-connection-to-commonly-abused-free-ssl-certificate-providers, Connection to Commonly Abused Free SSL Certificate Providers>> | Identifies unusual processes connecting to domains using known free SSL certificates. Adversaries may employ a known encryption algorithm to conceal command and control traffic. | update | 4 

|<<prebuilt-rule-1-0-2-potential-command-and-control-via-internet-explorer, Potential Command and Control via Internet Explorer>> | Identifies instances of Internet Explorer (iexplore.exe) being started via the Component Object Model (COM) making unusual network connections. Adversaries could abuse Internet Explorer via COM to avoid suspicious processes making network connections and bypass host-based firewall restrictions. | update | 5 

|<<prebuilt-rule-1-0-2-port-forwarding-rule-addition, Port Forwarding Rule Addition>> | Identifies the creation of a new port forwarding rule. An adversary may abuse this technique to bypass network segmentation restrictions. | update | 6 

|<<prebuilt-rule-1-0-2-potential-remote-desktop-tunneling-detected, Potential Remote Desktop Tunneling Detected>> | Identifies potential use of an SSH utility to establish RDP over a reverse SSH Tunnel. This can be used by attackers to enable routing of network packets that would otherwise not reach their intended destination. | update | 5 

|<<prebuilt-rule-1-0-2-remote-file-download-via-desktopimgdownldr-utility, Remote File Download via Desktopimgdownldr Utility>> | Identifies the desktopimgdownldr utility being used to download a remote file. An adversary may use desktopimgdownldr to download arbitrary files as an alternative to certutil. | update | 6 

|<<prebuilt-rule-1-0-2-remote-file-download-via-mpcmdrun, Remote File Download via MpCmdRun>> | Identifies the Windows Defender configuration utility (MpCmdRun.exe) being used to download a remote file. | update | 6 

|<<prebuilt-rule-1-0-2-remote-file-download-via-powershell, Remote File Download via PowerShell>> | Identifies powershell.exe being used to download an executable file from an untrusted remote destination. | update | 4 

|<<prebuilt-rule-1-0-2-remote-file-download-via-script-interpreter, Remote File Download via Script Interpreter>> | Identifies built-in Windows script interpreters (cscript.exe or wscript.exe) being used to download an executable file from a remote destination. | update | 4 

|<<prebuilt-rule-1-0-2-sunburst-command-and-control-activity, SUNBURST Command and Control Activity>> | The malware known as SUNBURST targets the SolarWind's Orion business software for command and control. This rule detects post-exploitation command and control activity of the SUNBURST backdoor. | update | 5 

|<<prebuilt-rule-1-0-2-remote-file-copy-via-teamviewer, Remote File Copy via TeamViewer>> | Identifies an executable or script file remotely downloaded via a TeamViewer transfer session. | update | 6 

|<<prebuilt-rule-1-0-2-potential-credential-access-via-windows-utilities, Potential Credential Access via Windows Utilities>> | Identifies the execution of known Windows utilities often abused to dump LSASS memory or the Active Directory database (NTDS.dit) in preparation for credential access. | update | 6 

|<<prebuilt-rule-1-0-2-ntds-or-sam-database-file-copied, NTDS or SAM Database File Copied>> | Identifies a copy operation of the Active Directory Domain Database (ntds.dit) or Security Account Manager (SAM) files. Those files contain sensitive information including hashed domain and/or local credentials. | update | 6 

|<<prebuilt-rule-1-0-2-microsoft-build-engine-loading-windows-credential-libraries, Microsoft Build Engine Loading Windows Credential Libraries>> | An instance of MSBuild, the Microsoft Build Engine, loaded DLLs (dynamically linked libraries) responsible for Windows credential management. This technique is sometimes used for credential dumping. | update | 9 

|<<prebuilt-rule-1-0-2-creation-or-modification-of-domain-backup-dpapi-private-key, Creation or Modification of Domain Backup DPAPI private key>> | Identifies the creation or modification of Domain Backup private keys. Adversaries may extract the Data Protection API (DPAPI) domain backup key from a Domain Controller (DC) to be able to decrypt any domain user master key file. | update | 7 

|<<prebuilt-rule-1-0-2-credential-acquisition-via-registry-hive-dumping, Credential Acquisition via Registry Hive Dumping>> | Identifies attempts to export a registry hive which may contain credentials using the Windows reg.exe tool. | update | 5 

|<<prebuilt-rule-1-0-2-microsoft-iis-service-account-password-dumped, Microsoft IIS Service Account Password Dumped>> | Identifies the Internet Information Services (IIS) command-line tool, AppCmd, being used to list passwords. An attacker with IIS web server access via a web shell can decrypt and dump the IIS AppPool service account password using AppCmd. | update | 5 

|<<prebuilt-rule-1-0-2-microsoft-iis-connection-strings-decryption, Microsoft IIS Connection Strings Decryption>> | Identifies use of aspnet_regiis to decrypt Microsoft IIS connection strings. An attacker with Microsoft IIS web server access via a webshell or alike can decrypt and dump any hardcoded connection strings, such as the MSSQL service account password using aspnet_regiis command. | update | 5 

|<<prebuilt-rule-1-0-2-kerberos-traffic-from-unusual-process, Kerberos Traffic from Unusual Process>> | Identifies network connections to the standard Kerberos port from an unusual process. On Windows, the only process that normally performs Kerberos traffic from a domain joined host is lsass.exe. | update | 6 

|<<prebuilt-rule-1-0-2-lsass-memory-dump-creation, LSASS Memory Dump Creation>> | Identifies the creation of a Local Security Authority Subsystem Service (lsass.exe) default memory dump. This may indicate a credential access attempt via trusted system utilities such as Task Manager (taskmgr.exe) and SQL Dumper (sqldumper.exe) or known pentesting tools such as Dumpert and AndrewSpecial. | update | 8 

|<<prebuilt-rule-1-0-2-mimikatz-memssp-log-file-detected, Mimikatz Memssp Log File Detected>> | Identifies the password log file from the default Mimikatz memssp module. | update | 5 

|<<prebuilt-rule-1-0-2-modification-of-wdigest-security-provider, Modification of WDigest Security Provider>> | Identifies attempts to modify the WDigest security provider in the registry to force the user's password to be stored in clear text in memory. This behavior can be indicative of an adversary attempting to weaken the security configuration of an endpoint. Once the UseLogonCredential value is modified, the adversary may attempt to dump clear text passwords from memory. | update | 3 

|<<prebuilt-rule-1-0-2-network-logon-provider-registry-modification, Network Logon Provider Registry Modification>> | Identifies the modification of the network logon provider registry. Adversaries may register a rogue network logon provider module for persistence and/or credential access via intercepting the authentication credentials in clear text during user logon. | update | 3 

|<<prebuilt-rule-1-0-2-powershell-minidump-script, PowerShell MiniDump Script>> | This rule detects PowerShell scripts capable of dumping process memory using WindowsErrorReporting or Dbghelp.dll MiniDumpWriteDump. Attackers can use this tooling to dump LSASS and get access to credentials. | update | 6 

|<<prebuilt-rule-1-0-2-potential-credential-access-via-duplicatehandle-in-lsass, Potential Credential Access via DuplicateHandle in LSASS>> | Identifies suspicious access to an LSASS handle via DuplicateHandle from an unknown call trace module. This may indicate an attempt to bypass the NtOpenProcess API to evade detection and dump LSASS memory for credential access. | update | 3 

|<<prebuilt-rule-1-0-2-searching-for-saved-credentials-via-vaultcmd, Searching for Saved Credentials via VaultCmd>> | Windows Credential Manager allows you to create, view, or delete saved credentials for signing into websites, connected applications, and networks. An adversary may abuse this to list or dump credentials stored in the Credential Manager for saved usernames and passwords. This may also be performed in preparation of lateral movement. | update | 3 

|<<prebuilt-rule-1-0-2-potential-credential-access-via-renamed-com-services-dll, Potential Credential Access via Renamed COM+ Services DLL>> | Identifies suspicious renamed COMSVCS.DLL Image Load, which exports the MiniDump function that can be used to dump a process memory. This may indicate an attempt to dump LSASS memory while bypassing command-line based detection in preparation for credential access. | update | 3 

|<<prebuilt-rule-1-0-2-potential-credential-access-via-lsass-memory-dump, Potential Credential Access via LSASS Memory Dump>> | Identifies suspicious access to LSASS handle from a call trace pointing to DBGHelp.dll or DBGCore.dll, which both export the MiniDumpWriteDump method that can be used to dump LSASS memory content in preparation for credential access. | update | 4 

|<<prebuilt-rule-1-0-2-potential-lsass-memory-dump-via-psscapturesnapshot, Potential LSASS Memory Dump via PssCaptureSnapShot>> | Identifies suspicious access to an LSASS handle via PssCaptureSnapShot where two successive process accesses are performed by the same process and target two different instances of LSASS. This may indicate an attempt to evade detection and dump LSASS memory for credential access. | update | 3 

|<<prebuilt-rule-1-0-2-symbolic-link-to-shadow-copy-created, Symbolic Link to Shadow Copy Created>> | Identifies the creation of symbolic links to a shadow copy. Symbolic links can be used to access files in the shadow copy, including sensitive files such as ntds.dit, System Boot Key and browser offline credentials. | update | 3 

|<<prebuilt-rule-1-0-2-potential-lsass-clone-creation-via-psscapturesnapshot, Potential LSASS Clone Creation via PssCaptureSnapShot>> | Identifies the creation of an LSASS process clone via PssCaptureSnapShot where the parent process is the initial LSASS process instance. This may indicate an attempt to evade detection and dump LSASS memory for credential access. | update | 2 

|<<prebuilt-rule-1-0-2-adding-hidden-file-attribute-via-attrib, Adding Hidden File Attribute via Attrib>> | Adversaries can add the 'hidden' attribute to files to hide them from the user in an attempt to evade detection. | update | 12 

|<<prebuilt-rule-1-0-2-modification-of-amsienable-registry-key, Modification of AmsiEnable Registry Key>> | Identifies modifications of the AmsiEnable registry key to 0, which disables the Antimalware Scan Interface (AMSI). An adversary can modify this key to disable AMSI protections. | update | 4 

|<<prebuilt-rule-1-0-2-clearing-windows-console-history, Clearing Windows Console History>> | Identifies when a user attempts to clear console history. An adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. | update | 2 

|<<prebuilt-rule-1-0-2-clearing-windows-event-logs, Clearing Windows Event Logs>> | Identifies attempts to clear or disable Windows event log stores using Windows wevetutil command. This is often done by attackers in an attempt to evade detection or destroy forensic evidence on a system. | update | 12 

|<<prebuilt-rule-1-0-2-windows-event-logs-cleared, Windows Event Logs Cleared>> | Identifies attempts to clear Windows event log stores. This is often done by attackers in an attempt to evade detection or destroy forensic evidence on a system. | update | 3 

|<<prebuilt-rule-1-0-2-suspicious-process-from-conhost, Suspicious Process from Conhost>> | Identifies a suspicious Conhost child process which may be an indication of code injection activity. | update | 5 

|<<prebuilt-rule-1-0-2-creation-or-modification-of-root-certificate, Creation or Modification of Root Certificate>> | Identifies the creation or modification of a local trusted root certificate in Windows. The install of a malicious root certificate would allow an attacker the ability to masquerade malicious files as valid signed components from any entity (e.g. Microsoft). It could also allow an attacker to decrypt SSL traffic. | update | 2 

|<<prebuilt-rule-1-0-2-windows-defender-disabled-via-registry-modification, Windows Defender Disabled via Registry Modification>> | Identifies modifications to the Windows Defender registry settings to disable the service or set the service to be started manually. | update | 5 

|<<prebuilt-rule-1-0-2-windows-defender-exclusions-added-via-powershell, Windows Defender Exclusions Added via PowerShell>> | Identifies modifications to the Windows Defender configuration settings using PowerShell to add exclusions at the folder directory or process level. | update | 7 

|<<prebuilt-rule-1-0-2-delete-volume-usn-journal-with-fsutil, Delete Volume USN Journal with Fsutil>> | Identifies use of the fsutil.exe to delete the volume USNJRNL. This technique is used by attackers to eliminate evidence of files created during post-exploitation activities. | update | 10 

|<<prebuilt-rule-1-0-2-disable-windows-firewall-rules-via-netsh, Disable Windows Firewall Rules via Netsh>> | Identifies use of the netsh.exe to disable or weaken the local firewall. Attackers will use this command line tool to disable the firewall during troubleshooting or to enable network mobility. | update | 11 

|<<prebuilt-rule-1-0-2-disabling-windows-defender-security-settings-via-powershell, Disabling Windows Defender Security Settings via PowerShell>> | Identifies use of the Set-MpPreference PowerShell command to disable or weaken certain Windows Defender settings. | update | 3 

|<<prebuilt-rule-1-0-2-disable-windows-event-and-security-logs-using-built-in-tools, Disable Windows Event and Security Logs Using Built-in Tools>> | Identifies attempts to disable EventLog via the logman Windows utility, PowerShell, or auditpol. This is often done by attackers in an attempt to evade detection on a system. | update | 3 

|<<prebuilt-rule-1-0-2-dns-over-https-enabled-via-registry, DNS-over-HTTPS Enabled via Registry>> | Identifies when a user enables DNS-over-HTTPS. This can be used to hide internet activity or the process of exfiltrating data. With this enabled, an organization will lose visibility into data such as query type, response, and originating IP, which are used to determine bad actors. | update | 3 

|<<prebuilt-rule-1-0-2-suspicious-net-code-compilation, Suspicious .NET Code Compilation>> | Identifies suspicious .NET code execution. connections. | update | 6 

|<<prebuilt-rule-1-0-2-remote-desktop-enabled-in-windows-firewall-by-netsh, Remote Desktop Enabled in Windows Firewall by Netsh>> | Identifies use of the network shell utility (netsh.exe) to enable inbound Remote Desktop Protocol (RDP) connections in the Windows Firewall. | update | 5 

|<<prebuilt-rule-1-0-2-enable-host-network-discovery-via-netsh, Enable Host Network Discovery via Netsh>> | Identifies use of the netsh.exe program to enable host discovery via the network. Attackers can use this command-line tool to weaken the host firewall settings. | update | 3 

|<<prebuilt-rule-1-0-2-control-panel-process-with-unusual-arguments, Control Panel Process with Unusual Arguments>> | Identifies unusual instances of Control Panel with suspicious keywords or paths in the process command line value. Adversaries may abuse control.exe to proxy execution of malicious code. | update | 3 

|<<prebuilt-rule-1-0-2-imageload-via-windows-update-auto-update-client, ImageLoad via Windows Update Auto Update Client>> | Identifies abuse of the Windows Update Auto Update Client (wuauclt.exe) to load an arbitrary DLL. This behavior is used as a defense evasion technique to blend-in malicious activity with legitimate Windows software. | update | 6 

|<<prebuilt-rule-1-0-2-microsoft-build-engine-started-by-an-office-application, Microsoft Build Engine Started by an Office Application>> | An instance of MSBuild, the Microsoft Build Engine, was started by Excel or Word. This is unusual behavior for the Build Engine and could have been caused by an Excel or Word document executing a malicious script payload. | update | 10 

|<<prebuilt-rule-1-0-2-microsoft-build-engine-started-by-a-script-process, Microsoft Build Engine Started by a Script Process>> | An instance of MSBuild, the Microsoft Build Engine, was started by a script or the Windows command interpreter. This behavior is unusual and is sometimes used by malicious payloads. | update | 11 

|<<prebuilt-rule-1-0-2-microsoft-build-engine-started-by-a-system-process, Microsoft Build Engine Started by a System Process>> | An instance of MSBuild, the Microsoft Build Engine, was started by Explorer or the WMI (Windows Management Instrumentation) subsystem. This behavior is unusual and is sometimes used by malicious payloads. | update | 10 

|<<prebuilt-rule-1-0-2-microsoft-build-engine-using-an-alternate-name, Microsoft Build Engine Using an Alternate Name>> | An instance of MSBuild, the Microsoft Build Engine, was started after being renamed. This is uncommon behavior and may indicate an attempt to run unnoticed or undetected. | update | 10 

|<<prebuilt-rule-1-0-2-microsoft-build-engine-started-an-unusual-process, Microsoft Build Engine Started an Unusual Process>> | An instance of MSBuild, the Microsoft Build Engine, started a PowerShell script or the Visual C# Command Line Compiler. This technique is sometimes used to deploy a malicious payload using the Build Engine. | update | 9 

|<<prebuilt-rule-1-0-2-potential-dll-sideloading-via-trusted-microsoft-programs, Potential DLL SideLoading via Trusted Microsoft Programs>> | Identifies an instance of a Windows trusted program that is known to be vulnerable to DLL Search Order Hijacking starting after being renamed or from a non-standard path. This is uncommon behavior and may indicate an attempt to evade defenses via side loading a malicious DLL within the memory space of one of those processes. | update | 6 

|<<prebuilt-rule-1-0-2-potential-dll-side-loading-via-microsoft-antimalware-service-executable, Potential DLL Side-Loading via Microsoft Antimalware Service Executable>> | Identifies a Windows trusted program that is known to be vulnerable to DLL Search Order Hijacking starting after being renamed or from a non-standard path. This is uncommon behavior and may indicate an attempt to evade defenses via side-loading a malicious DLL within the memory space of one of those processes. | update | 3 

|<<prebuilt-rule-1-0-2-executable-file-creation-with-multiple-extensions, Executable File Creation with Multiple Extensions>> | Masquerading can allow an adversary to evade defenses and better blend in with the environment. One way it occurs is when the name or location of a file is manipulated as a means of tricking a user into executing what they think is a benign file type but is actually executable code. | update | 4 

|<<prebuilt-rule-1-0-2-encoded-executable-stored-in-the-registry, Encoded Executable Stored in the Registry>> | Identifies registry write modifications to hide an encoded portable executable. This could be indicative of adversary defense evasion by avoiding the storing of malicious content directly on disk. | update | 5 

|<<prebuilt-rule-1-0-2-iis-http-logging-disabled, IIS HTTP Logging Disabled>> | Identifies when Internet Information Services (IIS) HTTP Logging is disabled on a server. An attacker with IIS server access via a webshell or other mechanism can disable HTTP Logging as an effective anti-forensics measure. | update | 7 

|<<prebuilt-rule-1-0-2-suspicious-endpoint-security-parent-process, Suspicious Endpoint Security Parent Process>> | A suspicious Endpoint Security parent process was detected. This may indicate a process hollowing or other form of code injection. | update | 5 

|<<prebuilt-rule-1-0-2-renamed-autoit-scripts-interpreter, Renamed AutoIt Scripts Interpreter>> | Identifies a suspicious AutoIt process execution. Malware written as an AutoIt script tends to rename the AutoIt executable to avoid detection. | update | 6 

|<<prebuilt-rule-1-0-2-suspicious-werfault-child-process, Suspicious WerFault Child Process>> | A suspicious WerFault child process was detected, which may indicate an attempt to run unnoticed. Verify process details such as command line, network connections, file writes and parent process details as well. | update | 5 

|<<prebuilt-rule-1-0-2-program-files-directory-masquerading, Program Files Directory Masquerading>> | Identifies execution from a directory masquerading as the Windows Program Files directories. These paths are trusted and usually host trusted third party programs. An adversary may leverage masquerading, along with low privileges to bypass detections allowlisting those folders. | update | 7 

|<<prebuilt-rule-1-0-2-microsoft-windows-defender-tampering, Microsoft Windows Defender Tampering>> | Identifies when one or more features on Microsoft Defender are disabled. Adversaries may disable or tamper with Microsoft Defender features to evade detection and conceal malicious behavior. | update | 3 

|<<prebuilt-rule-1-0-2-suspicious-net-reflection-via-powershell, Suspicious .NET Reflection via PowerShell>> | Detects the use of Reflection.Assembly to load PEs and DLLs in memory in PowerShell scripts. Attackers use this method to load executables and DLLs without writing to the disk, bypassing security solutions. | update | 2 

|<<prebuilt-rule-1-0-2-powershell-suspicious-payload-encoded-and-compressed, PowerShell Suspicious Payload Encoded and Compressed>> | Identifies the use of .NET functionality for decompression and base64 decoding combined in PowerShell scripts, which malware and security tools heavily use to deobfuscate payloads and load them directly in memory to bypass defenses. | update | 3 

|<<prebuilt-rule-1-0-2-potential-process-injection-via-powershell, Potential Process Injection via PowerShell>> | Detects the use of Windows API functions that are commonly abused by malware and security tools to load malicious code or inject it into remote processes. | update | 4 

|<<prebuilt-rule-1-0-2-windows-firewall-disabled-via-powershell, Windows Firewall Disabled via PowerShell>> | Identifies when the Windows Firewall is disabled using PowerShell cmdlets, which can help attackers evade network constraints, like internet and network lateral communication restrictions. | update | 4 

|<<prebuilt-rule-1-0-2-scheduled-tasks-at-command-enabled, Scheduled Tasks AT Command Enabled>> | Identifies attempts to enable the Windows scheduled tasks AT command via the registry. Attackers may use this method to move laterally or persist locally. The AT command has been deprecated since Windows 8 and Windows Server 2012, but still exists for backwards compatibility. | update | 5 

|<<prebuilt-rule-1-0-2-potential-secure-file-deletion-via-sdelete-utility, Potential Secure File Deletion via SDelete Utility>> | Detects file name patterns generated by the use of Sysinternals SDelete utility to securely delete a file via multiple file overwrite and rename operations. | update | 6 

|<<prebuilt-rule-1-0-2-sip-provider-modification, SIP Provider Modification>> | Identifies modifications to the registered Subject Interface Package (SIP) providers. SIP providers are used by the Windows cryptographic system to validate file signatures on the system. This may be an attempt to bypass signature validation checks or inject code into critical processes. | update | 2 

|<<prebuilt-rule-1-0-2-solarwinds-process-disabling-services-via-registry, SolarWinds Process Disabling Services via Registry>> | Identifies a SolarWinds binary modifying the start type of a service to be disabled. An adversary may abuse this technique to manipulate relevant security services. | update | 5 

|<<prebuilt-rule-1-0-2-suspicious-certutil-commands, Suspicious CertUtil Commands>> | Identifies suspicious commands being used with certutil.exe. CertUtil is a native Windows component which is part of Certificate Services. CertUtil is often abused by attackers to live off the land for stealthier command and control or data exfiltration. | update | 13 

|<<prebuilt-rule-1-0-2-suspicious-execution-from-a-mounted-device, Suspicious Execution from a Mounted Device>> | Identifies when a script interpreter or signed binary is launched via a non-standard working directory. An attacker may use this technique to evade defenses. | update | 2 

|<<prebuilt-rule-1-0-2-suspicious-managed-code-hosting-process, Suspicious Managed Code Hosting Process>> | Identifies a suspicious managed code hosting process which could indicate code injection or other form of suspicious code execution. | update | 5 

|<<prebuilt-rule-1-0-2-suspicious-process-access-via-direct-system-call, Suspicious Process Access via Direct System Call>> | Identifies suspicious process access events from an unknown memory region. Endpoint security solutions usually hook userland Windows APIs in order to decide if the code that is being executed is malicious or not. It's possible to bypass hooked functions by writing malicious functions that call syscalls directly. | update | 3 

|<<prebuilt-rule-1-0-2-suspicious-process-creation-calltrace, Suspicious Process Creation CallTrace>> | Identifies when a process is created and immediately accessed from an unknown memory code region and by the same parent process. This may indicate a code injection or hollowing attempt. | update | 2 

|<<prebuilt-rule-1-0-2-suspicious-wmic-xsl-script-execution, Suspicious WMIC XSL Script Execution>> | Identifies WMIC allowlist bypass techniques by alerting on suspicious execution of scripts. When WMIC loads scripting libraries it may be indicative of an allowlist bypass. | update | 3 

|<<prebuilt-rule-1-0-2-suspicious-zoom-child-process, Suspicious Zoom Child Process>> | A suspicious Zoom child process was detected, which may indicate an attempt to run unnoticed. Verify process details such as command line, network connections, file writes and associated file signature details as well. | update | 6 

|<<prebuilt-rule-1-0-2-unusual-executable-file-creation-by-a-system-critical-process, Unusual Executable File Creation by a System Critical Process>> | Identifies an unexpected executable file being created or modified by a Windows system critical process, which may indicate activity related to remote code execution or other forms of exploitation. | update | 5 

|<<prebuilt-rule-1-0-2-unusual-file-creation-alternate-data-stream, Unusual File Creation - Alternate Data Stream>> | Identifies suspicious creation of Alternate Data Streams on highly targeted files. This is uncommon for legitimate files and sometimes done by adversaries to hide malware. | update | 2 

|<<prebuilt-rule-1-0-2-unusual-process-execution-path-alternate-data-stream, Unusual Process Execution Path - Alternate Data Stream>> | Identifies processes running from an Alternate Data Stream. This is uncommon for legitimate processes and sometimes done by adversaries to hide malware. | update | 6 

|<<prebuilt-rule-1-0-2-unusual-network-connection-via-dllhost, Unusual Network Connection via DllHost>> | Identifies unusual instances of dllhost.exe making outbound network connections. This may indicate adversarial Command and Control activity. | update | 2 

|<<prebuilt-rule-1-0-2-unusual-child-process-from-a-system-virtual-process, Unusual Child Process from a System Virtual Process>> | Identifies a suspicious child process of the Windows virtual system process, which could indicate code injection. | update | 5 

|<<prebuilt-rule-1-0-2-potential-evasion-via-filter-manager, Potential Evasion via Filter Manager>> | The Filter Manager Control Program (fltMC.exe) binary may be abused by adversaries to unload a filter driver and evade defenses. | update | 9 

|<<prebuilt-rule-1-0-2-whitespace-padding-in-process-command-line, Whitespace Padding in Process Command Line>> | Identifies process execution events where the command line value contains a long sequence of whitespace characters or multiple occurrences of contiguous whitespace. Attackers may attempt to evade signature-based detections by padding their malicious command with unnecessary whitespace characters. These observations should be investigated for malicious behavior. | update | 8 

|<<prebuilt-rule-1-0-2-adfind-command-activity, AdFind Command Activity>> | This rule detects the Active Directory query tool, AdFind.exe. AdFind has legitimate purposes, but it is frequently leveraged by threat actors to perform post-exploitation Active Directory reconnaissance. The AdFind tool has been observed in Trickbot, Ryuk, Maze, and FIN6 campaigns. For Winlogbeat, this rule requires Sysmon. | update | 7 

|<<prebuilt-rule-1-0-2-enumeration-of-administrator-accounts, Enumeration of Administrator Accounts>> | Identifies instances of lower privilege accounts enumerating Administrator accounts or groups using built-in Windows tools. | update | 5 

|<<prebuilt-rule-1-0-2-file-and-directory-discovery, File and Directory Discovery>> | Enumeration of files and directories using built-in tools. Adversaries may use the information discovered to plan follow-on activity. | update | 4 

|<<prebuilt-rule-1-0-2-account-discovery-command-via-system-account, Account Discovery Command via SYSTEM Account>> | Identifies when the SYSTEM account uses an account discovery utility. This could be a sign of discovery activity after an adversary has achieved privilege escalation. | update | 11 

|<<prebuilt-rule-1-0-2-windows-network-enumeration, Windows Network Enumeration>> | Identifies attempts to enumerate hosts in a network using the built-in Windows net.exe tool. | update | 5 

|<<prebuilt-rule-1-0-2-peripheral-device-discovery, Peripheral Device Discovery>> | Identifies use of the Windows file system utility (fsutil.exe ) to gather information about attached peripheral devices and components connected to a computer system. | update | 4 

|<<prebuilt-rule-1-0-2-powershell-suspicious-discovery-related-windows-api-functions, PowerShell Suspicious Discovery Related Windows API Functions>> | This rule detects the use of discovery-related Windows API functions in PowerShell Scripts. Attackers can use these functions to perform various situational awareness related activities, like enumerating users, shares, sessions, domain trusts, groups, etc. | update | 5 

|<<prebuilt-rule-1-0-2-external-ip-lookup-from-non-browser-process, External IP Lookup from Non-Browser Process>> | Identifies domains commonly used by adversaries for post-exploitation IP lookups. It is common for adversaries to test for Internet access and acquire their external IP address after they have gained access to a system. Among others, this has been observed in campaigns leveraging the information stealer, Trickbot. | update | 7 

|<<prebuilt-rule-1-0-2-enumeration-of-privileged-local-groups-membership, Enumeration of Privileged Local Groups Membership>> | Identifies instances of an unusual process enumerating built-in Windows privileged local groups membership like Administrators or Remote Desktop users. | update | 3 

|<<prebuilt-rule-1-0-2-remote-system-discovery-commands, Remote System Discovery Commands>> | Discovery of remote system information using built-in commands, which may be used to mover laterally. | update | 4 

|<<prebuilt-rule-1-0-2-security-software-discovery-using-wmic, Security Software Discovery using WMIC>> | Identifies the use of Windows Management Instrumentation Command (WMIC) to discover certain System Security Settings such as AntiVirus or Host Firewall details. | update | 5 

|<<prebuilt-rule-1-0-2-whoami-process-activity, Whoami Process Activity>> | Identifies use of whoami.exe which displays user, group, and privileges information for the user who is currently logged on to the local system. | update | 8 

|<<prebuilt-rule-1-0-2-command-execution-via-solarwinds-process, Command Execution via SolarWinds Process>> | A suspicious SolarWinds child process (Cmd.exe or Powershell.exe) was detected. | update | 4 

|<<prebuilt-rule-1-0-2-suspicious-solarwinds-child-process, Suspicious SolarWinds Child Process>> | A suspicious SolarWinds child process was detected, which may indicate an attempt to execute malicious programs. | update | 4 

|<<prebuilt-rule-1-0-2-execution-of-com-object-via-xwizard, Execution of COM object via Xwizard>> | Windows Component Object Model (COM) is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects or executable code. Xwizard can be used to run a COM object created in registry to evade defensive counter measures. | update | 2 

|<<prebuilt-rule-1-0-2-svchost-spawning-cmd, Svchost spawning Cmd>> | Identifies a suspicious parent child process relationship with cmd.exe descending from svchost.exe | update | 11 

|<<prebuilt-rule-1-0-2-unusual-parent-process-for-cmd-exe, Unusual Parent Process for cmd.exe>> | Identifies a suspicious parent child process relationship with cmd.exe descending from an unusual process. | update | 5 

|<<prebuilt-rule-1-0-2-command-shell-activity-started-via-rundll32, Command Shell Activity Started via RunDLL32>> | Identifies command shell activity started via RunDLL32, which is commonly abused by attackers to host malicious code. | update | 5 

|<<prebuilt-rule-1-0-2-enumeration-command-spawned-via-wmiprvse, Enumeration Command Spawned via WMIPrvSE>> | Identifies native Windows host and network enumeration commands spawned by the Windows Management Instrumentation Provider Service (WMIPrvSE). | update | 3 

|<<prebuilt-rule-1-0-2-process-execution-from-an-unusual-directory, Process Execution from an Unusual Directory>> | Identifies process execution from suspicious default Windows directories. This is sometimes done by adversaries to hide malware in trusted paths. | update | 4 

|<<prebuilt-rule-1-0-2-execution-from-unusual-directory-command-line, Execution from Unusual Directory - Command Line>> | Identifies process execution from suspicious default Windows directories. This may be abused by adversaries to hide malware in trusted paths. | update | 5 

|<<prebuilt-rule-1-0-2-suspicious-portable-executable-encoded-in-powershell-script, Suspicious Portable Executable Encoded in Powershell Script>> | Detects the presence of a portable executable (PE) in a PowerShell script by looking for its encoded header. Attackers embed PEs into PowerShell scripts to inject them into memory, avoiding defences by not writing to disk. | update | 5 

|<<prebuilt-rule-1-0-2-powershell-psreflect-script, PowerShell PSReflect Script>> | Detects the use of PSReflect in PowerShell scripts. Attackers leverage PSReflect as a library that enables PowerShell to access win32 API functions. | update | 3 

|<<prebuilt-rule-1-0-2-network-connection-via-registration-utility, Network Connection via Registration Utility>> | Identifies the native Windows tools regsvr32.exe, regsvr64.exe, RegSvcs.exe, or RegAsm.exe making a network connection. This may be indicative of an attacker bypassing allowlists or running arbitrary scripts via a signed Microsoft binary. | update | 11 

|<<prebuilt-rule-1-0-2-execution-via-local-sxs-shared-module, Execution via local SxS Shared Module>> | Identifies the creation, change, or deletion of a DLL module within a Windows SxS local folder. Adversaries may abuse shared modules to execute malicious payloads by instructing the Windows module loader to load DLLs from arbitrary local paths. | update | 5 

|<<prebuilt-rule-1-0-2-suspicious-cmd-execution-via-wmi, Suspicious Cmd Execution via WMI>> | Identifies suspicious command execution (cmd) via Windows Management Instrumentation (WMI) on a remote host. This could be indicative of adversary lateral movement. | update | 4 

|<<prebuilt-rule-1-0-2-suspicious-wmi-image-load-from-ms-office, Suspicious WMI Image Load from MS Office>> | Identifies a suspicious image load (wmiutils.dll) from Microsoft Office processes. This behavior may indicate adversarial activity where child processes are spawned via Windows Management Instrumentation (WMI). This technique can be used to execute code and evade traditional parent/child processes spawned from Microsoft Office products. | update | 5 

|<<prebuilt-rule-1-0-2-suspicious-pdf-reader-child-process, Suspicious PDF Reader Child Process>> | Identifies suspicious child processes of PDF reader applications. These child processes are often launched via exploitation of PDF applications or social engineering. | update | 8 

|<<prebuilt-rule-1-0-2-suspicious-powershell-engine-imageload, Suspicious PowerShell Engine ImageLoad>> | Identifies the PowerShell engine being invoked by unexpected processes. Rather than executing PowerShell functionality with powershell.exe, some attackers do this to operate more stealthily. | update | 5 

|<<prebuilt-rule-1-0-2-suspicious-process-execution-via-renamed-psexec-executable, Suspicious Process Execution via Renamed PsExec Executable>> | Identifies suspicious psexec activity which is executing from the psexec service that has been renamed, possibly to evade detection. | update | 5 

|<<prebuilt-rule-1-0-2-suspicious-execution-short-program-name, Suspicious Execution - Short Program Name>> | Identifies process execution with a single character process name. This is often done by adversaries while staging or executing temporary utilities. | update | 4 

|<<prebuilt-rule-1-0-2-process-activity-via-compiled-html-file, Process Activity via Compiled HTML File>> | Compiled HTML files (.chm) are commonly distributed as part of the Microsoft HTML Help system. Adversaries may conceal malicious code in a CHM file and deliver it to a victim for execution. CHM content is loaded by the HTML Help executable program (hh.exe). | update | 11 

|<<prebuilt-rule-1-0-2-conhost-spawned-by-suspicious-parent-process, Conhost Spawned By Suspicious Parent Process>> | Detects when the Console Window Host (conhost.exe) process is spawned by a suspicious parent process, which could be indicative of code injection. | update | 5 

|<<prebuilt-rule-1-0-2-execution-via-mssql-xp-cmdshell-stored-procedure, Execution via MSSQL xp_cmdshell Stored Procedure>> | Identifies execution via MSSQL xp_cmdshell stored procedure. Malicious users may attempt to elevate their privileges by using xp_cmdshell, which is disabled by default, thus, it's important to review the context of it's use. | update | 5 

|<<prebuilt-rule-1-0-2-third-party-backup-files-deleted-via-unexpected-process, Third-party Backup Files Deleted via Unexpected Process>> | Identifies the deletion of backup files, saved using third-party software, by a process outside of the backup suite. Adversaries may delete Backup files to ensure that recovery from a ransomware attack is less likely. | update | 3 

|<<prebuilt-rule-1-0-2-deleting-backup-catalogs-with-wbadmin, Deleting Backup Catalogs with Wbadmin>> | Identifies use of the wbadmin.exe to delete the backup catalog. Ransomware and other malware may do this to prevent system recovery. | update | 11 

|<<prebuilt-rule-1-0-2-modification-of-boot-configuration, Modification of Boot Configuration>> | Identifies use of bcdedit.exe to delete boot configuration data. This tactic is sometimes used as by malware or an attacker as a destructive technique. | update | 10 

|<<prebuilt-rule-1-0-2-high-number-of-process-and-or-service-terminations, High Number of Process and/or Service Terminations>> | This rule identifies a high number (10) of process terminations (stop, delete, or suspend) from the same host within a short time period. | update | 4 

|<<prebuilt-rule-1-0-2-volume-shadow-copy-deleted-or-resized-via-vssadmin, Volume Shadow Copy Deleted or Resized via VssAdmin>> | Identifies use of vssadmin.exe for shadow copy deletion or resizing on endpoints. This commonly occurs in tandem with ransomware or other destructive attacks. | update | 12 

|<<prebuilt-rule-1-0-2-volume-shadow-copy-deletion-via-powershell, Volume Shadow Copy Deletion via PowerShell>> | Identifies the use of the Win32_ShadowCopy class and related cmdlets to achieve shadow copy deletion. This commonly occurs in tandem with ransomware or other destructive attacks. | update | 3 

|<<prebuilt-rule-1-0-2-volume-shadow-copy-deletion-via-wmic, Volume Shadow Copy Deletion via WMIC>> | Identifies use of wmic.exe for shadow copy deletion on endpoints. This commonly occurs in tandem with ransomware or other destructive attacks. | update | 11 

|<<prebuilt-rule-1-0-2-windows-script-executing-powershell, Windows Script Executing PowerShell>> | Identifies a PowerShell process launched by either cscript.exe or wscript.exe. Observing Windows scripting processes executing a PowerShell script, may be indicative of malicious activity. | update | 10 

|<<prebuilt-rule-1-0-2-microsoft-exchange-server-um-writing-suspicious-files, Microsoft Exchange Server UM Writing Suspicious Files>> | Identifies suspicious files being written by the Microsoft Exchange Server Unified Messaging (UM) service. This activity has been observed exploiting CVE-2021-26858. | update | 3 

|<<prebuilt-rule-1-0-2-microsoft-exchange-server-um-spawning-suspicious-processes, Microsoft Exchange Server UM Spawning Suspicious Processes>> | Identifies suspicious processes being spawned by the Microsoft Exchange Server Unified Messaging (UM) service. This activity has been observed exploiting CVE-2021-26857. | update | 2 

|<<prebuilt-rule-1-0-2-microsoft-exchange-worker-spawning-suspicious-processes, Microsoft Exchange Worker Spawning Suspicious Processes>> | Identifies suspicious processes being spawned by the Microsoft Exchange Server worker process (w3wp). This activity may indicate exploitation activity or access to an existing web shell backdoor. | update | 3 

|<<prebuilt-rule-1-0-2-suspicious-ms-office-child-process, Suspicious MS Office Child Process>> | Identifies suspicious child processes of frequently targeted Microsoft Office applications (Word, PowerPoint, Excel). These child processes are often launched during exploitation of Office applications or from documents with malicious macros. | update | 10 

|<<prebuilt-rule-1-0-2-suspicious-ms-outlook-child-process, Suspicious MS Outlook Child Process>> | Identifies suspicious child processes of Microsoft Outlook. These child processes are often associated with spear phishing activity. | update | 10 

|<<prebuilt-rule-1-0-2-unusual-child-process-of-dns-exe, Unusual Child Process of dns.exe>> | Identifies an unexpected process spawning from dns.exe, the process responsible for Windows DNS server services, which may indicate activity related to remote code execution or other forms of exploitation. | update | 6 

|<<prebuilt-rule-1-0-2-unusual-file-modification-by-dns-exe, Unusual File Modification by dns.exe>> | Identifies an unexpected file being modified by dns.exe, the process responsible for Windows DNS Server services, which may indicate activity related to remote code execution or other forms of exploitation. | update | 6 

|<<prebuilt-rule-1-0-2-suspicious-explorer-child-process, Suspicious Explorer Child Process>> | Identifies a suspicious Windows explorer child process. Explorer.exe can be abused to launch malicious scripts or executables from a trusted parent process. | update | 5 

|<<prebuilt-rule-1-0-2-incoming-dcom-lateral-movement-via-mshta, Incoming DCOM Lateral Movement via MSHTA>> | Identifies the use of Distributed Component Object Model (DCOM) to execute commands from a remote host, which are launched via the HTA Application COM Object. This behavior may indicate an attacker abusing a DCOM application to move laterally while attempting to evade detection. | update | 6 

|<<prebuilt-rule-1-0-2-nullsessionpipe-registry-modification, NullSessionPipe Registry Modification>> | Identifies NullSessionPipe registry modifications that specify which pipes can be accessed anonymously. This could be indicative of adversary lateral movement preparation by making the added pipe available to everyone. | update | 2 

|<<prebuilt-rule-1-0-2-abnormally-large-dns-response, Abnormally Large DNS Response>> | Specially crafted DNS requests can manipulate a known overflow vulnerability in some Windows DNS servers, resulting in Remote Code Execution (RCE) or a Denial of Service (DoS) from crashing the service. | update | 7 

|<<prebuilt-rule-1-0-2-potential-remote-desktop-shadowing-activity, Potential Remote Desktop Shadowing Activity>> | Identifies the modification of the Remote Desktop Protocol (RDP) Shadow registry or the execution of processes indicative of an active RDP shadowing session. An adversary may abuse the RDP Shadowing feature to spy on or control other users active RDP sessions. | update | 2 

|<<prebuilt-rule-1-0-2-execution-via-tsclient-mountpoint, Execution via TSClient Mountpoint>> | Identifies execution from the Remote Desktop Protocol (RDP) shared mountpoint tsclient on the target host. This may indicate a lateral movement attempt. | update | 4 

|<<prebuilt-rule-1-0-2-mounting-hidden-or-webdav-remote-shares, Mounting Hidden or WebDav Remote Shares>> | Identifies the use of net.exe to mount a WebDav or hidden remote share. This may indicate lateral movement or preparation for data exfiltration. | update | 4 

|<<prebuilt-rule-1-0-2-incoming-execution-via-powershell-remoting, Incoming Execution via PowerShell Remoting>> | Identifies remote execution via Windows PowerShell remoting. Windows PowerShell remoting allows a user to run any Windows PowerShell command on one or more remote computers. This could be an indication of lateral movement. | update | 5 

|<<prebuilt-rule-1-0-2-rdp-enabled-via-registry, RDP Enabled via Registry>> | Identifies registry write modifications to enable Remote Desktop Protocol (RDP) access. This could be indicative of adversary lateral movement preparation. | update | 6 

|<<prebuilt-rule-1-0-2-potential-sharprdp-behavior, Potential SharpRDP Behavior>> | Identifies potential behavior of SharpRDP, which is a tool that can be used to perform authenticated command execution against a remote target via Remote Desktop Protocol (RDP) for the purposes of lateral movement. | update | 6 

|<<prebuilt-rule-1-0-2-remote-file-copy-to-a-hidden-share, Remote File Copy to a Hidden Share>> | Identifies a remote file copy attempt to a hidden network share. This may indicate lateral movement or data staging activity. | update | 4 

|<<prebuilt-rule-1-0-2-remote-scheduled-task-creation, Remote Scheduled Task Creation>> | Identifies remote scheduled task creations on a target host. This could be indicative of adversary lateral movement. | update | 8 

|<<prebuilt-rule-1-0-2-service-control-spawned-via-script-interpreter, Service Control Spawned via Script Interpreter>> | Identifies Service Control (sc.exe) spawning from script interpreter processes to create, modify, or start services. This could be indicative of adversary lateral movement but will be noisy if commonly done by admins. | update | 11 

|<<prebuilt-rule-1-0-2-suspicious-rdp-activex-client-loaded, Suspicious RDP ActiveX Client Loaded>> | Identifies suspicious Image Loading of the Remote Desktop Services ActiveX Client (mstscax), this may indicate the presence of RDP lateral movement capability. | update | 4 

|<<prebuilt-rule-1-0-2-lateral-movement-via-startup-folder, Lateral Movement via Startup Folder>> | Identifies suspicious file creations in the startup folder of a remote system. An adversary could abuse this to move laterally by dropping a malicious script or executable that will be executed after a reboot or user logon. | update | 4 

|<<prebuilt-rule-1-0-2-adobe-hijack-persistence, Adobe Hijack Persistence>> | Detects writing executable files that will be automatically launched by Adobe on launch. | update | 10 

|<<prebuilt-rule-1-0-2-registry-persistence-via-appcert-dll, Registry Persistence via AppCert DLL>> | Detects attempts to maintain persistence by creating registry keys using AppCert DLLs. AppCert DLLs are loaded by every process using the common API functions to create processes. | update | 5 

|<<prebuilt-rule-1-0-2-registry-persistence-via-appinit-dll, Registry Persistence via AppInit DLL>> | Attackers may maintain persistence by creating registry keys using AppInit DLLs. AppInit DLLs are loaded by every process using the common library, user32.dll. | update | 4 

|<<prebuilt-rule-1-0-2-creation-of-a-hidden-local-user-account, Creation of a Hidden Local User Account>> | Identifies the creation of a hidden local user account by appending the dollar sign to the account name. This is sometimes done by attackers to increase access to a system and avoid appearing in the results of accounts listing using the net users command. | update | 3 

|<<prebuilt-rule-1-0-2-image-file-execution-options-injection, Image File Execution Options Injection>> | The Debugger and SilentProcessExit registry keys can allow an adversary to intercept the execution of files, causing a different process to be executed. This functionality can be abused by an adversary to establish persistence. | update | 5 

|<<prebuilt-rule-1-0-2-suspicious-startup-shell-folder-modification, Suspicious Startup Shell Folder Modification>> | Identifies suspicious startup shell folder modifications to change the default Startup directory in order to bypass detections monitoring file creation in the Windows Startup folder. | update | 5 

|<<prebuilt-rule-1-0-2-creation-or-modification-of-a-new-gpo-scheduled-task-or-service, Creation or Modification of a new GPO Scheduled Task or Service>> | Detects the creation or modification of a new Group Policy based scheduled task or service. These methods are used for legitimate system administration, but can also be abused by an attacker with domain admin permissions to execute a malicious payload remotely on all or a subset of the domain joined machines. | update | 7 

|<<prebuilt-rule-1-0-2-persistence-via-scheduled-job-creation, Persistence via Scheduled Job Creation>> | A job can be used to schedule programs or scripts to be executed at a specified date and time. Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. | update | 3 

|<<prebuilt-rule-1-0-2-local-scheduled-task-creation, Local Scheduled Task Creation>> | Indicates the creation of a scheduled task. Adversaries can use these to establish persistence, move laterally, and/or escalate privileges. | update | 12 

|<<prebuilt-rule-1-0-2-persistence-via-microsoft-office-addins, Persistence via Microsoft Office AddIns>> | Detects attempts to establish persistence on an endpoint by abusing Microsoft Office add-ins. | update | 4 

|<<prebuilt-rule-1-0-2-persistence-via-microsoft-outlook-vba, Persistence via Microsoft Outlook VBA>> | Detects attempts to establish persistence on an endpoint by installing a rogue Microsoft Outlook VBA Template. | update | 4 

|<<prebuilt-rule-1-0-2-new-activesyncalloweddeviceid-added-via-powershell, New ActiveSyncAllowedDeviceID Added via PowerShell>> | Identifies the use of the Exchange PowerShell cmdlet, Set-CASMailbox, to add a new ActiveSync allowed device. Adversaries may target user email to collect sensitive information. | update | 7 

|<<prebuilt-rule-1-0-2-potential-modification-of-accessibility-binaries, Potential Modification of Accessibility Binaries>> | Windows contains accessibility features that may be launched with a key combination before a user has logged in. An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system. | update | 8 

|<<prebuilt-rule-1-0-2-uncommon-registry-persistence-change, Uncommon Registry Persistence Change>> | Detects changes to registry persistence keys that are not commonly used or modified by legitimate programs. This could be an indication of an adversary's attempt to persist in a stealthy manner. | update | 8 

|<<prebuilt-rule-1-0-2-account-password-reset-remotely, Account Password Reset Remotely>> | Identifies an attempt to reset an account password remotely. Adversaries may manipulate account passwords to maintain access or evade password duration policies and preserve compromised credentials. | update | 3 

|<<prebuilt-rule-1-0-2-startup-or-run-key-registry-modification, Startup or Run Key Registry Modification>> | Identifies run key or startup key registry modifications. In order to survive reboots and other system interrupts, attackers will modify run keys within the registry or leverage startup folder items as a form of persistence. | update | 7 

|<<prebuilt-rule-1-0-2-unusual-persistence-via-services-registry, Unusual Persistence via Services Registry>> | Identifies processes modifying the services registry key directly, instead of through the expected Windows APIs. This could be an indication of an adversary attempting to stealthily persist through abnormal service creation or modification of an existing service. | update | 5 

|<<prebuilt-rule-1-0-2-startup-persistence-by-a-suspicious-process, Startup Persistence by a Suspicious Process>> | Identifies files written to or modified in the startup folder by commonly abused processes. Adversaries may use this technique to maintain persistence. | update | 4 

|<<prebuilt-rule-1-0-2-startup-folder-persistence-via-unsigned-process, Startup Folder Persistence via Unsigned Process>> | Identifies files written or modified in the startup folder by unsigned processes. Adversaries may abuse this technique to maintain persistence in an environment. | update | 3 

|<<prebuilt-rule-1-0-2-persistent-scripts-in-the-startup-directory, Persistent Scripts in the Startup Directory>> | Identifies script engines creating files in the Startup folder, or the creation of script files in the Startup folder. Adversaries may abuse this technique to maintain persistence in an environment. | update | 4 

|<<prebuilt-rule-1-0-2-component-object-model-hijacking, Component Object Model Hijacking>> | Identifies Component Object Model (COM) hijacking via registry modification. Adversaries may establish persistence by executing malicious content triggered by hijacked references to COM objects. | update | 6 

|<<prebuilt-rule-1-0-2-suspicious-image-load-taskschd-dll-from-ms-office, Suspicious Image Load (taskschd.dll) from MS Office>> | Identifies a suspicious image load (taskschd.dll) from Microsoft Office processes. This behavior may indicate adversarial activity where a scheduled task is configured via Windows Component Object Model (COM). This technique can be used to configure persistence and evade monitoring by avoiding the usage of the traditional Windows binary (schtasks.exe) used to manage scheduled tasks. | update | 4 

|<<prebuilt-rule-1-0-2-suspicious-execution-via-scheduled-task, Suspicious Execution via Scheduled Task>> | Identifies execution of a suspicious program via scheduled tasks by looking at process lineage and command line usage. | update | 5 

|<<prebuilt-rule-1-0-2-suspicious-imagepath-service-creation, Suspicious ImagePath Service Creation>> | Identifies the creation of a suspicious ImagePath value. This could be an indication of an adversary attempting to stealthily persist or escalate privileges through abnormal service creation. | update | 4 

|<<prebuilt-rule-1-0-2-system-shells-via-services, System Shells via Services>> | Windows services typically run as SYSTEM and can be used as a privilege escalation opportunity. Malware or penetration testers may run a shell as a service to gain SYSTEM permissions. | update | 11 

|<<prebuilt-rule-1-0-2-potential-persistence-via-time-provider-modification, Potential Persistence via Time Provider Modification>> | Identifies modification of the Time Provider. Adversaries may establish persistence by registering and enabling a malicious DLL as a time provider. Windows uses the time provider architecture to obtain accurate time stamps from other network devices or clients in the network. Time providers are implemented in the form of a DLL file which resides in the System32 folder. The service W32Time initiates during the startup of Windows and loads w32time.dll. | update | 3 

|<<prebuilt-rule-1-0-2-user-added-to-privileged-group-in-active-directory, User Added to Privileged Group in Active Directory>> | Identifies a user being added to a privileged group in Active Directory. Privileged accounts and groups in Active Directory are those to which powerful rights, privileges, and permissions are granted that allow them to perform nearly any action in Active Directory and on domain-joined systems. | update | 4 

|<<prebuilt-rule-1-0-2-user-account-creation, User Account Creation>> | Identifies attempts to create new users. This is sometimes done by attackers to increase access or establish persistence on a system or domain. | update | 10 

|<<prebuilt-rule-1-0-2-potential-application-shimming-via-sdbinst, Potential Application Shimming via Sdbinst>> | The Application Shim was created to allow for backward compatibility of software as the operating system codebase changes over time. This Windows functionality has been abused by attackers to stealthily gain persistence and arbitrary code execution in legitimate Windows processes. | update | 9 

|<<prebuilt-rule-1-0-2-persistence-via-bits-job-notify-cmdline, Persistence via BITS Job Notify Cmdline>> | An adversary can use the Background Intelligent Transfer Service (BITS) SetNotifyCmdLine method to execute a program that runs after a job finishes transferring data or after a job enters a specified state in order to persist on a system. | update | 2 

|<<prebuilt-rule-1-0-2-persistence-via-hidden-run-key-detected, Persistence via Hidden Run Key Detected>> | Identifies a persistence mechanism that utilizes the NtSetValueKey native API to create a hidden (null terminated) registry key. An adversary may use this method to hide from system utilities such as the Registry Editor (regedit). | update | 5 

|<<prebuilt-rule-1-0-2-installation-of-security-support-provider, Installation of Security Support Provider>> | Identifies registry modifications related to the Windows Security Support Provider (SSP) configuration. Adversaries may abuse this to establish persistence in an environment. | update | 5 

|<<prebuilt-rule-1-0-2-persistence-via-telemetrycontroller-scheduled-task-hijack, Persistence via TelemetryController Scheduled Task Hijack>> | Detects the successful hijack of Microsoft Compatibility Appraiser scheduled task to establish persistence with an integrity level of system. | update | 7 

|<<prebuilt-rule-1-0-2-persistence-via-update-orchestrator-service-hijack, Persistence via Update Orchestrator Service Hijack>> | Identifies potential hijacking of the Microsoft Update Orchestrator Service to establish persistence with an integrity level of SYSTEM. | update | 5 

|<<prebuilt-rule-1-0-2-persistence-via-wmi-event-subscription, Persistence via WMI Event Subscription>> | An adversary can use Windows Management Instrumentation (WMI) to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Adversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system. | update | 5 

|<<prebuilt-rule-1-0-2-persistence-via-wmi-standard-registry-provider, Persistence via WMI Standard Registry Provider>> | Identifies use of the Windows Management Instrumentation StdRegProv (registry provider) to modify commonly abused registry locations for persistence. | update | 2 

|<<prebuilt-rule-1-0-2-webshell-detection-script-process-child-of-common-web-processes, Webshell Detection: Script Process Child of Common Web Processes>> | Identifies suspicious commands executed via a web server, which may suggest a vulnerability and remote shell access. | update | 4 

|<<prebuilt-rule-1-0-2-disabling-user-account-control-via-registry-modification, Disabling User Account Control via Registry Modification>> | User Account Control (UAC) can help mitigate the impact of malware on Windows hosts. With UAC, apps and tasks always run in the security context of a non-administrator account, unless an administrator specifically authorizes administrator-level access to the system. This rule identifies registry value changes to bypass User Access Control (UAC) protection. | update | 4 

|<<prebuilt-rule-1-0-2-startup-logon-script-added-to-group-policy-object, Startup/Logon Script added to Group Policy Object>> | Detects the modification of Group Policy Objects (GPO) to add a startup/logon script to users or computer objects. | update | 3 

|<<prebuilt-rule-1-0-2-group-policy-abuse-for-privilege-addition, Group Policy Abuse for Privilege Addition>> | Detects the first occurrence of a modification to Group Policy Object Attributes to add privileges to user accounts or use them to add users as local admins. | update | 3 

|<<prebuilt-rule-1-0-2-scheduled-task-execution-at-scale-via-gpo, Scheduled Task Execution at Scale via GPO>> | Detects the modification of Group Policy Object attributes to execute a scheduled task in the objects controlled by the GPO. | update | 3 

|<<prebuilt-rule-1-0-2-potential-privilege-escalation-via-installerfiletakeover, Potential Privilege Escalation via InstallerFileTakeOver>> | Identifies a potential exploitation of InstallerTakeOver (CVE-2021-41379) default PoC execution. Successful exploitation allows an unprivileged user to escalate privileges to SYSTEM. | update | 4 

|<<prebuilt-rule-1-0-2-potential-lsa-authentication-package-abuse, Potential LSA Authentication Package Abuse>> | Adversaries can use the autostart mechanism provided by the Local Security Authority (LSA) authentication packages for privilege escalation or persistence by placing a reference to a binary in the Windows registry. The binary will then be executed by SYSTEM when the authentication packages are loaded. | update | 2 

|<<prebuilt-rule-1-0-2-privilege-escalation-via-named-pipe-impersonation, Privilege Escalation via Named Pipe Impersonation>> | Identifies a privilege escalation attempt via named pipe impersonation. An adversary may abuse this technique by utilizing a framework such Metasploit's meterpreter getsystem command. | update | 4 

|<<prebuilt-rule-1-0-2-suspicious-dll-loaded-for-persistence-or-privilege-escalation, Suspicious DLL Loaded for Persistence or Privilege Escalation>> | Identifies the loading of a non Microsoft signed DLL that is missing on a default Windows install (phantom DLL) or one that can be loaded from a different location by a native Windows process. This may be abused to persist or elevate privileges via privileged file write vulnerabilities. | update | 3 

|<<prebuilt-rule-1-0-2-potential-port-monitor-or-print-processor-registration-abuse, Potential Port Monitor or Print Processor Registration Abuse>> | Identifies port monitor and print processor registry modifications. Adversaries may abuse port monitor and print processors to run malicious DLLs during system boot that will be executed as SYSTEM for privilege escalation and/or persistence, if permissions allow writing a fully-qualified pathname for that DLL. | update | 2 

|<<prebuilt-rule-1-0-2-suspicious-print-spooler-point-and-print-dll, Suspicious Print Spooler Point and Print DLL>> | Detects attempts to exploit a privilege escalation vulnerability (CVE-2020-1030) related to the print spooler service. Exploitation involves chaining multiple primitives to load an arbitrary DLL into the print spooler process running as SYSTEM. | update | 3 

|<<prebuilt-rule-1-0-2-suspicious-printspooler-service-executable-file-creation, Suspicious PrintSpooler Service Executable File Creation>> | Detects attempts to exploit privilege escalation vulnerabilities related to the Print Spooler service. For more information refer to the following CVE's - CVE-2020-1048, CVE-2020-1337 and CVE-2020-1300 and verify that the impacted system is patched. | update | 5 

|<<prebuilt-rule-1-0-2-suspicious-print-spooler-file-deletion, Suspicious Print Spooler File Deletion>> | Detects deletion of print driver files by an unusual process. This may indicate a clean up attempt post successful privilege escalation via Print Spooler service related vulnerabilities. | update | 2 

|<<prebuilt-rule-1-0-2-suspicious-printspooler-spl-file-created, Suspicious PrintSpooler SPL File Created>> | Detects attempts to exploit privilege escalation vulnerabilities related to the Print Spooler service including CVE-2020-1048 and CVE-2020-1337. . | update | 5 

|<<prebuilt-rule-1-0-2-privilege-escalation-via-windir-environment-variable, Privilege Escalation via Windir Environment Variable>> | Identifies a privilege escalation attempt via a rogue Windows directory (Windir) environment variable. This is a known primitive that is often combined with other vulnerabilities to elevate privileges. | update | 4 

|<<prebuilt-rule-1-0-2-uac-bypass-attempt-with-ieditionupgrademanager-elevated-com-interface, UAC Bypass Attempt with IEditionUpgradeManager Elevated COM Interface>> | Identifies attempts to bypass User Account Control (UAC) by abusing an elevated COM Interface to launch a rogue Windows ClipUp program. Attackers may attempt to bypass UAC to stealthily execute code with elevated permissions. | update | 5 

|<<prebuilt-rule-1-0-2-uac-bypass-attempt-via-elevated-com-internet-explorer-add-on-installer, UAC Bypass Attempt via Elevated COM Internet Explorer Add-On Installer>> | Identifies User Account Control (UAC) bypass attempts by abusing an elevated COM Interface to launch a malicious program. Attackers may attempt to bypass UAC to stealthily execute code with elevated permissions. | update | 5 

|<<prebuilt-rule-1-0-2-uac-bypass-via-icmluautil-elevated-com-interface, UAC Bypass via ICMLuaUtil Elevated COM Interface>> | Identifies User Account Control (UAC) bypass attempts via the ICMLuaUtil Elevated COM interface. Attackers may attempt to bypass UAC to stealthily execute code with elevated permissions. | update | 5 

|<<prebuilt-rule-1-0-2-uac-bypass-via-diskcleanup-scheduled-task-hijack, UAC Bypass via DiskCleanup Scheduled Task Hijack>> | Identifies User Account Control (UAC) bypass via hijacking DiskCleanup Scheduled Task. Attackers bypass UAC to stealthily execute code with elevated permissions. | update | 7 

|<<prebuilt-rule-1-0-2-uac-bypass-attempt-via-privileged-ifileoperation-com-interface, UAC Bypass Attempt via Privileged IFileOperation COM Interface>> | Identifies attempts to bypass User Account Control (UAC) via DLL side-loading. Attackers may attempt to bypass UAC to stealthily execute code with elevated permissions. | update | 5 

|<<prebuilt-rule-1-0-2-bypass-uac-via-event-viewer, Bypass UAC via Event Viewer>> | Identifies User Account Control (UAC) bypass via eventvwr.exe. Attackers bypass UAC to stealthily execute code with elevated permissions. | update | 10 

|<<prebuilt-rule-1-0-2-uac-bypass-attempt-via-windows-directory-masquerading, UAC Bypass Attempt via Windows Directory Masquerading>> | Identifies an attempt to bypass User Account Control (UAC) by masquerading as a Microsoft trusted Windows directory. Attackers may bypass UAC to stealthily execute code with elevated permissions. | update | 5 

|<<prebuilt-rule-1-0-2-uac-bypass-via-windows-firewall-snap-in-hijack, UAC Bypass via Windows Firewall Snap-In Hijack>> | Identifies attempts to bypass User Account Control (UAC) by hijacking the Microsoft Management Console (MMC) Windows Firewall snap-in. Attackers bypass UAC to stealthily execute code with elevated permissions. | update | 5 

|<<prebuilt-rule-1-0-2-unusual-parent-child-relationship, Unusual Parent-Child Relationship>> | Identifies Windows programs run from unexpected parent processes. This could indicate masquerading or other strange activity on a system. | update | 11 

|<<prebuilt-rule-1-0-2-unusual-print-spooler-child-process, Unusual Print Spooler Child Process>> | Detects unusual Print Spooler service (spoolsv.exe) child processes. This may indicate an attempt to exploit privilege escalation vulnerabilities related to the Printing Service on Windows. | update | 5 

|<<prebuilt-rule-1-0-2-unusual-service-host-child-process-childless-service, Unusual Service Host Child Process - Childless Service>> | Identifies unusual child processes of Service Host (svchost.exe) that traditionally do not spawn any child processes. This may indicate a code injection or an equivalent form of exploitation. | update | 4 

|<<prebuilt-rule-1-0-2-privilege-escalation-via-rogue-named-pipe-impersonation, Privilege Escalation via Rogue Named Pipe Impersonation>> | Identifies a privilege escalation attempt via rogue named pipe impersonation. An adversary may abuse this technique by masquerading as a known named pipe and manipulating a privileged process to connect to it. | update | 2 

|<<prebuilt-rule-1-0-2-potential-printnightmare-file-modification, Potential PrintNightmare File Modification>> | Detects the creation or modification of a print driver with an unusual file name. This may indicate attempts to exploit privilege escalation vulnerabilities related to the Print Spooler service. For more information refer to CVE-2021-34527 and verify that the impacted system is investigated. | deprecated | 1 

|<<prebuilt-rule-1-0-2-potential-printnightmare-exploit-registry-modification, Potential PrintNightmare Exploit Registry Modification>> | Detects attempts to exploit privilege escalation vulnerabilities related to the Print Spooler service. For more information refer to CVE-2021-34527 and verify that the impacted system is investigated. | deprecated | 2 

|==============================================

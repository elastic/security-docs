[[prebuilt-rule-8-9-7-prebuilt-rules-8-9-7-summary]]
[role="xpack"]
== Update v8.9.7

This section lists all updates associated with version 8.9.7 of the Fleet integration *Prebuilt Security Detection Rules*.


[width="100%",options="header"]
|==============================================
|Rule |Description |Status |Version

|<<prebuilt-rule-8-9-7-malicious-remote-file-creation, Malicious Remote File Creation>> | Malicious remote file creation, which can be an indicator of lateral movement activity. | new | 1 

|<<prebuilt-rule-8-9-7-remote-file-creation-on-a-sensitive-directory, Remote File Creation on a Sensitive Directory>> | Discovery of files created by a remote host on sensitive directories and folders. Remote file creation in these directories could indicate a malicious binary or script trying to compromise the system. | new | 1 

|<<prebuilt-rule-8-9-7-new-github-app-installed, New GitHub App Installed>> | This rule detects when a new GitHub App has been installed in your organization account. GitHub Apps extend GitHub's functionality both within and outside of GitHub. When an app is installed it is granted permissions to read or modify your repository and organization data. Only trusted apps should be installed and any newly installed apps should be investigated to verify their legitimacy. Unauthorized app installation could lower your organization's security posture and leave you exposed for future attacks. | new | 1 

|<<prebuilt-rule-8-9-7-new-github-owner-added, New GitHub Owner Added>> | Detects when a new member is added to a GitHub organization as an owner. This role provides admin level privileges. Any new owner roles should be investigated to determine it's validity. Unauthorized owner roles could indicate compromise within your organization and provide unlimited access to data and settings. | new | 1 

|<<prebuilt-rule-8-9-7-github-owner-role-granted-to-user, GitHub Owner Role Granted To User>> | This rule detects when a member is granted the organization owner role of a GitHub organization. This role provides admin level privileges. Any new owner role should be investigated to determine its validity. Unauthorized owner roles could indicate compromise within your organization and provide unlimited access to data and settings. | new | 1 

|<<prebuilt-rule-8-9-7-high-mean-of-process-arguments-in-an-rdp-session, High Mean of Process Arguments in an RDP Session>> | A machine learning job has detected unusually high number of process arguments in an RDP session. Executing sophisticated attacks such as lateral movement can involve the use of complex commands, obfuscation mechanisms, redirection and piping, which in turn increases the number of arguments in a command. | new | 1 

|<<prebuilt-rule-8-9-7-high-mean-of-rdp-session-duration, High Mean of RDP Session Duration>> | A machine learning job has detected unusually high mean of RDP session duration. Long RDP sessions can be used to evade detection mechanisms via session persistence, and might be used to perform tasks such as lateral movement, that might require uninterrupted access to a compromised machine. | new | 1 

|<<prebuilt-rule-8-9-7-unusual-remote-file-size, Unusual Remote File Size>> | A machine learning job has detected an unusually high file size shared by a remote host indicating potential lateral movement activity. One of the primary goals of attackers after gaining access to a network is to locate and exfiltrate valuable information. Instead of multiple small transfers that can raise alarms, attackers might choose to bundle data into a single large file transfer. | new | 1 

|<<prebuilt-rule-8-9-7-high-variance-in-rdp-session-duration, High Variance in RDP Session Duration>> | A machine learning job has detected unusually high variance of RDP session duration. Long RDP sessions can be used to evade detection mechanisms via session persistence, and might be used to perform tasks such as lateral movement, that might require uninterrupted access to a compromised machine. | new | 1 

|<<prebuilt-rule-8-9-7-unusual-remote-file-directory, Unusual Remote File Directory>> | An anomaly detection job has detected a remote file transfer on an unusual directory indicating a potential lateral movement activity on the host. Many Security solutions monitor well-known directories for suspicious activities, so attackers might use less common directories to bypass monitoring. | new | 1 

|<<prebuilt-rule-8-9-7-unusual-remote-file-extension, Unusual Remote File Extension>> | An anomaly detection job has detected a remote file transfer with a rare extension, which could indicate potential lateral movement activity on the host. | new | 1 

|<<prebuilt-rule-8-9-7-spike-in-number-of-connections-made-from-a-source-ip, Spike in Number of Connections Made from a Source IP>> | A machine learning job has detected a high count of destination IPs establishing an RDP connection with a single source IP. Once an attacker has gained access to one system, they might attempt to access more in the network in search of valuable assets, data, or further access points. | new | 1 

|<<prebuilt-rule-8-9-7-spike-in-number-of-connections-made-to-a-destination-ip, Spike in Number of Connections Made to a Destination IP>> | A machine learning job has detected a high count of source IPs establishing an RDP connection with a single destination IP. Attackers might use multiple compromised systems to attack a target to ensure redundancy in case a source IP gets detected and blocked. | new | 1 

|<<prebuilt-rule-8-9-7-spike-in-number-of-processes-in-an-rdp-session, Spike in Number of Processes in an RDP Session>> | A machine learning job has detected unusually high number of processes started in a single RDP session. Executing a large number of processes remotely on other machines can be an indicator of lateral movement activity. | new | 1 

|<<prebuilt-rule-8-9-7-spike-in-remote-file-transfers, Spike in Remote File Transfers>> | A machine learning job has detected an abnormal volume of remote files shared on the host indicating potential lateral movement activity. One of the primary goals of attackers after gaining access to a network is to locate and exfiltrate valuable information. Attackers might perform multiple small transfers to match normal egress activity in the network, to evade detection. | new | 1 

|<<prebuilt-rule-8-9-7-unusual-time-or-day-for-an-rdp-session, Unusual Time or Day for an RDP Session>> | A machine learning job has detected an RDP session started at an usual time or weekday. An RDP session at an unusual time could be followed by other suspicious activities, so catching this is a good first step in detecting a larger attack. | new | 1 

|<<prebuilt-rule-8-9-7-potential-curl-cve-2023-38545-exploitation, Potential curl CVE-2023-38545 Exploitation>> | Detects potential exploitation of curl CVE-2023-38545 by monitoring for vulnerable command line arguments in conjunction with an unusual command line length. A flaw in curl version <= 8.3 makes curl vulnerable to a heap based buffer overflow during the SOCKS5 proxy handshake. Upgrade to curl version >= 8.4 to patch this vulnerability. This exploit can be executed with and without the use of environment variables. For increased visibility, enable the collection of http_proxy, HTTPS_PROXY and ALL_PROXY environment variables based on the instructions provided in the setup guide of this rule. | new | 1 

|<<prebuilt-rule-8-9-7-potential-reverse-shell-via-background-process, Potential Reverse Shell via Background Process>> | Monitors for the execution of background processes with process arguments capable of opening a socket in the /dev/tcp channel. This may indicate the creation of a backdoor reverse connection, and should be investigated further. | new | 1 

|<<prebuilt-rule-8-9-7-potential-privilege-escalation-via-cve-2023-4911, Potential Privilege Escalation via CVE-2023-4911>> | This rule detects potential privilege escalation attempts through Looney Tunables (CVE-2023-4911). Looney Tunables is a buffer overflow vulnerability in GNU C Library's dynamic loader's processing of the GLIBC_TUNABLES environment variable. | new | 1 

|<<prebuilt-rule-8-9-7-unusual-discovery-signal-alert-with-unusual-process-command-line, Unusual Discovery Signal Alert with Unusual Process Command Line>> | This rule leverages alert data from various Discovery building block rules to alert on signals with unusual unique host.id, user.id and process.command_line entries. | new | 1 

|<<prebuilt-rule-8-9-7-unusual-discovery-signal-alert-with-unusual-process-executable, Unusual Discovery Signal Alert with Unusual Process Executable>> | This rule leverages alert data from various Discovery building block rules to alert on signals with unusual unique host.id, user.id and process.executable entries. | new | 1 

|<<prebuilt-rule-8-9-7-potential-protocol-tunneling-via-earthworm, Potential Protocol Tunneling via EarthWorm>> | Identifies the execution of the EarthWorm tunneler. Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection and network filtering, or to enable access to otherwise unreachable systems. | update | 106 

|<<prebuilt-rule-8-9-7-potential-successful-linux-ftp-brute-force-attack-detected, Potential Successful Linux FTP Brute Force Attack Detected>> | An FTP (file transfer protocol) brute force attack is a method where an attacker systematically tries different combinations of usernames and passwords to gain unauthorized access to an FTP server, and if successful, the impact can include unauthorized data access, manipulation, or theft, compromising the security and integrity of the server and potentially exposing sensitive information. This rule identifies multiple consecutive authentication failures targeting a specific user account from the same source address and within a short time interval, followed by a successful authentication. | update | 2 

|<<prebuilt-rule-8-9-7-potential-successful-linux-rdp-brute-force-attack-detected, Potential Successful Linux RDP Brute Force Attack Detected>> | An RDP (Remote Desktop Protocol) brute force attack involves an attacker repeatedly attempting various username and password combinations to gain unauthorized access to a remote computer via RDP, and if successful, the potential impact can include unauthorized control over the compromised system, data theft, or the ability to launch further attacks within the network, jeopardizing the security and confidentiality of the targeted system and potentially compromising the entire network infrastructure. This rule identifies multiple consecutive authentication failures targeting a specific user account within a short time interval, followed by a successful authentication. | update | 2 

|<<prebuilt-rule-8-9-7-potential-openssh-backdoor-logging-activity, Potential OpenSSH Backdoor Logging Activity>> | Identifies a Secure Shell (SSH) client or server process creating or writing to a known SSH backdoor log file. Adversaries may modify SSH related binaries for persistence or credential access via patching sensitive functions to enable unauthorized access or to log SSH credentials for exfiltration. | update | 106 

|<<prebuilt-rule-8-9-7-file-made-immutable-by-chattr, File made Immutable by Chattr>> | Detects a file being made immutable using the chattr binary. Making a file immutable means it cannot be deleted or renamed, no link can be created to this file, most of the file's metadata can not be modified, and the file can not be opened in write mode. Threat actors will commonly utilize this to prevent tampering or modification of their malicious files or any system files they have modified for purposes of persistence (e.g .ssh, /etc/passwd, etc.). | update | 107 

|<<prebuilt-rule-8-9-7-creation-of-hidden-files-and-directories-via-commandline, Creation of Hidden Files and Directories via CommandLine>> | Users can mark specific files as hidden simply by putting a "." as the first character in the file or folder name. Adversaries can use this to their advantage to hide files and folders on the system for persistence and defense evasion. This rule looks for hidden files or folders in common writable directories. | update | 105 

|<<prebuilt-rule-8-9-7-creation-of-hidden-shared-object-file, Creation of Hidden Shared Object File>> | Identifies the creation of a hidden shared object (.so) file. Users can mark specific files as hidden simply by putting a "." as the first character in the file or folder name. Adversaries can use this to their advantage to hide files and folders on the system for persistence and defense evasion. | update | 106 

|<<prebuilt-rule-8-9-7-deprecated-potential-process-injection-via-ld-preload-environment-variable, Deprecated - Potential Process Injection via LD_PRELOAD Environment Variable>> | This rule detects the execution of a process where the LD_PRELOAD environment variable is set. LD_PRELOAD can be used to inject a shared library into a binary at or prior to execution. A threat actor may do this in order to load a malicious shared library for the purposes of persistence, privilege escalation, and defense evasion. This activity is not common and will potentially indicate malicious or suspicious behavior. | update | 3 

|<<prebuilt-rule-8-9-7-system-log-file-deletion, System Log File Deletion>> | Identifies the deletion of sensitive Linux system logs. This may indicate an attempt to evade detection or destroy forensic evidence on a system. | update | 107 

|<<prebuilt-rule-8-9-7-potential-pspy-process-monitoring-detected, Potential Pspy Process Monitoring Detected>> | This rule leverages auditd to monitor for processes scanning different processes within the /proc directory using the openat syscall. This is a strong indication for the usage of the pspy utility. Attackers may leverage the pspy process monitoring utility to monitor system processes without requiring root permissions, in order to find potential privilege escalation vectors. | update | 2 

|<<prebuilt-rule-8-9-7-linux-restricted-shell-breakout-via-linux-binary-s, Linux Restricted Shell Breakout via Linux Binary(s)>> | Identifies the abuse of a Linux binary to break out of a restricted shell or environment by spawning an interactive system shell. The activity of spawning a shell from a binary is not common behavior for a user or system administrator, and may indicate an attempt to evade detection, increase capabilities or enhance the stability of an adversary. | update | 109 

|<<prebuilt-rule-8-9-7-persistence-via-kde-autostart-script-or-desktop-file-modification, Persistence via KDE AutoStart Script or Desktop File Modification>> | Identifies the creation or modification of a K Desktop Environment (KDE) AutoStart script or desktop file that will execute upon each user logon. Adversaries may abuse this method for persistence. | update | 106 

|<<prebuilt-rule-8-9-7-accepted-default-telnet-port-connection, Accepted Default Telnet Port Connection>> | This rule detects network events that may indicate the use of Telnet traffic. Telnet is commonly used by system administrators to remotely control older or embedded systems using the command line shell. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or backdoor vector. As a plain-text protocol, it may also expose usernames and passwords to anyone capable of observing the traffic. | update | 104 

|<<prebuilt-rule-8-9-7-cobalt-strike-command-and-control-beacon, Cobalt Strike Command and Control Beacon>> | Cobalt Strike is a threat emulation platform commonly modified and used by adversaries to conduct network attack and exploitation campaigns. This rule detects a network activity algorithm leveraged by Cobalt Strike implant beacons for command and control. | update | 104 

|<<prebuilt-rule-8-9-7-default-cobalt-strike-team-server-certificate, Default Cobalt Strike Team Server Certificate>> | This rule detects the use of the default Cobalt Strike Team Server TLS certificate. Cobalt Strike is software for Adversary Simulations and Red Team Operations which are security assessments that replicate the tactics and techniques of an advanced adversary in a network. Modifications to the Packetbeat configuration can be made to include MD5 and SHA256 hashing algorithms (the default is SHA1). See the References section for additional information on module configuration. | update | 104 

|<<prebuilt-rule-8-9-7-roshal-archive-rar-or-powershell-file-downloaded-from-the-internet, Roshal Archive (RAR) or PowerShell File Downloaded from the Internet>> | Detects a Roshal Archive (RAR) file or PowerShell script downloaded from the internet by an internal host. Gaining initial access to a system and then downloading encoded or encrypted tools to move laterally is a common practice for adversaries as a way to protect their more valuable tools and tactics, techniques, and procedures (TTPs). This may be atypical behavior for a managed network and can be indicative of malware, exfiltration, or command and control. | update | 103 

|<<prebuilt-rule-8-9-7-possible-fin7-dga-command-and-control-behavior, Possible FIN7 DGA Command and Control Behavior>> | This rule detects a known command and control pattern in network events. The FIN7 threat group is known to use this command and control technique, while maintaining persistence in their target's network. | update | 103 

|<<prebuilt-rule-8-9-7-halfbaked-command-and-control-beacon, Halfbaked Command and Control Beacon>> | Halfbaked is a malware family used to establish persistence in a contested network. This rule detects a network activity algorithm leveraged by Halfbaked implant beacons for command and control. | update | 103 

|<<prebuilt-rule-8-9-7-ipsec-nat-traversal-port-activity, IPSEC NAT Traversal Port Activity>> | This rule detects events that could be describing IPSEC NAT Traversal traffic. IPSEC is a VPN technology that allows one system to talk to another using encrypted tunnels. NAT Traversal enables these tunnels to communicate over the Internet where one of the sides is behind a NAT router gateway. This may be common on your network, but this technique is also used by threat actors to avoid detection. | update | 104 

|<<prebuilt-rule-8-9-7-smtp-on-port-26-tcp, SMTP on Port 26/TCP>> | This rule detects events that may indicate use of SMTP on TCP port 26. This port is commonly used by several popular mail transfer agents to deconflict with the default SMTP port 25. This port has also been used by a malware family called BadPatch for command and control of Windows systems. | update | 103 

|<<prebuilt-rule-8-9-7-rdp-remote-desktop-protocol-from-the-internet, RDP (Remote Desktop Protocol) from the Internet>> | This rule detects network events that may indicate the use of RDP traffic from the Internet. RDP is commonly used by system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or backdoor vector. | update | 103 

|<<prebuilt-rule-8-9-7-vnc-virtual-network-computing-from-the-internet, VNC (Virtual Network Computing) from the Internet>> | This rule detects network events that may indicate the use of VNC traffic from the Internet. VNC is commonly used by system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or backdoor vector. | update | 104 

|<<prebuilt-rule-8-9-7-vnc-virtual-network-computing-to-the-internet, VNC (Virtual Network Computing) to the Internet>> | This rule detects network events that may indicate the use of VNC traffic to the Internet. VNC is commonly used by system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or backdoor vector. | update | 104 

|<<prebuilt-rule-8-9-7-potential-network-sweep-detected, Potential Network Sweep Detected>> | This rule identifies a potential network sweep.  A network sweep is a method used by attackers to scan a target network, identifying active hosts, open ports, and available services to gather information on vulnerabilities and weaknesses. This reconnaissance helps them plan subsequent attacks and exploit potential entry points for unauthorized access, data theft, or other malicious activities. This rule proposes threshold logic to check for connection attempts from one source host to 10 or more destination hosts on commonly used network services. | update | 3 

|<<prebuilt-rule-8-9-7-potential-network-scan-detected, Potential Network Scan Detected>> | This rule identifies a potential port scan. A port scan is a method utilized by attackers to systematically scan a target system or network for open ports, allowing them to identify available services and potential vulnerabilities. By mapping out the open ports, attackers can gather critical information to plan and execute targeted attacks, gaining unauthorized access, compromising security, and potentially leading to data breaches, unauthorized control, or further exploitation of the targeted system or network. This rule proposes threshold logic to check for connection attempts from one source host to 20 or more destination ports. | update | 3 

|<<prebuilt-rule-8-9-7-potential-syn-based-network-scan-detected, Potential SYN-Based Network Scan Detected>> | This rule identifies a potential SYN-Based port scan. A SYN port scan is a technique employed by attackers to scan a target network for open ports by sending SYN packets to multiple ports and observing the response. Attackers use this method to identify potential entry points or services that may be vulnerable to exploitation, allowing them to launch targeted attacks or gain unauthorized access to the system or network, compromising its security and potentially leading to data breaches or further malicious activities. This rule proposes threshold logic to check for connection attempts from one source host to 10 or more destination ports using 2 or less packets per port. | update | 3 

|<<prebuilt-rule-8-9-7-rpc-remote-procedure-call-from-the-internet, RPC (Remote Procedure Call) from the Internet>> | This rule detects network events that may indicate the use of RPC traffic from the Internet. RPC is commonly used by system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or backdoor vector. | update | 103 

|<<prebuilt-rule-8-9-7-rpc-remote-procedure-call-to-the-internet, RPC (Remote Procedure Call) to the Internet>> | This rule detects network events that may indicate the use of RPC traffic to the Internet. RPC is commonly used by system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or backdoor vector. | update | 103 

|<<prebuilt-rule-8-9-7-smb-windows-file-sharing-activity-to-the-internet, SMB (Windows File Sharing) Activity to the Internet>> | This rule detects network events that may indicate the use of Windows file sharing (also called SMB or CIFS) traffic to the Internet. SMB is commonly used within networks to share files, printers, and other system resources amongst trusted systems. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or backdoor vector or for data exfiltration. | update | 103 

|<<prebuilt-rule-8-9-7-inbound-connection-to-an-unsecure-elasticsearch-node, Inbound Connection to an Unsecure Elasticsearch Node>> | Identifies Elasticsearch nodes that do not have Transport Layer Security (TLS), and/or lack authentication, and are accepting inbound network connections over the default Elasticsearch port. | update | 103 

|<<prebuilt-rule-8-9-7-abnormally-large-dns-response, Abnormally Large DNS Response>> | Specially crafted DNS requests can manipulate a known overflow vulnerability in some Windows DNS servers, resulting in Remote Code Execution (RCE) or a Denial of Service (DoS) from crashing the service. | update | 105 

|<<prebuilt-rule-8-9-7-exchange-mailbox-export-via-powershell, Exchange Mailbox Export via PowerShell>> | Identifies the use of the Exchange PowerShell cmdlet, New-MailBoxExportRequest, to export the contents of a primary mailbox or archive to a .pst file. Adversaries may target user email to collect sensitive information. | update | 5 

|<<prebuilt-rule-8-9-7-powershell-suspicious-script-with-clipboard-retrieval-capabilities, PowerShell Suspicious Script with Clipboard Retrieval Capabilities>> | Detects PowerShell scripts that can get the contents of the clipboard, which attackers can abuse to retrieve sensitive information like credentials, messages, etc. | update | 6 

|<<prebuilt-rule-8-9-7-powershell-mailbox-collection-script, PowerShell Mailbox Collection Script>> | Detects PowerShell scripts that can be used to collect data from mailboxes. Adversaries may target user email to collect sensitive information. | update | 5 

|<<prebuilt-rule-8-9-7-powershell-kerberos-ticket-request, PowerShell Kerberos Ticket Request>> | Detects PowerShell scripts that have the capability of requesting kerberos tickets, which is a common step in Kerberoasting toolkits to crack service accounts. | update | 108 

|<<prebuilt-rule-8-9-7-control-panel-process-with-unusual-arguments, Control Panel Process with Unusual Arguments>> | Identifies unusual instances of Control Panel with suspicious keywords or paths in the process command line value. Adversaries may abuse control.exe to proxy execution of malicious code. | update | 107 

|<<prebuilt-rule-8-9-7-imageload-via-windows-update-auto-update-client, ImageLoad via Windows Update Auto Update Client>> | Identifies abuse of the Windows Update Auto Update Client (wuauclt.exe) to load an arbitrary DLL. This behavior is used as a defense evasion technique to blend-in malicious activity with legitimate Windows software. | update | 107 

|<<prebuilt-rule-8-9-7-microsoft-build-engine-started-by-an-office-application, Microsoft Build Engine Started by an Office Application>> | An instance of MSBuild, the Microsoft Build Engine, was started by Excel or Word. This is unusual behavior for the Build Engine and could have been caused by an Excel or Word document executing a malicious script payload. | update | 107 

|<<prebuilt-rule-8-9-7-microsoft-build-engine-started-by-a-script-process, Microsoft Build Engine Started by a Script Process>> | An instance of MSBuild, the Microsoft Build Engine, was started by a script or the Windows command interpreter. This behavior is unusual and is sometimes used by malicious payloads. | update | 205 

|<<prebuilt-rule-8-9-7-microsoft-build-engine-started-by-a-system-process, Microsoft Build Engine Started by a System Process>> | An instance of MSBuild, the Microsoft Build Engine, was started by Explorer or the WMI (Windows Management Instrumentation) subsystem. This behavior is unusual and is sometimes used by malicious payloads. | update | 107 

|<<prebuilt-rule-8-9-7-microsoft-build-engine-using-an-alternate-name, Microsoft Build Engine Using an Alternate Name>> | An instance of MSBuild, the Microsoft Build Engine, was started after being renamed. This is uncommon behavior and may indicate an attempt to run unnoticed or undetected. | update | 108 

|<<prebuilt-rule-8-9-7-microsoft-build-engine-started-an-unusual-process, Microsoft Build Engine Started an Unusual Process>> | An instance of MSBuild, the Microsoft Build Engine, started a PowerShell script or the Visual C# Command Line Compiler. This technique is sometimes used to deploy a malicious payload using the Build Engine. | update | 206 

|<<prebuilt-rule-8-9-7-potential-dll-sideloading-via-trusted-microsoft-programs, Potential DLL SideLoading via Trusted Microsoft Programs>> | Identifies an instance of a Windows trusted program that is known to be vulnerable to DLL Search Order Hijacking starting after being renamed or from a non-standard path. This is uncommon behavior and may indicate an attempt to evade defenses via side loading a malicious DLL within the memory space of one of those processes. | update | 106 

|<<prebuilt-rule-8-9-7-potential-dll-side-loading-via-microsoft-antimalware-service-executable, Potential DLL Side-Loading via Microsoft Antimalware Service Executable>> | Identifies a Windows trusted program that is known to be vulnerable to DLL Search Order Hijacking starting after being renamed or from a non-standard path. This is uncommon behavior and may indicate an attempt to evade defenses via side-loading a malicious DLL within the memory space of one of those processes. | update | 107 

|<<prebuilt-rule-8-9-7-powershell-suspicious-payload-encoded-and-compressed, PowerShell Suspicious Payload Encoded and Compressed>> | Identifies the use of .NET functionality for decompression and base64 decoding combined in PowerShell scripts, which malware and security tools heavily use to deobfuscate payloads and load them directly in memory to bypass defenses. | update | 109 

|<<prebuilt-rule-8-9-7-enumeration-of-administrator-accounts, Enumeration of Administrator Accounts>> | Identifies instances of lower privilege accounts enumerating Administrator accounts or groups using built-in Windows tools. | update | 108 

|<<prebuilt-rule-8-9-7-enumerating-domain-trusts-via-nltest-exe, Enumerating Domain Trusts via NLTEST.EXE>> | Identifies the use of nltest.exe for domain trust discovery purposes. Adversaries may use this command-line utility to enumerate domain trusts and gain insight into trust relationships, as well as the state of Domain Controller (DC) replication in a Microsoft Windows NT Domain. | update | 108 

|<<prebuilt-rule-8-9-7-enumeration-of-privileged-local-groups-membership, Enumeration of Privileged Local Groups Membership>> | Identifies instances of an unusual process enumerating built-in Windows privileged local groups membership like Administrators or Remote Desktop users. | update | 208 

|<<prebuilt-rule-8-9-7-svchost-spawning-cmd, Svchost spawning Cmd>> | Identifies a suspicious parent child process relationship with cmd.exe descending from svchost.exe | update | 207 

|<<prebuilt-rule-8-9-7-enumeration-command-spawned-via-wmiprvse, Enumeration Command Spawned via WMIPrvSE>> | Identifies native Windows host and network enumeration commands spawned by the Windows Management Instrumentation Provider Service (WMIPrvSE). | update | 107 

|<<prebuilt-rule-8-9-7-execution-of-file-written-or-modified-by-microsoft-office, Execution of File Written or Modified by Microsoft Office>> | Identifies an executable created by a Microsoft Office application and subsequently executed. These processes are often launched via scripts inside documents or during exploitation of Microsoft Office applications. | update | 107 

|<<prebuilt-rule-8-9-7-potential-powershell-hacktool-script-by-function-names, Potential PowerShell HackTool Script by Function Names>> | Detects known PowerShell offensive tooling functions names in PowerShell scripts. Attackers commonly use out-of-the-box offensive tools without modifying the code. This rule aim is to take advantage of that. | update | 6 

|<<prebuilt-rule-8-9-7-powershell-psreflect-script, PowerShell PSReflect Script>> | Detects the use of PSReflect in PowerShell scripts. Attackers leverage PSReflect as a library that enables PowerShell to access win32 API functions. | update | 108 

|<<prebuilt-rule-8-9-7-suspicious-powershell-engine-imageload, Suspicious PowerShell Engine ImageLoad>> | Identifies the PowerShell engine being invoked by unexpected processes. Rather than executing PowerShell functionality with powershell.exe, some attackers do this to operate more stealthily. | update | 208 

|<<prebuilt-rule-8-9-7-suspicious-process-execution-via-renamed-psexec-executable, Suspicious Process Execution via Renamed PsExec Executable>> | Identifies suspicious psexec activity which is executing from the psexec service that has been renamed, possibly to evade detection. | update | 107 

|<<prebuilt-rule-8-9-7-powershell-script-with-token-impersonation-capabilities, PowerShell Script with Token Impersonation Capabilities>> | Detects scripts that contain PowerShell functions, structures, or Windows API functions related to token impersonation/theft. Attackers may duplicate then impersonate another user's token to escalate privileges and bypass access controls. | update | 8 

|==============================================

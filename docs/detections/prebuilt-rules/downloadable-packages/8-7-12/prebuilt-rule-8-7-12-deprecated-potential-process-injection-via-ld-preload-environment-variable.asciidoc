[[prebuilt-rule-8-7-12-deprecated-potential-process-injection-via-ld-preload-environment-variable]]
=== Deprecated - Potential Process Injection via LD_PRELOAD Environment Variable

This rule detects the execution of a process where the LD_PRELOAD environment variable is set. LD_PRELOAD can be used to inject a shared library into a binary at or prior to execution. A threat actor may do this in order to load a malicious shared library for the purposes of persistence, privilege escalation, and defense evasion. This activity is not common and will potentially indicate malicious or suspicious behavior.

*Rule type*: eql

*Rule indices*: 

* logs-endpoint.events.*

*Severity*: low

*Risk score*: 21

*Runs every*: 5m

*Searches indices from*: now-9m ({ref}/common-options.html#date-math[Date Math format], see also <<rule-schedule, `Additional look-back time`>>)

*Maximum alerts per execution*: 100

*References*: 

* https://www.getambassador.io/resources/code-injection-on-linux-and-macos

*Tags*: 

* Domain: Endpoint
* OS: Linux
* Use Case: Threat Detection
* Tactic: Defense Evasion
* Tactic: Persistence
* Tactic: Privilege Escalation
* Data Source: Elastic Defend

*Version*: 2

*Rule authors*: 

* Elastic

*Rule license*: Elastic License v2


==== Investigation guide


[source, markdown]
----------------------------------
This rule was deprecated due to the large amount of false positives and the lack of true positives generated by the rule.
## Setup
By default, the `Elastic Defend` integration does not collect environment variable logging. In order to capture this behavior, this rule requires a specific configuration option set within the advanced settings of the `Elastic Defend` integration. 
```
Kibana -->
Fleet -->
Agent policies -->
Agent policy for which the option should be enabled -->
Name of the Elastic Defend integration --> 
Show advanced settings -->
linux.advanced.capture_env_vars
```
`linux.advanced.capture_env_vars` should be set to `LD_PRELOAD,LD_LIBRARY_PATH`. 
After saving the integration change, the Elastic Agents running this policy will be updated and the rule will function properly.
----------------------------------

==== Rule query


[source, js]
----------------------------------
process where host.os.type == "linux" and event.action == "exec" and process.env_vars : ("LD_PRELOAD=?*", "LD_LIBRARY_PATH=?*")

----------------------------------

*Framework*: MITRE ATT&CK^TM^

* Tactic:
** Name: Defense Evasion
** ID: TA0005
** Reference URL: https://attack.mitre.org/tactics/TA0005/
* Technique:
** Name: Hijack Execution Flow
** ID: T1574
** Reference URL: https://attack.mitre.org/techniques/T1574/
* Sub-technique:
** Name: Dynamic Linker Hijacking
** ID: T1574.006
** Reference URL: https://attack.mitre.org/techniques/T1574/006/
* Tactic:
** Name: Persistence
** ID: TA0003
** Reference URL: https://attack.mitre.org/tactics/TA0003/
* Technique:
** Name: Hijack Execution Flow
** ID: T1574
** Reference URL: https://attack.mitre.org/techniques/T1574/
* Sub-technique:
** Name: Dynamic Linker Hijacking
** ID: T1574.006
** Reference URL: https://attack.mitre.org/techniques/T1574/006/
* Tactic:
** Name: Privilege Escalation
** ID: TA0004
** Reference URL: https://attack.mitre.org/tactics/TA0004/
* Technique:
** Name: Hijack Execution Flow
** ID: T1574
** Reference URL: https://attack.mitre.org/techniques/T1574/
* Sub-technique:
** Name: Dynamic Linker Hijacking
** ID: T1574.006
** Reference URL: https://attack.mitre.org/techniques/T1574/006/

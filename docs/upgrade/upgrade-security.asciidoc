[chapter]
[[upgrade-intro]]

= Upgrade {elastic-sec} to {version}

Before you upgrade {elastic-sec}, take the necessary <<preventing-migration-failures, preparation steps>>, which will vary depending on what version you are upgrading to:

* <<upgrade-8.x, Upgrade from an earlier 8.x version>>
* <<upgrade-7.17-8x, Upgrade from 7.17 to an 8.x version>>
* <<upgrade-7.16-8.x, Upgrade from 7.16 or earlier to an 8.x version>>

Rolling upgrades are unsupported in {elastic-sec}, which runs within the {kib} application. To upgrade, you must shut down all {kib} instances, install the new software, and restart {kib}.
Upgrading while older {kib} instances are running can cause data loss or upgrade failures.

[WARNING]
====
When required, {kib} automatically migrates {kibana-ref}/saved-object-migrations.html[saved objects].
In case of an upgrade failure, you can roll back to an
earlier version of {kib}. To roll back, you **must** have a
{ref}/snapshot-restore.html[backup snapshot] that includes the `kibana` feature
state. By default, snapshots include the `kibana` feature state.
====

[float]
=== Upgrading multiple {kib} instances
When upgrading several {kib} instances connected to the same {es} cluster,
ensure that all outdated instances are shut down before starting the upgrade.

Rolling upgrades are unsupported in {kib}. However, when outdated instances are shut down, you can start all upgraded instances in parallel,
which allows all instances to participate in the upgrade migration in parallel.

For large deployments with more than 10 {kib} instances and more than 10,000 saved objects,
you can reduce the upgrade downtime by bringing up a single {kib} instance and waiting for it to
complete the upgrade migration before bringing up the remaining instances.

IMPORTANT: You can upgrade to pre-release versions for testing,
but upgrading from a pre-release to the Generally Available version is unsupported.
You should use pre-release versions only for testing in a temporary environment.


[float]
[[preventing-migration-failures]]
=== Preparing for migration

Take these extra steps to ensure you are ready for migration.

[float]
==== Ensure your {es} cluster is healthy
Problems with your {es} cluster can prevent {kib} upgrades from succeeding.

During the upgrade process, {kib} creates new indices into which updated documents are written. If a cluster is approaching the low watermark, there's a high risk of {kib} not being able to create these. Reading, transforming, and writing updated documents can be memory intensive, using more available heap than during routine operation. You must ensure that enough heap is available to prevent requests from timing out or throwing errors from circuit breaker exceptions. You should also ensure that all shards are replicated and assigned.

A healthy cluster has:

 * Enough free disk space, at least twice the amount of storage taken up by the `.kibana` and `.kibana_task_manager` indices
 * Sufficient heap size
 * A "green" cluster status

[float]
==== Ensure that all {kib} instances are the same
When you perform an upgrade migration of different {kib} versions, the migration can fail.
Ensure that all {kib} instances are running the same version, configuration, and plugins.

[float]
==== Back up your data

Be sure to have a {ref}/snapshot-restore.html[snapshot] of all your data before migrating, so that if something goes wrong during migration, you can restore from the snapshot and try again.

Review the {kibana-ref}/resolve-migrations-failures.html[common causes of {kib} upgrade failures] and how to prevent them.


[float]
[[upgrade-8.x]]
== Upgrade from an earlier 8.x version 

. Review the breaking changes for each product you use and make the necessary changes so your code is compatible with {version}.

** {stack-ref}/apm-breaking-changes.html[APM {version} breaking changes]
** {stack-ref}/beats-breaking-changes.html[Beats {version} breaking changes]
** {stack-ref}/elasticsearch-breaking-changes.html[{es} {version} breaking changes]
** {stack-ref}/security-breaking-changes.html[{elastic-sec} {version} breaking changes]
** {stack-ref}/kibana-breaking-changes.html[{kib} {version} breaking changes]
** {stack-ref}/logstash-breaking-changes.html[{ls} {version} breaking changes]
+
. If you use any {es} plugins, ensure each plugin has a version compatible with {es} version {version}.

. Test the upgrade in an isolated environment before upgrading your production
cluster.

. Ensure you have a current snapshot before you start the upgrade.
+
IMPORTANT: You cannot downgrade {es} nodes after upgrading. 
If you cannot complete the upgrade process, 
you will need to restore from the snapshot.

. If you use a separate {ref}/monitoring-production.html[monitoring cluster], you should upgrade the monitoring cluster before the production cluster. Generally, the monitoring cluster and the clusters being monitored should be running the same {stack} version. A monitoring cluster cannot monitor production clusters running newer stack versions. If necessary, the monitoring cluster can monitor production clusters running the latest release of the previous major version.

[float]
[[upgrade-notes-8.8]]
=== Considerations when upgrading to 8.8

After you upgrade to 8.8 or later, frequency settings for <<rule-notifications,rule actions>> created in 8.7 or earlier are automatically moved from the rule level to the action level. The action schedules remain the same and will continue to run on their previously specified frequency (`On each rule execution`, `Hourly`, `Daily`, or `Weekly`). 

[float]
[[upgrade-7.17-8x]]
== Upgrade from 7.17 to an 8.x version

This section provides the necessary steps you need to take before upgrading to 8.x. It also contains new requirements and other pertinent information that affect various features in the {security-app}.  

First, review the breaking changes for each product you use and make the necessary changes so your code is compatible with {version}.

** {stack-ref}/apm-breaking-changes.html[APM {version} breaking changes]
** {stack-ref}/beats-breaking-changes.html[Beats {version} breaking changes]
** {stack-ref}/elasticsearch-breaking-changes.html[{es} {version} breaking changes]
** {stack-ref}/security-breaking-changes.html[{elastic-sec} {version} breaking changes]
** {stack-ref}/kibana-breaking-changes.html[{kib} {version} breaking changes]
** {stack-ref}/logstash-breaking-changes.html[{ls} {version} breaking changes]

[float]
[[reenable-rules-upgrade]]
=== Re-enable disabled rules

Any active rules when you upgrade from 7.17 to 8.0.1 or newer are automatically disabled, and a tag named `auto_disabled_8.0` is added to those rules for tracking purposes. Once the upgrade is complete, you can filter rules by the newly added tag, then use bulk actions to re-enable them:

. Go to the Rules page (*Detect -> Rules*).
. From the *Tags* dropdown, search for `auto_disabled_8.0`.
. Click *Select all _x_ rules*, or individually select the rules you want to re-enable.
. Click *Bulk actions -> Enable* to re-enable the rules.

Alternatively, you can use the <<bulk-actions-rules-api, Bulk rule actions>> API to re-enable rules.

[float]
[[fda-upgrade]]
=== Full Disk Access (FDA) approval for {elastic-endpoint}

When you manually install {elastic-endpoint}, you must approve a system extension, kernel extension, and enable Full Disk Access (FDA). There is a new FDA requirement in 8.x. Refer to <<deploy-elastic-endpoint>> to review the required permissions.

[float]
[[data-views-upgrade]]
=== Requirements to display Data views in the {es-sec-app}

To make the *Data view* option appear in an environment with legacy alerts, a user with elevated role privileges must visit the {es-sec-app}, open a page that displays alert data (such as the Overview page), then refresh the page. The user's role privileges must allow them to enable the detections feature in a Kibana space. Refer to <<enable-detections-ui, Enable and access detections>> for more information.

NOTE: If new alerts are generated in an upgraded environment without legacy alerts, refreshing any page with alert data in {elastic-sec} will make the *Data view* option appear in the {es-sec-ui}.

[float]
[[alert-schema-upgrade]]
=== New alert schema

The system index for detection alerts has been renamed from `.siem-signals-<space-id>` to `.alerts-security.alerts-<space-id>` and is now a hidden index. Therefore, the schema used for alert documents in {elastic-sec} has changed. Users that access documents in the `.siem-signals` indices using the {elastic-sec} API must modify their API queries and scripts to operate properly on the new 8.x alert documents. Refer to <<query-alert-indices, how to query alert indices>> and review the new <<alert-schema, Alert schema>>.

[float]
[[preview-upgrade]]
=== New privileges required to view alerts and preview rules

* To view alerts, users need `manage`, `write`, `read`, and `view_index_metadata` privileges to two new indices, `.alerts-security.alerts` and `.internal.alerts-security.alerts`. Existing users who are upgrading to 8.x can retain their privileges to the `.siem-signals` index.

* To <<preview-rules, preview rules>>, users need `read` access to the new `.preview.alerts-security.alerts` index. Refer to <<detections-permissions-section>> for more information.

[float]
[[im-rules-upgrade]]
=== Updates to indictor match rules

Changes to the indicator match rule's <<rule-ui-advanced-params, default threat indicator path>> might require you to update existing rules or create new ones after upgrading to 8.x. Be mindful of the following:

* If an indicator match rule's default threat indicator path was not defined before the upgrade, it will default to `threatintel.indicator` after the upgrade. This allows the rule to continue using indicator data ingested by {filebeat} version 7.x. If a custom value was defined before the upgrade, the value will not change.
* If an existing indicator match rule was configured to use threat indicator indices generated from {filebeat} version 7.x, updating the default threat indicator path to `threat.indicator` after you upgrade to {stack} version 8.x and {agent} or {filebeat} version 8.x configures the rule to use threat indicator indices generated by those later versions.
* You must create separate rules to query threat intelligence indices created by {filebeat} version 7.x and version 8.x because each version requires a different default threat indicator path value. Review the recommendations for <<query-alert-indices, querying alert indices>>.

[float]
[[upgrade-7.16-8.x]]
== Upgrade from 7.16 or earlier to an 8.x version

To upgrade from 7.16.0 or earlier to {version}, you must first upgrade your {stack} and {agent}s to 7.17 (refer to {fleet-guide}/upgrade-elastic-agent.html[Upgrade Fleet-managed Elastic Agents]). This enables you to use the {kibana-ref}/upgrade-assistant.html[Upgrade Assistant] to prepare for the upgrade. Before you upgrade, you must resolve all critical issues identified by the Upgrade Assistant. Afterwards, you can <<upgrade-7.17-8x, upgrade to 8.x>>. 

Initially, {agent}s will be version 7.17. This is fine because {elastic-sec} 8.x supports the last minor release in 7.x (7.17) and any subsequent {elastic-endpoint} versions in 8.x. After the {stack} upgrade, you can decide whether to upgrade {agent}s to 8.x, which is recommended to ensure you get the latest features.

NOTE: You do not need to shut down your {agent}s or endpoints to upgrade the {stack}.
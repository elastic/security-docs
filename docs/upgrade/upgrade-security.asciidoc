[[upgrade-intro]]

= Upgrade {elastic-sec} to {version}

Before you upgrade {elastic-sec}, take the necessary <<preventing-migration-failures, preparation steps>>, which will vary depending on what version you are upgrading to:

* <<upgrade-8.x, Upgrade from an earlier 8.x version>>
* <<upgrade-7.17-8x, Upgrade from 7.17 to an 8.x version>>
* <<upgrade-7.16-8.x, Upgrade from 7.16 or earlier to an 8.x version>>

Rolling upgrades are unsupported in {elastic-sec}, which runs within the {kib} application. To upgrade, you must shut down all {kib} instances, install the new software, and restart {kib}.
Upgrading while older {kib} instances are running can cause data loss or upgrade failures.

[WARNING]
====
When required, {kib} automatically migrates {kibana-ref}/saved-object-migrations.html[saved objects].
In case of an upgrade failure, you can roll back to an
earlier version of {kib}. To roll back, you **must** have a
{ref}/snapshot-restore.html[backup snapshot] that includes the `kibana` feature
state. By default, snapshots include the `kibana` feature state.
====

[float]
=== Upgrading multiple {kib} instances
When upgrading several {kib} instances connected to the same {es} cluster,
ensure that all outdated instances are shut down before starting the upgrade.

Rolling upgrades are unsupported in {kib}. However, when outdated instances are shut down, you can start all upgraded instances in parallel,
which allows all instances to participate in the upgrade migration in parallel.

For large deployments with more than 10 {kib} instances and more than 10,000 saved objects,
you can reduce the upgrade downtime by bringing up a single {kib} instance and waiting for it to
complete the upgrade migration before bringing up the remaining instances.

IMPORTANT: You can upgrade to pre-release versions for testing,
but upgrading from a pre-release to the Generally Available version is unsupported.
You should use pre-release versions only for testing in a temporary environment.

[float]
=== Support for Elastic prebuilt detection rule automatic updates
<<update-prebuilt-rules,Automatic updates of Elastic prebuilt detection rules>> are supported for the current {elastic-sec} version and the latest three previous minor releases. For example, if you’re upgrading to {elastic-sec} 8.10, you’ll be able to use the Rules UI to update your prebuilt rules until {elastic-sec} 8.14 is released. After that point, you can still manually download and install updated prebuilt rules, but you must upgrade to the latest {elastic-sec} version to receive automatic updates.

[float]
[[preventing-migration-failures]]
=== Preparing for migration

Take these extra steps to ensure you are ready for migration.

[float]
==== Ensure your {es} cluster is healthy
Problems with your {es} cluster can prevent {kib} upgrades from succeeding.

During the upgrade process, {kib} creates new indices into which updated documents are written. If a cluster is approaching the low watermark, there's a high risk of {kib} not being able to create these. Reading, transforming, and writing updated documents can be memory intensive, using more available heap than during routine operation. You must ensure that enough heap is available to prevent requests from timing out or throwing errors from circuit breaker exceptions. You should also ensure that all shards are replicated and assigned.

A healthy cluster has:

 * Enough free disk space, at least twice the amount of storage taken up by the `.kibana` and `.kibana_task_manager` indices
 * Sufficient heap size
 * A "green" cluster status

[float]
==== Ensure that all {kib} instances are the same
When you perform an upgrade migration of different {kib} versions, the migration can fail.
Ensure that all {kib} instances are running the same version, configuration, and plugins.

[float]
==== Back up your data

Be sure to have a {ref}/snapshot-restore.html[snapshot] of all your data before migrating, so that if something goes wrong during migration, you can restore from the snapshot and try again.

Review the {kibana-ref}/resolve-migrations-failures.html[common causes of {kib} upgrade failures] and how to prevent them.


[float]
[[upgrade-8.x]]
== Upgrade from an earlier 8.x version 

. Review the breaking changes for each product you use and make the necessary changes so your code is compatible with {version}.

** {apm-guide-ref}/apm-breaking.html[APM {version} breaking changes]
** {beats-ref}/breaking-changes.html[Beats {version} breaking changes]
** {ref}/breaking-changes.html[{es} {version} breaking changes]
** {security-guide}/release-notes.html[{elastic-sec} {version} breaking changes]
** {kibana-ref}/release-notes.html[{kib} {version} breaking changes]
** {logstash-ref}/breaking-changes.html[{ls} {version} breaking changes]
+
. If you use any {es} plugins, ensure each plugin has a version compatible with {es} version {version}.

. Test the upgrade in an isolated environment before upgrading your production
cluster.

. Ensure you have a current snapshot before you start the upgrade.
+
IMPORTANT: You cannot downgrade {es} nodes after upgrading. 
If you cannot complete the upgrade process, 
you will need to restore from the snapshot.

. If you use a separate {ref}/monitoring-production.html[monitoring cluster], you should upgrade the monitoring cluster before the production cluster. Generally, the monitoring cluster and the clusters being monitored should be running the same {stack} version. A monitoring cluster cannot monitor production clusters running newer stack versions. If necessary, the monitoring cluster can monitor production clusters running the latest release of the previous major version.

[float]
[[upgrade-notes-8.8]]
=== Considerations when upgrading to 8.8

After you upgrade to 8.8 or later, frequency settings for <<rule-notifications,rule actions>> created in 8.7 or earlier are automatically moved from the rule level to the action level. The action schedules remain the same and will continue to run on their previously specified frequency (`On each rule execution`, `Hourly`, `Daily`, or `Weekly`). 

[float]
[[upgrade-7.16-8.x]]
== Upgrade from 7.16 or earlier to an 8.x version

To upgrade from 7.16.0 or earlier to {version}, you must first upgrade your {stack} and {agent}s to 7.17 (refer to {fleet-guide}/upgrade-elastic-agent.html[Upgrade Fleet-managed Elastic Agents]). This enables you to use the {kibana-ref}/upgrade-assistant.html[Upgrade Assistant] to prepare for the upgrade. Before you upgrade, you must resolve all critical issues identified by the Upgrade Assistant. Afterwards, you can <<upgrade-7.17-8x, upgrade to 8.x>>. 

Initially, {agent}s will be version 7.17. This is fine because {elastic-sec} 8.x supports the last minor release in 7.x (7.17) and any subsequent {elastic-endpoint} versions in 8.x. After the {stack} upgrade, you can decide whether to upgrade {agent}s to 8.x, which is recommended to ensure you get the latest features.

NOTE: You do not need to shut down your {agent}s or endpoints to upgrade the {stack}.

include::upgrade-7.17-8.x.asciidoc[]
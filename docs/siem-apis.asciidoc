[role="xpack"]
[[security-apis]]
= Elastic Security APIs


You can use these APIs to interface with {elastic-sec} features:

NOTE: Console supports sending requests to {kib} APIs. Prepend any {kib} API endpoint with `kbn:` and send the request via Console. For example:
`GET kbn:/api/index_management/indices`

* <<rule-api-overview>>: Manage detection rules and alerts
* <<exceptions-api-overview>>: Create and manage rule exceptions
* <<lists-api-overview>>: Create source event value lists for use with rule exceptions
* <<timeline-api-overview>>: Import and export timelines
* <<cases-api-overview>>: Open and manage cases
* <<assistant-api-overview>>: Interact with and manage Elastic AI Assistant
* <<asset-criticality-api-overview>>: Create and manage asset criticality records

Additionally, the {kib} <<actions-api-overview, Actions API>> is partially
documented to enable opening and updating cases in external ticketing systems.
For more information on {kib} Actions, see
{kibana-ref}/alerting-getting-started.html[Alerting and Actions] and
https://github.com/elastic/kibana/tree/master/x-pack/plugins/actions[action plugins].

[float]
=== API URLs

For calls to the `Default` {kib} space, API endpoints are as follows:

`<kibana host>:<port>/api/<endpoint>`

Where:

* `<kibana host>` is the host name of your {kib} instance.
* `<port>` is port number of your {kib} instance.
* `<endpoint>` is the API endpoint, such as `detection_engine/rules` or
`cases/configure`.

If you are making calls to a {kib} space *other than* the `Default` space, the
space identifier is part of the endpoint's URL:

`<kibana host>:<port>/s/<space URL>/api/<endpoint>`

Where `<space URL>` is the URL identifier for the {kib} space.

NOTE: You can find space URL identifiers on
{kibana-ref}/xpack-spaces.html[*Edit space*] pages (Management -> Spaces ->
<space name>) or by calling
{kibana-ref}/spaces-api-get-all.html[`GET /api/spaces/space`].

[float]
=== Authentication

The {elastic-sec} APIs support key- and token-based authentication.

[float]
==== Key-based authentication

To use key-based authentication, create an {kibana-ref}/api-keys.html[API key], then specify the key in the header of your API calls.

[float]
==== Token-based authentication

For token-based authentication, use the same username and password that you use to log in to the {kib} UI. In a given HTTP tool, and when available, you can select to use its **Basic Authentication** option, which is where the username and password are stored in order to be passed as part of the call.

[float]
=== API calls

All calls to APIs are stateless. Each call must include all the information
{elastic-sec} needs to perform the request.

Requests must contain these headers:

* `kbn-xsrf: <value>`, where `<value>` can be any alphanumeric string (for
example, `kbn-xsrf: kibana`)
* `Content-Type: application/json` (when the request contains a JSON payload)

For example, the following call uses the Detections API to retrieve the first
20 detection rules from the {kib} `siem` space:

[source,js]
--------------------------------------------------
curl -X GET "<kibana host>:<port>/s/siem/api/detection_engine/rules/_find"
-H 'kbn-xsrf: kibana' -u <username>:<password>
--------------------------------------------------

NOTE: In dev mode, the Kibana server runs behind a proxy which adds a random
path component to its URL.
{kibana-ref}/development-basepath.html[Considerations for basePath] describes
how to work with and disable the random path component.

include::detections/api/det-api-index.asciidoc[]

include::detections/api/exceptions-api-index.asciidoc[]

include::detections/api/lists-api-index.asciidoc[]

include::detections/api/signals-migration-api.asciidoc[]

include::events/api/timeline-api-index.asciidoc[]

include::cases/api/cases-api/cases-api-index.asciidoc[]

include::cases/api/actions-api/cases-actions-api-index.asciidoc[]

include::management/api/management-api-index.asciidoc[]

include::AI-for-security/api/ai-for-security-index.asciidoc[]

include::advanced-entity-analytics/api/asset-criticality-api-index.asciidoc[]

NOTE: For the {fleet} APIs, see the
{fleet-guide}/fleet-api-docs.html[Fleet API Documentation].

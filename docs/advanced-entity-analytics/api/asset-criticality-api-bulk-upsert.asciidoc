[[asset-criticality-api-bulk-upsert]]
=== Bulk Upsert Asset Criticality Record

Create or update multiple Asset Criticality Records.

==== Request URL

`POST <kibana host>:<port>/api/asset_criticality/bulk`

==== Request body

A JSON object defining the Asset Criticality Records.

[width="100%",options="header"]
|==============================================
|Name |Type |Description |Required
|`records` |Array |Array of records, cannot be longer than 1000 records.
|Yes
|`records[].id_field` |String |Which field contains the entity ID, must be either `user.name` or `host.name`.
|Yes
|`records[].id_value` |String |The ID of the entity contained in the specified ID field.
|Yes
|`records[].criticality_level` |String |The assigned criticality level, must be one of:

* `low_impact`
* `medium_impact`
* `high_impact`
* `extreme_impact`

For example, you can assign Extreme impact to business-critical entities, or Low impact to entities that pose minimal risk to your security posture.
|Yes
|==============================================

===== Example requests

[source,console]
--------------------------------------------------
POST /api/asset_criticality/bulk
{
    "records": [
        {
            "id_field": "host.name",
            "id_value": "my_host",
            "criticality_level": "medium_impact"
        },
        {
            "id_field": "host.name",
            "id_value": "my_other_host",
            "criticality_level": "high_impact"
        }
    ]
}

--------------------------------------------------

==== Response code

`200`::
    Indicates a successful call.

==== Example response

Successful response

[source,json]
--------------------------------------------------
{
    "errors": [],
    "stats": {
        "successful": 2,
        "failed": 0,
        "total": 2
    }
}
--------------------------------------------------
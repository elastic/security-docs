[[actions-api-overview]]
[role="xpack"]
== Actions API (for pushing cases to external systems)

You can push {es-sec} cases to these third-party systems:

* {sn}
* {jira} (including Jira Service Desk)
* {ibm-r}

NOTE: The {kib} Console supports only Elasticsearch APIs. Console doesn't allow interactions with {kib} APIs. You must use `curl` or another HTTP tool instead. For more information, refer to https://www.elastic.co/guide/en/kibana/current/console-kibana.html[Console].

To push cases, you need to create a connector using the {kib} Actions API,
which stores the information required to interface with the external system.

{es-sec} uses these external APIs to send cases:

* {sn}: https://developer.servicenow.com/dev.do#!/reference/api/quebec/rest/c_TableAPI[Table API]
* {jira}: https://developer.atlassian.com/cloud/jira/platform/rest/v2/[REST API v2]
* {ibm-r}: https://developer.ibm.com/security/resilient/rest/[Resilient REST API]
* {swimlane}: https://swimlane.com/knowledge-center/docs/developer-guide/rest-api/[Swimlane REST API]

To send cases to an external system and keep the {es-sec-ui} updated:

. <<register-connector>>: Create the connector (Actions API).
. <<cases-api-create>>: Create a case with the connector from the previous step.
. <<cases-api-push>>: Push the case to the external system.

[[register-connector]]
=== Create connector

Creates a connector, which can then be used to open and update cases in external
systems. Note that data from mapped case fields can be pushed to external systems but cannot be pulled in.

NOTE: The {kib} Console supports only Elasticsearch APIs. Console doesn't allow interactions with {kib} APIs. You must use `curl` or another HTTP tool instead. For more information, refer to https://www.elastic.co/guide/en/kibana/current/console-kibana.html[Console].

==== Request URL

`POST <kibana host>:<port>/api/actions/connector`

==== Request body

A JSON object with these fields:

[width="100%",options="header"]
|==============================================
|Name |Type |Description |Required

|`connector_type_id` |String a|Must be one of these:

* `.servicenow`: Send cases to {sn-itsm}
* `.servicenow-sir`: Send cases to {sn-sir}
* `.jira`: Send cases to {jira}
* `.resilient` Send cases to {ibm-r}
* `.swimlane` Send cases to {swimlane}
|Yes
|`config` |<<config-schema, config>> |Object containing the action's
configuration. |Yes
|`secrets` |Object a|Object containing the third-party account information used
to create and update incidents.

For {sn-itsm} and {sn-sir} connectors:

* `username` (string): The account username.
* `password` (string): The account password.

For {jira} connectors:

* `email` (string): The account email.
* `apiToken` (string): {jira} API authentication token.

For {ibm-r} connectors:

* `apiKeyId` (string): The authentication key ID.
* `apiKeySecret` (string): The authentication key secret.

For {swimlane} connectors:

* `apiToken` (string): {swimlane} API authentication token.

|Yes

|`name` |String |The connector's name. |Yes
|==============================================

[[config-schema]]
*`config` schema*

[width="100%",options="header"]
|==============================================
|Name |Type |Description |Required

|`apiUrl` |String |URL of the third-party instance. |Yes
|`appId` |String |{swimlane} application ID. |For {swimlane} connectors, yes. or other
connectors, no.
|`connectorType` |String a|The type of the connector.

Must be one of these:

* `all`
* `alerts`
* `cases`

|For {swimlane} connectors, yes. For other
connectors, no.
|`mappings` |Object a| The field mapping. 

Must be:

* `alertIdConfig` (Object): Mapping for the alert ID.
* `caseIdConfig` (Object): Mapping for the case ID.
* `caseNameConfig` (Object): Mapping for the case name.
* `commentsConfig` (Object): Mapping for the case comments.
* `ruleNameConfig` (Object): Mapping for the name of the alert's rule.
* `severityConfig` (Object): Mapping for the severity.
* `descriptionConfig` (Object): Mapping for the case description.

The object of each attribute in the `mappings` must be:

* `id` (string): The id of the field in {swimlane}.
* `key` (string): The key of the field in {swimlane}.
* `name` (string): The name of the field in {swimlane}.
* `fieldType` (Object): The type of the field in {swimlane}.

|For {swimlane} connectors, yes. or other
connectors, no.
|`projectKey` |String |{jira} project key. |For {jira} connectors, yes. For other
connectors, no.
|`orgId` |String |{ibm-r} organization ID. |For {ibm-r} connectors, yes. For
other connectors, no.
|==============================================

===== Example requests

Creates a {sn-itsm} connector:

[source,sh]
--------------------------------------------------
POST api/actions/connector
{
  "connector_type_id": ".servicenow",
  "config": {
    "apiUrl": "https://dev87359.service-now.com",
  },
  "secrets": {
    "username": "admin",
    "password": "securePassword123!"
  },
  "name": "ServiceNow ITSM"
}
--------------------------------------------------

Creates a {sn-sir} connector:

[source,sh]
--------------------------------------------------
POST api/actions/connector
{
  "connector_type_id": ".servicenow-sir",
  "config": {
    "apiUrl": "https://dev87359.service-now.com",
  },
  "secrets": {
    "username": "admin",
    "password": "securePassword123!"
  },
  "name": "ServiceNow SecOps"
}
--------------------------------------------------

Creates a {jira} connector:

[source,sh]
--------------------------------------------------
POST api/actions/connector
{
  "connector_type_id": ".jira",
  "config": {
    "apiUrl": "https://hms.atlassian.net",
    "projectKey": "HMS"
  },
  "secrets": {
    "email": "admin@hms.gov.co.uk",
    "apiToken": "2REegzCVGoMJaHafJou83372"
  },
  "name": "Jira"
}
--------------------------------------------------
// KIBANA

Creates an {ibm-r} connector:

[source,sh]
--------------------------------------------------
POST api/actions/connector
{
  "connector_type_id": ".resilient",
  "config": {
    "apiUrl": "https://ibm-resilient.siem.estc.dev",
    "orgId": "201"
  },
  "secrets": {
    "apiKeyId": "2ad2bbd3-7cd2-3096-9619-de13c5ab70ca",
    "apiKeySecret": "Hzol67ZoeATAR-8pQxSp3q_NPTDtWU6_QNBoCSCA-ic"
  },
  "name": "IBM"
}
--------------------------------------------------
// KIBANA

Creates a {swimlane} connector:

[source,sh]
--------------------------------------------------
POST api/actions/connector
{
   "name":"Swimlane",
   "config":{
      "connectorType":"all",
      "mappings":{
         "ruleNameConfig":{
            "id":"b6fst",
            "name":"Alert Name",
            "key":"alert-name",
            "fieldType":"text"
         },
         "alertIdConfig":{
            "id":"bpvow",
            "name":"Alert ID",
            "key":"alert-id",
            "fieldType":"text"
         },
         "caseIdConfig":{
            "id":"be1mi",
            "name":"Case ID",
            "key":"case-id",
            "fieldType":"text"
         },
         "caseNameConfig":{
            "id":"bnxnr",
            "name":"Case Name",
            "key":"case-name",
            "fieldType":"text"
         },
         "commentsConfig":{
            "id":"bu18d",
            "name":"Comments",
            "key":"comments",
            "fieldType":"comments"
         },
         "severityConfig":{
            "id":"b71ik",
            "name":"severity",
            "key":"severity",
            "fieldType":"text"
         },
         "descriptionConfig":{
            "id":"b5zrn",
            "name":"Description",
            "key":"description",
            "fieldType":"text"
         }
      },
      "appId":"myAppID",
      "apiUrl":"https://myswimlaneinstance.com"
   },
   "secrets":{
      "apiToken":"secureToken"
   }
}
--------------------------------------------------
// KIBANA

===== Response code

`200`::
   Indicates a successful call.

==== Response payload

A JSON object with a connector `id` that is required to push cases to {sn}.

===== Example response

{sn} connector:

[source,json]
--------------------------------------------------
{
  "id": "f07a60c7-a340-4cb1-93b8-1f5e35dc56b1",
  "connector_type_id": ".servicenow",
  "name": "SN API 2",
  "config": {
    "apiUrl": "https://dev185413.service-now.com",
  },
  "isPreconfigured": false
}
--------------------------------------------------

[[update-connector]]
=== Update connector

Updates a connector.

NOTE: The {kib} Console supports only Elasticsearch APIs. Console doesn't allow interactions with {kib} APIs. You must use `curl` or another HTTP tool instead. For more information, refer to https://www.elastic.co/guide/en/kibana/current/console-kibana.html[Console].

==== Request URL

`PUT <kibana host>:<port>/api/actions/connector/<connector ID>`

===== URL parts

The URL must include the `connector ID` of the connector you are updating.
Call <<cases-api-find-connectors>> to retrieve connector IDs.

==== Request body

A JSON object with the fields you want to update:

[width="100%",options="header"]
|==============================================
|Name |Type |Description |Required

|`config` |<<config-update-schema, config>> |Object containing the action's
configuration. |Yes
|`secrets` |Object a|Object containing the third-party account information used
to create and update incidents.

For {sn} connectors:

* `username` (string): The account username.
* `password` (string): The account password.

For {jira} connectors:

* `email` (string): The account email.
* `apiToken` (string): {jira} API authentication token.

For {ibm-r} connectors:

* `apiKeyId` (string): The authentication key ID.
* `apiKeySecret` (string): The authentication key secret.

For {swimlane} connectors:

* `apiToken` (string): {swimlane} API authentication token.

|Yes

|`name` |String |The connector's name. |Yes
|==============================================

[[config-update-schema]]
*`config` schema*

[width="100%",options="header"]
|==============================================
|Name |Type |Description |Required

|`apiUrl` |String |URL of the third-party instance. |Yes
|`connectorType` |String a|The type of the connector.

Must be one of these:

* `all`
* `alerts`
* `cases`

|For {swimlane} connectors, yes. For other
connectors, no.
|`mappings` |Object a| The field mapping. 

Must be:

* `alertIdConfig` (Object): Mapping for the alert ID.
* `caseIdConfig` (Object): Mapping for the case ID.
* `caseNameConfig` (Object): Mapping for the case name.
* `commentsConfig` (Object): Mapping for the case comments.
* `ruleNameConfig` (Object): Mapping for the name of the alert's rule.
* `severityConfig` (Object): Mapping for the severity.
* `descriptionConfig` (Object): Mapping for the case description.

The object of each attribute in the `mappings` must be:

* `id` (string): The id of the field in {swimlane}.
* `key` (string): The key of the field in {swimlane}.
* `name` (string): The name of the field in {swimlane}.
* `fieldType` (Object): The type of the field in {swimlane}.

|For {swimlane} connectors, yes. or other
connectors, no.
|`projectKey` |String |{jira} project key. |For {jira} connectors, yes. For other
connectors, no.
|`orgId` |String |{ibm-r} organization ID. |For {ibm-r} connectors, yes. For
other connectors, no.
|==============================================

===== Example request

Updates the `description` field mapping of connector ID
`61787f53-4eee-4741-8df6-8fe84fa616f7`:

[source,sh]
--------------------------------------------------
PUT api/actions/connector/61787f53-4eee-4741-8df6-8fe84fa616f7
{
  "config": {
    "apiUrl": "https://dev357417.service-now.com",
        },
  "name": "SN API",
  "secrets": {
    "password": "stongpassword123!",
    "username": "admin"
  }
}
--------------------------------------------------
// KIBANA

==== Response code

`200`::
   Indicates a successful call.

==== Response payload

The updated JSON connector object.

===== Example response

[source,json]
--------------------------------------------------
{
  "id": "61787f53-4eee-4741-8df6-8fe84fa616f7",
  "connector_type_id": ".servicenow",
  "name": "ServiceNow",
  "config": {
    "apiUrl": "https://dev78437.service-now.com",
  }
}
--------------------------------------------------

[[cases-actions-api-execute]]
=== Create or update an external incident

Creates a new or updates an existing external incident from a {es-sec} case.

NOTE: The {kib} Console supports only Elasticsearch APIs. Console doesn't allow interactions with {kib} APIs. You must use `curl` or another HTTP tool instead. For more information, refer to https://www.elastic.co/guide/en/kibana/current/console-kibana.html[Console].

NOTE: You can only send cases to external systems after you have
<<register-connector, created>> a connector.

==== Request URL

`POST <kibana host>:<port>/api/actions/connector/<connector ID>/_execute`

===== URL parts

The URL must include the connector ID. Call <<cases-get-connector>> to retrieve
the currently used connector ID, or <<cases-api-find-connectors>> to retrieve
all connectors IDs.

==== Request body

A JSON object with these fields:

[width="100%",options="header"]
|==============================================
|Name |Type |Description |Required

|`params` |<<case-conf-params, params>> |Contains the {es-sec} case details
for which you are opening or updating an external incident. |Yes
|==============================================

[[case-conf-params]]
*`params` schema*

|==============================================
|Name |Type |Description |Required


|`subAction` |String|The action to be performed. When opening or updating cases
in external systems, must be: `pushToService`. |Yes
|`subActionParams` |<<subaction-params, subActionParams>> |Case details to send
to external systems. |Yes
|==============================================

[[subaction-params]]
*`subActionParams` schema*
|==============================================
|Name |Type |Description |Required
|`incident` |<<subaction-params-incident, incident>> |The incident. |Yes
|`comments` |Object[] a|Array containing case comments:

* `commentId` (string, required): The comment ID.
* `comment` (string, required): The comment text.

|No
|==============================================

[[subaction-params-incident]]
*`incident` schema*
|==============================================
|Name |Type |Description |Required
|`alertId` |String |The alert ID. |No. Valid only for {swimlane} connectors.
|`caseId` |String |The case ID. |No. Valid only for {swimlane} connectors.
|`caseName` |String |The case name. |No. Valid only for {swimlane} connectors.
|`dest_ip` |String |A comma separated list of destination IPs. |No. Valid only for {sn-sir} connectors.
|`description` |String |The case description. |No
|`externalId` |String |The external incident/issue ID. |No, only required when updating an existing issue.
|`impact` |String |{sn-itsm} incident impact. |No. Valid only for {sn-itsm} connectors.
|`incidentTypes` |String |{ibm-r} incident types. |No. Valid only for {ibm-r} connectors.
|`issueType` |String |{jira} issue type. |No. Valid only for {jira} connectors.
|`labels` |String |{jira} issue labels. |No. Valid only for {jira} connectors.
|`malware_hash` |String |A comma separated list of malware hashes. |No. Valid only for {sn-sir} connectors.
|`malware_url` |String |A comma separated list of malware URLs. |No. Valid only for {sn-sir} connectors.
|`name` |String |{ibm-r} organization incident name. |Yes. Valid only for {ibm-r} connectors.
|`parent` |String |{jira} issue parent. |No. Valid only for {jira} connectors.
|`priority` |String |{jira} issue priority. |No. Valid only for {jira} and {sn-sir} connectors.
|`ruleName` |String |The name of the alert's rule. |No. Valid only for {swimlane} connectors.
|`severity` |String |{sn-itsm} incident severity. |No. Valid only for {sn-itsm} and {swimlane} connectors.
|`severityCode` |String |{ibm-r} incident severity code. |No. Valid only for {ibm-r} connectors.
|`short_description` |String |{sn} incident name. |Yes. Valid only for {sn} connectors.
|`source_ip` |String |A comma separated list of source IPs. |No. Valid only for {sn-sir} connectors.
|`summary` |String |{jira} issue title. |Yes. Valid only for {jira} connectors.
|`urgency` |String |{sn-itsm} incident urgency. |No. Valid only for {sn-itsm} connectors.
|==============================================

NOTE: When updating an existing case, call <<cases-api-get-case>> or
<<cases-api-find-cases>> to retrieve the `externalId`. In the case JSON
object, the `externalId` value is stored in the `external_service` field.

===== Example requests

Creates a new {sn} incident:

[source,sh]
--------------------------------------------------
POST api/actions/connector/7349772f-421a-4de3-b8bb-2d9b22ccee30/_execute
{
  "params": {
    "subAction": "pushToService",
    "subActionParams": {
      "comments": [
        {
          "commentId": "dda30310-732a-11ea-a0b2-c51ea50a58e2",
          "comment": "That is nothing - Ethan Hunt answered a targeted social media campaign promoting phishy pension schemes to IMF operatives.",
        }
      ],
      "description": "James Bond clicked on a highly suspicious email banner advertising cheap holidays for underpaid civil servants. Operation bubblegum is active.",
      "short_description": "This case will self-destruct in 5 seconds"
    }
  }
}
--------------------------------------------------
// KIBANA

Updates an existing {sn} incident:

[source,sh]
--------------------------------------------------
POST api/actions/connector/7349772f-421a-4de3-b8bb-2d9b22ccee30/_execute
{
  "params": {
    "subAction": "pushToService",
    "subActionParams": {
      "comments": [
        {
          "commentId": "8ef6d660-732f-11ea-a0b2-c51ea50a58e2",
          "comment": "That is nothing - Ethan Hunt answered a targeted social media campaign promoting phishy pension schemes to IMF operatives.",
        }
      ],
      "externalId": "cc6ef44bdb7300106ba884da0b9619cf",
      "short_description": "This case will self-destruct in 5 seconds"
    }
  }
}
--------------------------------------------------
// KIBANA

==== Response code

`200`::
   Indicates a successful call.

==== Response payload

A JSON object with the ID and the URL of the external incident.

===== Example response

[source,json]
--------------------------------------------------
{
  "status": "ok",
  "actionId": "61787f53-4eee-4741-8df6-8fe84fa616f7",
  "data": {
    "title": "INC0010012",
    "id": "62dc3c8bdb7300106ba884da0b9619ea",
    "pushedDate": "2020-03-31T09:01:33.000Z",
    "url": "https://dev78437.service-now.com/nav_to.do?uri=incident.do?sys_id=62dc3c8bdb7300106ba884da0b9619ea",
    "comments": [
      {
        "commentId": "dda30310-732a-11ea-a0b2-c51ea50a58e2",
        "pushedDate": "2020-03-31T09:01:34.000Z"
      }
    ]
  }
}
--------------------------------------------------

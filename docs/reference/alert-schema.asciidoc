[[alert-schema]]

== Alert schema

{elastic-sec} stores alerts that have been generated by detection rules in hidden {es} indices. In 8.x versions, the index pattern is `.alerts-security.alerts-<space-id->`. In 7.x versions, the index pattern was `.siem-signals-<space-id>`, and some field names were different. The following table includes the current names and cross-references the legacy field names.

NOTE: Users are advised NOT to use the `_source` field in alert documents, but rather to use the `fields` option in the search API to programmatically obtain the list of fields used in these documents. Learn more about {ref}/search-fields.html[retrieving selected fields from a search].

NOTE: The non-ECS fields listed below are beta and subject to change.

|==============================================
|7.x signal field |8.x alert field | Description

|{ecs-ref}/ecs-base.html#field-timestamp[`@timestamp`] |`@timestamp` | ECS field, represents the time when the alert was created or most recently updated.
|{ecs-ref}/ecs-base.html#field-message[`message`]| `message` | ECS field copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-base.html#field-tags[`tags`]|`tags`| ECS field copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-base.html#field-labels[`labels`]| `labels`| ECS field copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-ecs.html#field-ecs-version[`ecs.version`] |`ecs.version`| ECS mapping version of the alert.
|{ecs-ref}/ecs-allowed-values-event-kind.html[`event.kind`]|`event.kind`| ECS field, always `signal` for alert documents.
|{ecs-ref}/ecs-allowed-values-event-category.html[`event.category`]| `event.category`| ECS field, copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-allowed-values-event-type.html[`event.type`]|`event.type`| ECS field, copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-allowed-values-event-outcome.html[`event.outcome`]|`event.outcome` | ECS field, copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-agent.html[`agent.*`]| `agent.*`| ECS `agent.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-client.html[`client.*`] | `client.*` | ECS `client.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-cloud.html[`cloud.*`] |`cloud.*` | ECS `cloud.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-container.html[`container.*`] | `container.*` | ECS `container.* fields` copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-data_stream.html[`data_stream.*`] |`data_stream.*`| ECS `data_stream.*` fields copied from the source document, if present, for custom query and indicator match rules.

NOTE: These fields may be constant keywords in the source documents, but are copied into the alert documents as keywords.

|{ecs-ref}/ecs-destination.html[`destination.*`] | `destination.*`|ECS `destination.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-dll.html[`dll.*`] |`dll.*`| ECS `dll.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-dns.html[`dns.*`] | dns.* | ECS `dns.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-error.html[`error.*`]| `error.*` |ECS `error.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-event.html[`event.*`] | `event.*`| ECS `event.*` fields copied from the source document, if present, for custom query and indicator match rules.

NOTE: categorization fields above (`event.kind`, `event.category`, `event.type`, `event.outcome`) are listed separately above.

|{ecs-ref}/ecs-file.html[`file.*`]| `file.*` | ECS `file.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-group.html[`group.*`] | `group.*` | ECS `group.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-host.html[`host.*`] | `host.*` |ECS `host.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-http.html[`http.*`]| `http.*`| ECS `http.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-log.html[`log.*`]| `log.*` | ECS `log.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-network.html[`network.*`]|`network.*`| ECS `network.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-observer.html[`observer.*`]|`observer.*`|ECS `observer.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-orchestrator.html[`orchestrator.*`] | `orchestrator.*`| ECS `orchestrator.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-organization.html[`organization.*`]| `organization.*`| ECS `organization.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-package.html[`package.*`]|`package.*`|ECS `package.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-process.html[`process.*`]| `process.*`| ECS `process.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-registry.html[`registry.*`] | `registry.*`| ECS `registry.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-related.html[`related.*`] |`related.*` |ECS `related.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-rule.html[`rule.*`]| `rule.*`| ECS `rule.*` fields copied from the source document, if present, for custom query and indicator match rules.

NOTE: These fields are not related to the detection rule that generated the alert.

|{ecs-ref}/ecs-server.html[`server.*`] |`server.*`|ECS `server.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-service.html[`service.*`]|`service.*`|ECS `service.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-source.html[`source.*`] | `source.*` | ECS `source.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-tracing.html#field-span-id[`span.*`] |`span.*`|ECS `span.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-threat.html[`threat.*`]| `threat.*`|ECS `threat.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-tls.html[`tls.*`] | `tls.*`| ECS `tls.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-tracing.html[`trace.*`]| `trace.*`|ECS `trace.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-tracing.html#field-transaction-id[`transaction.*`]|`transaction.*`| ECS `transaction.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-url.html[`url.*`]|`url.*`|ECS `url.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-user.html[`user.*`]|`user.*`| ECS `user.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-user_agent.html[`user_agent.*`]|`user_agent.*`| ECS `user_agent.*` fields copied from the source document, if present, for custom query and indicator match rules.
|{ecs-ref}/ecs-vulnerability.html[`vulnerability.*`]|`vulnerability.*`|ECS `vulnerability.*` fields copied from the source document, if present, for custom query and indicator match rules.
|`signal.ancestors.*`|`kibana.alert.ancestors.*`| Type: object
|`signal.depth`| `kibana.alert.depth`| Type: Long
| N/A | `kibana.alert.new_terms` | The value of the new term that generated this alert.

Type: keyword
|`signal.original_event.*` | `kibana.alert.original_event.*`| Type: object
|`signal.original_time`|`kibana.alert.original_time`| The value copied from the source event (`@timestamp`).

Type: date
|`signal.reason` |`kibana.alert.reason`| Type: keyword
|`signal.rule.author` |`kibana.alert.rule.author`| The value of the `author` who created the rule. Refer to <<rule-ui-advanced-params, configure advanced rule settings>>.

Type: keyword
|`signal.rule.building_block_type`|`kibana.alert.building_block_type`|The value of `building_block_type` from the rule that generated this alert. Refer to <<rule-ui-advanced-params, configure advanced rule settings>>.

Type: keyword
|`signal.rule.created_at`|`kibana.alert.rule.created_at`| The value of `created.at` from the rule that generated this alert.

Type: date
|`signal.rule.created_by` |`kibana.alert.rule.created_by`| Type: keyword
|`signal.rule.description` |`kibana.alert.rule.description`| Type: keyword
|`signal.rule.enabled` |`kibana.alert.rule.enabled`| Type: keyword
|`signal.rule.false_positives`| `kibana.alert.rule.false_positives`| Type: keyword
|`signal.rule.from` |`kibana.alert.rule.from`| Type: keyword
|`signal.rule.id` |`kibana.alert.rule.uuid` | Type: keyword
|`signal.rule.immutable` |`kibana.alert.rule.immutable`| Type: keyword
|`signal.rule.interval` |`kibana.alert.rule.interval`| Type: keyword
|`signal.rule.license` |`kibana.alert.rule.license`| Type: keyword
|`signal.rule.max_signals`|`kibana.alert.rule.max_signals`| Type: long
|`signal.rule.name` |`kibana.alert.rule.name` | Type: keyword
|`signal.rule.note` |`kibana.alert.rule.note`| Type: keyword
|`signal.rule.references` |`kibana.alert.rule.references`| Type: keyword
|`signal.rule.risk_score` |`kibana.alert.risk_score`| Type: float
|`signal.rule.rule_id` |`kibana.alert.rule.rule_id`| Type: keyword
|`signal.rule.rule_name_override`|`kibana.alert.rule.rule_name_override`| Type: keyword
|`signal.rule.severity` |`kibana.alert.severity`| Alert severity, populated by the `rule_type` at alert creation. Must have a value of `low`, `medium`, `high`, `critical`.

Type: keyword
|`signal.rule.tags` |`kibana.alert.rule.tags`| Type: keyword
|`signal.rule.threat.*` |`kibana.alert.rule.threat.*`| Type: object
|`signal.rule.timeline_id` |`kibana.alert.rule.timeline_id`| Type: keyword
|`signal.rule.timeline_title`|`kibana.alert.rule.timeline_title`| Type: keyword
|`signal.rule.timestamp_override`|`kibana.alert.rule.timestamp_override`| Type: keyword
|`signal.rule.to` |`kibana.alert.rule.to`| Type: keyword
|`signal.rule.type` |`kibana.alert.rule.type`| Type: keyword
|`signal.rule.updated_at` |`kibana.alert.rule.updated_at`| Type: date
|`signal.rule.updated_by` |`kibana.alert.rule.updated_by`| Type: keyword
|`signal.rule.version` |`kibana.alert.rule.version`| Type: keyword
|`signal.status` |`kibana.alert.workflow_status`| Type: keyword
|`signal.threshold_result.*`|`kibana.alert.threshold_result.*`| Type: object
|`signal.group.id` |`kibana.alert.group.id`| Type: keyword
|`signal.group.index` |`kibana.alert.group.index`| Type: integer
|`signal.rule.index` |`kibana.alert.rule.parameters.index`| Type: flattened
|`signal.rule.language`|`kibana.alert.rule.parameters.language`| Type: flattened
|`signal.rule.query` |`kibana.alert.rule.parameters.query`| Type: flattened
|`signal.rule.risk_score_mapping`|`kibana.alert.rule.parameters.risk_score_mapping`| Type: flattened
|`signal.rule.saved_id`| `kibana.alert.rule.parameters.saved_id`| Type: flattened
|`signal.rule.severity_mapping`|`kibana.alert.rule.parameters.severity_mapping`| Type: flattened
|`signal.rule.threat_filters`|`kibana.alert.rule.parameters.threat_filters`| Type: flattened
|`signal.rule.threat_index`|`kibana.alert.rule.parameters.threat_index`| Names of the indicator indices.

Type: flattened
|`signal.rule.threat_indicator_path`|`kibana.alert.rule.parameters.threat_indicator_path`| Type: flattened
|`signal.rule.threat_language`|`kibana.alert.rule.parameters.threat_language`| Type: flattened
|`signal.rule.threat_mapping.*`|`kibana.alert.rule.parameters.threat_mapping.*`|Controls which fields will be compared in the indicator and source documents.

Type: flattened
|`signal.rule.threat_query`|`kibana.alert.rule.parameters.threat_query`| Type: flattened
|`signal.rule.threshold.*`|`kibana.alert.rule.parameters.threshold.*` | Type: flattened
|N/A | `kibana.space_ids` | Type: keyword
|N/A | `kibana.alert.rule.consumer` | Type: keyword
|N/A | `kibana.alert.status`| Type: keyword
|N/A | `kibana.alert.rule.category` | Type: keyword
|N/A | `kibana.alert.rule.execution.uuid` | Type: keyword
|N/A | `kibana.alert.rule.producer` | Type: keyword
|N/A | `kibana.alert.rule.rule_type_id` | Type: keyword

|==============================================

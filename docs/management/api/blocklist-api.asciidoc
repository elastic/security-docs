:endpoint-artifact-list-id:                     endpoint_blocklists
:endpoint-artifact-name:                        blocklist entries
:endpoint-artifact-name-single:                 blocklist entry
:endpoint-artifact-name-sentence-start:         Blocklist entries
:endpoint-artifact-name-single-sentence-start:  Blocklist entry
:endpoint-artifact-api-doc-name:                blocklist
:endpoint-artifact-page-title:                  Blocklist
[[blocklist-api]]
=== {endpoint-artifact-page-title}

Create, retrieve, update, and delete endpoint <<blocklist>> entries with the <<exceptions-api-overview>>. Endpoint {endpoint-artifact-name} are managed using a static container id (`list_id`) of `pass:a[{endpoint-artifact-list-id}]`, which must be created prior to adding the {endpoint-artifact-name}. To use these APIs, you must have privileges to manage endpoints. Refer to <<admin-page-ov,Endpoints>> for more information.




==== Create {endpoint-artifact-name} container

`POST <kibana host>:<port>/api/exception_lists`

===== Request body

A JSON object containing the fields listed below. The request must have the following:

include::_exceptions-api-reusable-content.asciidoc[tags=endpoint-exceptions-request-payload-list-id-and-namespace-requirements]
- The `type` value must be `endpoint`.

include::_exceptions-api-reusable-content.asciidoc[tags=create-exception-container-request-body]

===== Example request

[source,console,subs="attributes"]
--------------------------------------------------
POST api/exception_lists
{
  "description": "Endpoint Security Blocklists List",
  "name": "Endpoint Security Blocklists List",
  "list_id": "{endpoint-artifact-list-id}",
  "type": "endpoint_blocklists",
  "namespace_type": "agnostic"
}
--------------------------------------------------
// KIBANA

===== Response code

`200`::
    Indicates a successful call.

===== Response payload

[source,json,subs="attributes"]
--------------------------------------------------
{
 "_version": "WzcsMV0=",
  "created_at": "2020-07-13T09:33:46.187Z",
  "created_by": "elastic",
  "description": "Endpoint Security Blocklists List",
  "id": "f320c070-c4eb-11ea-80bb-11861bae2798",
  "immutable": false,
  "list_id": "{endpoint-artifact-list-id}",
  "name": "Endpoint Security Blocklists List",
  "namespace_type": "agnostic",
  "os_types": [],
  "tags": [],
  "tie_breaker_id": "2c08d5a5-2ecc-4d5a-acfb-0a367f25b3f3",
  "type": "endpoint_blocklists",
  "updated_at": "2020-07-13T09:33:46.359Z",
  "updated_by": "elastic",
  "version": 1
}
--------------------------------------------------

[#create-{endpoint-artifact-api-doc-name}-item-api]
==== Create {endpoint-artifact-name-single}

`POST <kibana host>:<port>/api/exception_lists/items`

===== Request body

A JSON object containing the fields listed below. The request must have the following:

include::_exceptions-api-reusable-content.asciidoc[tags=endpoint-exceptions-request-payload-requirements]

include::_exceptions-api-reusable-content.asciidoc[tag=create-exception-item-request-body]


====== Example request


[source,console,subs="attributes"]
--------------------------------------------------
POST api/exception_lists/items

{
    "comments": [],
    "description": "some description about this entry",
    "entries": [
        {
            "field": "file.path",
            "value": [
                "c:/path/to/file.exe",
                "c:/path/to/file2.exe"
            ],
            "type": "match_any",
            "operator": "included"
        }
    ],
    "list_id": "{endpoint-artifact-list-id}",
    "name": "Some name for this item",
    "namespace_type": "agnostic",
    "os_types": [
        "windows"
    ],
    "tags": [
        "policy:all"
    ],
    "type": "simple"
}
--------------------------------------------------
// KIBANA


===== Response code

`200`::
    Indicates a successful call.

===== Response payload

[source,json,subs="attributes"]
--------------------------------------------------
{
    "_version": "WzEzNjIsMV0=",
    "comments": [],
    "created_at": "2022-03-01T16:24:39.471Z",
    "created_by": "elastic",
    "description": "some description about this entry",
    "entries": [
        {
            "field": "file.path",
            "value": [
                "c:/path/to/file.exe",
                "c:/path/to/file2.exe"
            ],
            "type": "match_any",
            "operator": "included"
        }
    ],
    "id": "17ba1bf0-997c-11ec-b212-9f4ed8b5942f",
    "item_id": "29f480e6-6d34-4bc7-9038-f809f11cb679",
    "list_id": "{endpoint-artifact-list-id}",
    "name": "Some name for this item",
    "namespace_type": "agnostic",
    "os_types": [
        "windows"
    ],
    "tags": [
        "policy:all"
    ],
    "tie_breaker_id": "c6bedf22-2292-4d4a-8eb8-e29a50b5b519",
    "type": "simple",
    "updated_at": "2022-03-01T16:24:39.475Z",
    "updated_by": "elastic"
}
--------------------------------------------------



[#update-{endpoint-artifact-api-doc-name}-item-api]
==== Update {endpoint-artifact-name-single}

`PUT <kibana host>:<port>/api/exception_lists/items`

===== Request body

A JSON object containing the fields listed below. The request must have the following:

include::_exceptions-api-reusable-content.asciidoc[tags=endpoint-exceptions-request-payload-requirements]

include::_exceptions-api-reusable-content.asciidoc[tags=update-exception-item-request-body]


====== Example request

Updates the `entries`:

[source,console]
--------------------------------------------------
PUT api/exception_lists/items
{
    "_version": "WzEzNjIsMV0=",
    "name": "ABC blocklist",
    "description": "These applications must be blocked",
    "entries": [
        {
            "field": "file.path",
            "value": [
                "c:/path/to/file.exe",
                "c:/path/to/file2.exe"
                "c:/path/to/file3.exe"
            ],
            "type": "match_any",
            "operator": "included"
        }
    ],
    "os_types": [
        "windows"
    ],
    "tags": [
        "policy:all"
    ],
    "id": "17ba1bf0-997c-11ec-b212-9f4ed8b5942f",
    "comments": [],
    "item_id": "29f480e6-6d34-4bc7-9038-f809f11cb679",
    "namespace_type": "agnostic",
    "type": "simple"
}
--------------------------------------------------
// KIBANA


===== Response code

`200`::
    Indicates a successful call.

===== Response payload

[source,json,subs="attributes"]
--------------------------------------------------
{
    "_version": "WzEzNjcsMV0=",
    "comments": [],
    "created_at": "2022-03-01T16:24:39.471Z",
    "created_by": "elastic",
    "description": "These applications must be blocked",
    "entries": [
        {
            "field": "file.path",
            "value": [
                "c:/path/to/file.exe",
                "c:/path/to/file2.exe"
                "c:/path/to/file3.exe"
            ],
            "type": "match_any",
            "operator": "included"
        }
    ],
    "id": "17ba1bf0-997c-11ec-b212-9f4ed8b5942f",
    "item_id": "29f480e6-6d34-4bc7-9038-f809f11cb679",
    "list_id": "{endpoint-artifact-list-id}",
    "name": "ABC blocklist",
    "namespace_type": "agnostic",
    "os_types": [
        "windows"
    ],
    "tags": [
        "policy:all"
    ],
    "tie_breaker_id": "c6bedf22-2292-4d4a-8eb8-e29a50b5b519",
    "type": "simple",
    "updated_at": "2022-03-01T17:21:07.273Z",
    "updated_by": "elastic"
}
--------------------------------------------------


==== Delete {endpoint-artifact-name-single}

`DELETE <kibana host>:<port>/api/exception_lists/items`

===== URL query parameters

include::_exceptions-api-reusable-content.asciidoc[tags=api-id-or-itemid-query-params]

====== Example request

Deletes the {endpoint-artifact-name-single} with `item_id` of `29f480e6-6d34-4bc7-9038-f809f11cb679`:

[source,console]
--------------------------------------------------
DELETE api/exception_lists/items?item_id=29f480e6-6d34-4bc7-9038-f809f11cb679&namespace_type=agnostic
--------------------------------------------------
// KIBANA


===== Response code

`200`::
    Indicates a successful call.

===== Response payload

The item that was deleted:

[source,json,subs="attributes"]
--------------------------------------------------
{
  "_version": "WzEzNjcsMV0=",
  "comments": [],
  "created_at": "2022-03-01T16:24:39.471Z",
  "created_by": "elastic",
  "description": "These applications must be blocked",
  "entries": [
     {
            "field": "file.path",
            "value": [
                "c:/path/to/file.exe",
                "c:/path/to/file2.exe"
                "c:/path/to/file3.exe"
            ],
            "type": "match_any",
            "operator": "included"
      }
  ],
  "id": "17ba1bf0-997c-11ec-b212-9f4ed8b5942f",
  "item_id": "29f480e6-6d34-4bc7-9038-f809f11cb679",
  "list_id": "{endpoint-artifact-list-id}",
  "name": "ABC blocklist",
  "namespace_type": "agnostic",
  "os_types": [
    "windows"
  ],
  "tags": [
    "policy:all"
  ],
  "tie_breaker_id": "c6bedf22-2292-4d4a-8eb8-e29a50b5b519",
  "type": "simple",
  "updated_at": "2022-03-01T17:21:07.273Z",
  "updated_by": "elastic"
}
--------------------------------------------------


==== Retrieve single {endpoint-artifact-name-single}

`GET <kibana host>:<port>/api/exception_lists/items`


===== URL query parameters

include::_exceptions-api-reusable-content.asciidoc[tags=api-id-or-itemid-query-params]


====== Example request

[source,console]
--------------------------------------------------
GET api/exception_lists/items?item_id=29f480e6-6d34-4bc7-9038-f809f11cb679&namespace_type=agnostic
--------------------------------------------------
// KIBANA


===== Response code

`200`::
    Indicates a successful call.

===== Response payload

[source,json,subs="attributes"]
--------------------------------------------------
{
  "_version": "WzEzNjcsMV0=",
  "comments": [],
  "created_at": "2022-03-01T16:24:39.471Z",
  "created_by": "elastic",
  "description": "These applications must be blocked",
  "entries": [
    {
            "field": "file.path",
            "value": [
                "c:/path/to/file.exe",
                "c:/path/to/file2.exe"
                "c:/path/to/file3.exe"
            ],
            "type": "match_any",
            "operator": "included"
      }
  ],
  "id": "17ba1bf0-997c-11ec-b212-9f4ed8b5942f",
  "item_id": "29f480e6-6d34-4bc7-9038-f809f11cb679",
  "list_id": "{endpoint-artifact-list-id}",
  "name": "ABC blocklist",
  "namespace_type": "agnostic",
  "os_types": [
    "windows"
  ],
  "tags": [
    "policy:all"
  ],
  "tie_breaker_id": "c6bedf22-2292-4d4a-8eb8-e29a50b5b519",
  "type": "simple",
  "updated_at": "2022-03-01T17:21:07.273Z",
  "updated_by": "elastic"
}
--------------------------------------------------


==== Find {endpoint-artifact-name}

`GET <kibana host>:<port>/api/exception_lists/items/_find`

===== URL query parameters

include::_exceptions-api-reusable-content.asciidoc[tags=find-exception-items-query-params]


====== Example request

[source,console,subs="attributes"]
--------------------------------------------------
GET api/exception_lists/items/_find?page=1&per_page=10&sort_field=name&sort_order=asc&list_id={endpoint-artifact-list-id}&namespace_type=agnostic
--------------------------------------------------
// KIBANA

===== Response code

`200`::
    Indicates a successful call.

===== Response payload


[source,json,subs="attributes"]
--------------------------------------------------
{
  "data": [
    {
      "_version": "WzEzNjcsMV0=",
      "comments": [],
      "created_at": "2022-03-01T16:24:39.471Z",
      "created_by": "elastic",
      "description": "These applications must be blocked",
      "entries": [
        {
            "field": "file.path",
            "value": [
                "c:/path/to/file.exe",
                "c:/path/to/file2.exe"
                "c:/path/to/file3.exe"
            ],
            "type": "match_any",
            "operator": "included"
        }
      ],
      "id": "17ba1bf0-997c-11ec-b212-9f4ed8b5942f",
      "item_id": "29f480e6-6d34-4bc7-9038-f809f11cb679",
      "list_id": "{endpoint-artifact-list-id}",
      "name": "ABC blocklist",
      "namespace_type": "agnostic",
      "os_types": [
        "windows"
      ],
      "tags": [
        "policy:all"
      ],
      "tie_breaker_id": "c6bedf22-2292-4d4a-8eb8-e29a50b5b519",
      "type": "simple",
      "updated_at": "2022-03-01T17:21:07.273Z",
      "updated_by": "elastic"
    }
  ],
  "page": 1,
  "per_page": 10,
  "total": 1
}
--------------------------------------------------

include::_exceptions-api-reusable-content.asciidoc[tag=endpoint-exceptions-value-types-info-section]

[#exception-{endpoint-artifact-api-doc-name}-item-entry-schema]
===== `entry` object schema

At least 3 conditions can be defined on an endpoint blocklist entry. Duplicates are not allowed. The following entries are supported by {endpoint-artifact-name}:

====== File hashes

File hashes are supported by all xref:exception-{endpoint-artifact-api-doc-name}-item-os-types[OS types]. A file hash entry has the following structure:

* `field` : The `file.hash.md5`, `file.hash.sha1` or `file.hash.sha256` values are supported.
* `value` : An array of hash values associated with the `field`.
* `type` : Must be `match_any`.
* `operator` : Must be `included`.

[source,json]
-----------------------------
{
    "field": "file.hash.md5",
    "value": [
        "741462ab431a22233C787BAAB9B653C7"
    ],
    "type": "match_any",
    "operator": "included"
}
-----------------------------


====== Process file path

Process file paths are supported by all xref:exception-{endpoint-artifact-api-doc-name}-item-os-types[OS types]. A file path entry has the following structure:

* `field` : Must be `file.path`.
* `value` : An array of file paths to match on.
* `type` : Must be `match_any`.
* `operator` : Must be `included`.

[source,json]
-----------------------------
{
  "field": "file.path",
  "value": "c:/path/to/file.exe",
  "type": "match_any",
  "operator": "included"
}
-----------------------------


====== Process signature

Process signature is supported for Windows xref:exception-{endpoint-artifact-api-doc-name}-item-os-types[OS type] only. A signature entry has the following structure:

* `field` : Must be set to `process.Ext.code_signature`.
* `type` : Must be set to `nested`.
* `entries`: An array with 1 `entry` item.
* `entries[0]` : The entry defining the signature to be matched upon:
** `field`: Must be set to `subject_name`.
** `value` : An array of signature names to match on.
** `type` : Must be set to `match_any`.
** `operator` : Must be set to `included`.

[source,json]
-----------------------------
{
    "field": "file.Ext.code_signature",
    "entries": [
        {
            "field": "subject_name",
            "value": [
                "test1",
                "test2"
            ],
            "type": "match_any",
            "operator": "included"
        }
    ],
    "type": "nested"
}
-----------------------------


====== Examples for a Windows {endpoint-artifact-name-single}.

Only one entry of `file.path` or `file.Ext.code_signature` is allowed per blocklist item. The `file.hash.*` entry is also supported and accepts up to three values. The allowed hash types for `file.hash.*` are `md5`, `sha1`, or `sha256`.

[source,json]
-----------------------------
[
 {
      "field": "file.hash.md5",
      "value": [
          "741462ab431a22233C787BAAB9B653C7"
      ],
      "type": "match_any",
      "operator": "included"
  },
  {
      "field": "file.hash.sha1",
      "value": [
          "aedb279e378BED6C2DB3C9DC9e12ba635e0b391c"
      ],
      "type": "match_any",
      "operator": "included"
  },
  {
      "field": "file.hash.sha256",
      "value": [
          "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3"
      ],
      "type": "match_any",
      "operator": "included"
  }
]
-----------------------------

[source,json]
-----------------------------
[
 {
    "field": "file.Ext.code_signature",
    "entries": [
        {
            "field": "subject_name",
            "value": [
                "test1",
                "test2"
            ],
            "type": "match_any",
            "operator": "included"
        }
    ],
    "type": "nested"
 }
]
-----------------------------

[source,json]
-----------------------------
[
  {
    "field": "file.path",
    "value": "c:/path/to/file.exe",
    "type": "match_any",
    "operator": "included"
  }
]
-----------------------------

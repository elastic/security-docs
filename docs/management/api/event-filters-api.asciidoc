:endpoint-artifact-list-id:     endpoint_events
:endpoint-artifact-name:        event filters
:endpoint-artifact-name-single: event filter
:endpoint-artifact-name-sentence-start: Event filters
:endpoint-artifact-name-single-sentence-start: Event filter
:endpoint-artifact-api-doc-name: event-filter

[[event-filters-api]]
=== {endpoint-artifact-name-sentence-start}

Create, retrieve, update and delete endpoint <<event-filters>> via API. {endpoint-artifact-name-sentence-start} are managed via the <<exceptions-api-overview>> using a static container id (`list_id`) of `pass:a[{endpoint-artifact-list-id}]`, which must be created prior to adding an event filter. To access these APIs, users must have permission to manage endpoints.



==== Create {endpoint-artifact-name} container

`POST <kibana host>:<port>/api/exception_lists`

===== Request body

A JSON object containing the fields listed below. The request must have the following:

include::_exceptions-api-reusable-content.asciidoc[tags=endpoint-exceptions-request-payload-list-id-and-namespace-requirements]
- The `type` value must be `endpoint`.

include::_exceptions-api-reusable-content.asciidoc[tags=create-exception-container-request-body]

===== Example request

[source,console,subs="attributes"]
--------------------------------------------------
POST api/exception_lists
{
  "description": "{elastic-defend} Event Filters List",
  "name": "{elastic-defend} Event Filters List",
  "list_id": "{endpoint-artifact-list-id}",
  "type": "endpoint",
  "namespace_type": "agnostic"
}
--------------------------------------------------
// KIBANA

===== Response code

`200`::
    Indicates a successful call.

===== Response payload

[source,json,subs="attributes"]
--------------------------------------------------
{
  "_tags": [],
  "created_at": "2020-07-13T09:33:46.187Z",
  "created_by": "user",
  "description": "{elastic-defend} Event Filters List",
  "name": "{elastic-defend} Event Filters List",
  "list_id": "{endpoint-artifact-list-id}",
  "type": "endpoint",
  "namespace_type": "agnostic",
  "id": "f320c070-c4eb-11ea-80bb-11861bae2798",
  "tags": [],
  "tie_breaker_id": "2c08d5a5-2ecc-4d5a-acfb-0a367f25b3f3",
  "updated_at": "2020-07-13T09:33:46.359Z",
  "updated_by": "user"
}
--------------------------------------------------

[#create-{endpoint-artifact-api-doc-name}-item-api]
==== Create {endpoint-artifact-name-single}

`POST <kibana host>:<port>/api/exception_lists/items`

===== Request body

A JSON object containing the fields listed below. The request must have the following:

include::_exceptions-api-reusable-content.asciidoc[tags=endpoint-exceptions-request-payload-requirements]

include::_exceptions-api-reusable-content.asciidoc[tag=create-exception-item-request-body]


====== Example request


[source,console,subs="attributes"]
--------------------------------------------------
POST api/exception_lists/items
{
    "comments": [
      {
        "comment": "a new comment about this entry"
      }
    ],
    "description": "some description about this entry",
    "entries": [
      {
        "field": "process.executable",
        "operator": "included",
        "type": "match",
        "value": "c:\\applications\\elastic\\foo.exe"
      }
    ],
    "list_id": "{endpoint-artifact-list-id}",
    "name": "Some name for this item",
    "namespace_type": "agnostic",
    "os_types": [
        "windows"
    ],
    "tags": [
        "policy:all"
    ],
    "type": "simple"
}
--------------------------------------------------
// KIBANA


===== Response code

`200`::
    Indicates a successful call.

===== Response payload

[source,json,subs="attributes"]
--------------------------------------------------
{
    "_version": "WzEzNjIsMV0=",
    "comments": [
      {
        "comment": "a comment",
        "created_at": "2022-03-01T16:24:39.471Z",
        "created_by": "user",
        "id": "c585d25c-6cb1-43a4-bcfc-919a270c99c1"
      }
    ],
    "created_at": "2022-03-01T16:24:39.471Z",
    "created_by": "user",
    "description": "some description about this entry",
    "entries": [
        {
          "field": "process.executable",
          "operator": "included",
          "type": "match",
          "value": "c:\\applications\\elastic\\foo.exe"
        }
    ],
    "id": "17ba1bf0-997c-11ec-b212-9f4ed8b5942f",
    "item_id": "29f480e6-6d34-4bc7-9038-f809f11cb679",
    "list_id": "{endpoint-artifact-list-id}",
    "name": "Some name for this item",
    "namespace_type": "agnostic",
    "os_types": [
        "windows"
    ],
    "tags": [
        "policy:all"
    ],
    "tie_breaker_id": "c6bedf22-2292-4d4a-8eb8-e29a50b5b519",
    "type": "simple",
    "updated_at": "2022-03-01T16:24:39.475Z",
    "updated_by": "user"
}
--------------------------------------------------



[#update-{endpoint-artifact-api-doc-name}-item-api]
==== Update {endpoint-artifact-name-single}

`PUT <kibana host>:<port>/api/exception_lists/items`

===== Request body

A JSON object containing the fields listed below. The request must have the following:

include::_exceptions-api-reusable-content.asciidoc[tags=endpoint-exceptions-request-payload-requirements]

include::_exceptions-api-reusable-content.asciidoc[tags=update-exception-item-request-body]


====== Example request

Updates the `entries`:

[source,console]
--------------------------------------------------
PUT api/exception_lists/items
{
    "_version": "WzEzNjIsMV0=",
    "name": "Some name for this item updated",
    "description": "some description about this entry updated",
    "entries": [
         {
          "field": "process.executable",
          "operator": "included",
          "type": "match",
          "value": "c:\\applications\\elastic\\fooV2.exe"
        }
    ],
    "os_types": [
        "windows"
    ],
    "tags": [
        "policy:all"
    ],
    "id": "17ba1bf0-997c-11ec-b212-9f4ed8b5942f",
    "comments": [
      {
        "comment": "a comment",
        "created_at": "2022-03-01T16:24:39.471Z",
        "created_by": "user",
        "id": "c585d25c-6cb1-43a4-bcfc-919a270c99c1"
      },
      {
        "comment": "new comment"
      }
    ],
    "item_id": "29f480e6-6d34-4bc7-9038-f809f11cb679",
    "namespace_type": "agnostic",
    "type": "simple"
}
--------------------------------------------------
// KIBANA


===== Response code

`200`::
    Indicates a successful call.

===== Response payload

[source,json,subs="attributes"]
--------------------------------------------------
{
    "_version": "WzEzNjcsMV0=",
    "comments": [
      {
        "comment": "a comment",
        "created_at": "2022-03-01T16:24:39.471Z",
        "created_by": "user",
        "id": "c585d25c-6cb1-43a4-bcfc-919a270c99c1"
      },
      {
        "comment": "new comment",
        "created_at": "2022-03-02T11:22:19.471Z",
        "created_by": "user",
        "id": "cd85d25c-6cb1-83a4-bcfc-915a270c19c1"
      }
    ]
    "created_at": "2022-03-01T16:24:39.471Z",
    "created_by": "user",
    "description": "some description about this entry updated",
    "entries": [
        {
          "field": "process.executable",
          "operator": "included",
          "type": "match",
          "value": "c:\\applications\\elastic\\fooV2.exe"
        }
    ],
    "id": "17ba1bf0-997c-11ec-b212-9f4ed8b5942f",
    "item_id": "29f480e6-6d34-4bc7-9038-f809f11cb679",
    "list_id": "{endpoint-artifact-list-id}",
    "name": "Some name for this item updated",
    "namespace_type": "agnostic",
    "os_types": [
        "windows"
    ],
    "tags": [
        "policy:all"
    ],
    "tie_breaker_id": "c6bedf22-2292-4d4a-8eb8-e29a50b5b519",
    "type": "simple",
    "updated_at": "2022-03-01T17:21:07.273Z",
    "updated_by": "user"
}
--------------------------------------------------


==== Delete {endpoint-artifact-name-single}

`DELETE <kibana host>:<port>/api/exception_lists/items`

===== URL query parameters

include::_exceptions-api-reusable-content.asciidoc[tags=api-id-or-itemid-query-params]


====== Example request

Deletes a {endpoint-artifact-name-single} with `item_id` of `29f480e6-6d34-4bc7-9038-f809f11cb679`:

[source,console]
--------------------------------------------------
DELETE api/exception_lists/items?item_id=29f480e6-6d34-4bc7-9038-f809f11cb679&namespace_type=agnostic
--------------------------------------------------
// KIBANA


===== Response code

`200`::
    Indicates a successful call.

===== Response payload

The item that was deleted:

[source,json,subs="attributes"]
--------------------------------------------------
{
    "_version": "WzEzNjcsMV0=",
    "comments": [
      {
        "comment": "a comment",
        "created_at": "2022-03-01T16:24:39.471Z",
        "created_by": "user",
        "id": "c585d25c-6cb1-43a4-bcfc-919a270c99c1"
      },
      {
        "comment": "new comment",
        "created_at": "2022-03-02T11:22:19.471Z",
        "created_by": "user",
        "id": "cd85d25c-6cb1-83a4-bcfc-915a270c19c1"
      }
    ]
    "created_at": "2022-03-01T16:24:39.471Z",
    "created_by": "user",
    "description": "some description about this entry updated",
    "entries": [
        {
          "field": "process.executable",
          "operator": "included",
          "type": "match",
          "value": "c:\\applications\\elastic\\fooV2.exe"
        }
    ],
    "id": "17ba1bf0-997c-11ec-b212-9f4ed8b5942f",
    "item_id": "29f480e6-6d34-4bc7-9038-f809f11cb679",
    "list_id": "{endpoint-artifact-list-id}",
    "name": "Some name for this item updated",
    "namespace_type": "agnostic",
    "os_types": [
        "windows"
    ],
    "tags": [
        "policy:all"
    ],
    "tie_breaker_id": "c6bedf22-2292-4d4a-8eb8-e29a50b5b519",
    "type": "simple",
    "updated_at": "2022-03-01T17:21:07.273Z",
    "updated_by": "user"
}
--------------------------------------------------


==== Retrieve single {endpoint-artifact-name-single}

`GET <kibana host>:<port>/api/exception_lists/items`


===== URL query parameters

include::_exceptions-api-reusable-content.asciidoc[tags=api-id-or-itemid-query-params]


====== Example request

[source,console]
--------------------------------------------------
GET api/exception_lists/items?item_id=29f480e6-6d34-4bc7-9038-f809f11cb679&namespace_type=agnostic
--------------------------------------------------
// KIBANA


===== Response code

`200`::
    Indicates a successful call.

===== Response payload

[source,json,subs="attributes"]
--------------------------------------------------
{
    "_version": "WzEzNjcsMV0=",
    "comments": [
      {
        "comment": "a comment",
        "created_at": "2022-03-01T16:24:39.471Z",
        "created_by": "user",
        "id": "c585d25c-6cb1-43a4-bcfc-919a270c99c1"
      },
      {
        "comment": "new comment",
        "created_at": "2022-03-02T11:22:19.471Z",
        "created_by": "user",
        "id": "cd85d25c-6cb1-83a4-bcfc-915a270c19c1"
      }
    ]
    "created_at": "2022-03-01T16:24:39.471Z",
    "created_by": "user",
    "description": "some description about this entry updated",
    "entries": [
        {
          "field": "process.executable",
          "operator": "included",
          "type": "match",
          "value": "c:\\applications\\elastic\\fooV2.exe"
        }
    ],
    "id": "17ba1bf0-997c-11ec-b212-9f4ed8b5942f",
    "item_id": "29f480e6-6d34-4bc7-9038-f809f11cb679",
    "list_id": "{endpoint-artifact-list-id}",
    "name": "Some name for this item updated",
    "namespace_type": "agnostic",
    "os_types": [
        "windows"
    ],
    "tags": [
        "policy:all"
    ],
    "tie_breaker_id": "c6bedf22-2292-4d4a-8eb8-e29a50b5b519",
    "type": "simple",
    "updated_at": "2022-03-01T17:21:07.273Z",
    "updated_by": "user"
}
--------------------------------------------------


==== Find {endpoint-artifact-name}

`GET <kibana host>:<port>/api/exception_lists/items/_find`

===== URL query parameters

include::_exceptions-api-reusable-content.asciidoc[tags=find-exception-items-query-params]


====== Example request

[source,console,subs="attributes"]
--------------------------------------------------
GET api/exception_lists/items/_find?page=1&per_page=10&sort_field=name&sort_order=asc&list_id={endpoint-artifact-list-id}&namespace_type=agnostic
--------------------------------------------------
// KIBANA

===== Response code

`200`::
    Indicates a successful call.

===== Response payload


[source,json,subs="attributes"]
--------------------------------------------------
{
  "data": [
    {
    "_version": "WzEzNjcsMV0=",
    "comments": [
      {
        "comment": "a comment",
        "created_at": "2022-03-01T16:24:39.471Z",
        "created_by": "user",
        "id": "c585d25c-6cb1-43a4-bcfc-919a270c99c1"
      },
      {
        "comment": "new comment",
        "created_at": "2022-03-02T11:22:19.471Z",
        "created_by": "user",
        "id": "cd85d25c-6cb1-83a4-bcfc-915a270c19c1"
      }
    ]
    "created_at": "2022-03-01T16:24:39.471Z",
    "created_by": "user",
    "description": "some description about this entry updated",
    "entries": [
        {
          "field": "process.executable",
          "operator": "included",
          "type": "match",
          "value": "c:\\applications\\elastic\\fooV2.exe"
        }
    ],
    "id": "17ba1bf0-997c-11ec-b212-9f4ed8b5942f",
    "item_id": "29f480e6-6d34-4bc7-9038-f809f11cb679",
    "list_id": "{endpoint-artifact-list-id}",
    "name": "Some name for this item updated",
    "namespace_type": "agnostic",
    "os_types": [
        "windows"
    ],
    "tags": [
        "policy:all"
    ],
    "tie_breaker_id": "c6bedf22-2292-4d4a-8eb8-e29a50b5b519",
    "type": "simple",
    "updated_at": "2022-03-01T17:21:07.273Z",
    "updated_by": "user"
}
  ],
  "page": 1,
  "per_page": 10,
  "total": 1
}
--------------------------------------------------

include::_exceptions-api-reusable-content.asciidoc[tag=endpoint-exceptions-value-types-info-section]

[#exception-{endpoint-artifact-api-doc-name}-item-entry-schema]
===== `entry` object schema

{endpoint-artifact-name-sentence-start} allow for an unlimited number of conditions to be defined. Each {endpoint-artifact-name-single} entry contains an `entry` object that has `type`, `value`, `field` and `operator` keys with values. The following operators are supported in an entry object:

====== Operator `is`

Exactly match with the single given value.

[source,json]
-----------------------------
{
  "field": "process.executable.caseless",
  "value": "c:/path/to/file.exe",
  "type": "match",
  "operator": "included"
}
-----------------------------

====== Operator `is not`

Does not exactly match with the single given value.

[source,json]
-----------------------------
{
  "field": "process.executable.caseless",
  "value": "c:/path/to/file.exe",
  "type": "match",
  "operator": "excluded"
}
-----------------------------

====== Operator `is one of`

Matches exactly with any of the values in the given list of values.

[source,json]
-----------------------------
{
  "field": "process.executable.caseless",
  "value": ["c:/path/to/file.exe", "c:/path/to/file2.exe"],
  "type": "match_any",
  "operator": "included"
}
-----------------------------

====== Operator `is not one of`

Does not exactly match with any of the values in the given list of values.

[source,json]
-----------------------------
{
  "field": "process.executable.caseless",
  "value": ["c:/path/to/file.exe", "c:/path/to/file2.exe"],
  "type": "match_any",
  "operator": "excluded"
}
-----------------------------

====== Nested conditions

In the case of a `nested` entry, the top-level only has `type`, `field`, and an `entries` array that holds a list of `entry` objects:

[source,json]
-----------------------------
{
  "entries": [
    {
      "field": "exists",
      "operator": "included",
      "type": "match",
      "value": "true"
    }
  ],
  "field": "process.Ext.code_signature",
  "type": "nested"
}
-----------------------------

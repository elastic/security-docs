// --------------------------------------------------------------------------------------------------
//  ABOUT:
//  This file contains a set of re-usable content that can be pulled into documentation pages that describe
//  the API usage for endpoint artifacts (ex. Trusted Apps, event filters, etc...).
//
//  In order to use this content, the following must be defined in source document that "include"'s this
//  content:
//
//  ATTRIBUTES:
//  The following attributes are used through out the content to customize the information to the
//  specific artifact type:
//
//  - :endpoint-artifact-list-id:
//      The 'list_id' for the artifact type
//      Example: endpoint_trusted_apps
//  - attribute - :endpoint-artifact-name:
//      The name of the artifact type (usually plural)
//      Example: Trusted Applications
//  - attribute: :endpoint-artifact-name-single:
//      The name of the artifact in singular form
//      Example: Trusted Application
//  - attribute: :endpoint-artifact-name-sentence-start:
//      The name of the artifact type (usually plural) with first letter capitalized
//      Example: Trusted applications
//  - attribute: :endpoint-artifact-name-single-sentence-start:
//      The name of the artifact in singular form with first letter capitalized
//      Example: Trusted application
//  - attribute: :endpoint-artifact-api-doc-name:
//      Hyphenated name for the artifact api doc for section title reference/cross-links
//      Example: trusted-application
//
//  DOCUMENT IDS:
//  The reusable content in this file references the following ids which must exist in the document:
//
//  - [#create-{endpoint-artifact-api-doc-name}-item-api]
//  - [#update-{endpoint-artifact-api-doc-name}-item-api]
//  - [#exception-{endpoint-artifact-api-doc-name}-item-entry-schema]
//
//  Note that the section title uses the attribute :endpoint-artifact-api-doc-name for substitution
// --------------------------------------------------------------------------------------------------

// - - - - - - - - - - - - - - - -
// A general list of payload properties that must be set when using create/update APIs
// - - - - - - - - - - - - - - - -
// tag::endpoint-exceptions-request-payload-requirements[]
// tag::endpoint-exceptions-request-payload-list-id-and-namespace-requirements[]
- The `list_id` value must be `pass:a[{endpoint-artifact-list-id}]`.
- The `namespace_type` value must be `agnostic`.
// end::endpoint-exceptions-request-payload-list-id-and-namespace-requirements[]
- The `type` value must be `simple`.
// end::endpoint-exceptions-request-payload-requirements[]


// tag::create-exception-container-request-body[]
[width="100%",options="header"]
|==============================================
|Name |Type |Description |Required

|`description` |String |Describes the {endpoint-artifact-name} container. |Yes
|`list_id` |String a|Must be set to `pass:a[{endpoint-artifact-list-id}]`. |Yes
|`meta` |Object |Placeholder for metadata about the list container. |No
|`name` |String |The {endpoint-artifact-name} container's name. |Yes
|`namespace_type` |String a|Must be set to `agnostic`. |Yes
|`tags` |String[] |String array containing words and phrases to help categorize the
{endpoint-artifact-name} container. |No
|`type` |String a|Must be set to `endpoint_events`. |Yes

|==============================================
// end::create-exception-container-request-body[]

// tag::create-host-isolation-exception-container-request-body[]
[width="100%",options="header"]
|==============================================
|Name |Type |Description |Required

|`description` |String |Describes the {endpoint-artifact-name} container. |Yes
|`list_id` |String |Must be set to `pass:a[{endpoint-artifact-list-id}]`. |Yes
|`meta` |Object |Placeholder for metadata about the list container. |No
|`name` |String |The {endpoint-artifact-name} container's name. |Yes
|`namespace_type` |String |Must be set to `agnostic`. |Yes
|`tags` |String[] |String array containing words and phrases to help categorize the
{endpoint-artifact-name} container. |No
|`type` |String |Must be set to `endpoint_host_isolation_exceptions`. |Yes

|==============================================
// end::create-host-isolation-exception-container-request-body[]


// tag::create-exception-item-request-body[]
[width="100%",options="header"]
|==============================================
|Name |Type |Description |Required

|`comments` |xref:exception-{endpoint-artifact-api-doc-name}-item-comment-schema[comment][] a|Array of xref:exception-{endpoint-artifact-api-doc-name}-item-comment-schema[`comment`] objects. |No, defaults to empty array.
|`description` |String |Describes the {endpoint-artifact-name-single} item. |Yes
|`entries` |xref:exception-{endpoint-artifact-api-doc-name}-item-entry-schema[entry][] |Array containing the {endpoint-artifact-name-single} query conditions. See xref:exception-{endpoint-artifact-api-doc-name}-item-entry-schema[] for more details. |Yes.
|`list_id` |String a|Must be set to `pass:a[{endpoint-artifact-list-id}]`. |Yes
|`item_id` |String |Unique identifier of the exception item. |No, automatically
created when it is not provided.
|`meta` |Object |Placeholder for metadata about the exception item. |No
|`name` |String |The {endpoint-artifact-name-single} name. |Yes
|`namespace_type` |String a|Must be set to `agnostic` for endpoint artifacts. |Yes
|`os_types` |xref:exception-{endpoint-artifact-api-doc-name}-item-os-types[os_type][] |Use this field to specify the xref:exception-{endpoint-artifact-api-doc-name}-item-os-types[operating system]. Only enter one value.  | Yes
|`tags` |String[] |An array of strings containing words and phrases to help categorize
exception items. Tags can also be used to define the {endpoint-artifact-name-single} as either globally applicable to all policies or assigned to one or more policies (per policy). See xref:exception-{endpoint-artifact-api-doc-name}-item-scope-assignment-tags[] for more details. |No
|`type` |String a|Must be set to `simple`. |Yes

|==============================================
// end::create-exception-item-request-body[]


// tag::update-exception-item-request-body[]
[width="100%",options="header"]
|==============================================
|Name |Type |Description |Required

|`comments` |xref:exception-{endpoint-artifact-api-doc-name}-item-comment-schema[comment][] a|Array of xref:exception-{endpoint-artifact-api-doc-name}-item-comment-schema[`comment`] objects. |No, defaults to empty array.
|`description` |String |Describes the {endpoint-artifact-name-single}. |Yes
|`entries` |xref:exception-{endpoint-artifact-api-doc-name}-item-entry-schema[entry][] |Array containing the {endpoint-artifact-name-single} query conditions. See xref:exception-{endpoint-artifact-api-doc-name}-item-entry-schema[] for more details. |Yes.
|`id` |String |The item's unique identifier. a|Yes, when the item's `item_id` field is not used.
|`item_id` |String a|The `item_id` of the item you are updating. a|Yes, when the item's `id` field is not used.
|`meta` |Object |Placeholder for metadata about the exception item. |No
|`name` |String |The {endpoint-artifact-name-single} name. |Yes
|`namespace_type` a|String a|Must be set to `agnostic`. |Yes
|`os_types` |xref:exception-{endpoint-artifact-api-doc-name}-item-os-types[os_type][] |Array of xref:exception-{endpoint-artifact-api-doc-name}-item-os-types[os_type] values. | Yes
|`tags` |String[] |An array of strings containing words and phrases to help categorize
exception items. Tags can also be used to define the {endpoint-artifact-name-single} as either globally applicable to all policies or assigned to one or more policies (per policy). See xref:exception-{endpoint-artifact-api-doc-name}-item-scope-assignment-tags[] for more details. |No
|`type` |String a|Must be `simple`. |Yes
|`_version` |String a|The version id, normally returned by the API when the item was retrieved. Use it ensure updates are done against the latest version. |No

|==============================================
// end::update-exception-item-request-body[]



// tag::api-id-or-itemid-query-params[]
The URL query must include one of the following:

* `id` - the `id` of the item, or
* `item_id` -  the `item_id` of the item

In addition to the above, `namespace_type` URL query parameter is also required with a value of `agnostic`.
// end::api-id-or-itemid-query-params[]


// tag::find-exception-items-query-params[]
[width="100%",options="header"]
|==============================================
|Name |Type |Description |Required

|`list_id` |String a|Must be set to `pass:a[{endpoint-artifact-list-id}]`. |Yes
|`namespace_type` |String a|Must be set to `agnostic`. |Yes
|`page` |Integer |The page number to return. |No
|`per_page` |Integer |The number of items to return per page. |No
|`sort_field` |String |Determines which field is used to sort the results. |No
|`sort_order` |String a|Determines the sort order, which can be `desc` or `asc`. |No
|`filter` |String |A {kibana-ref}/kuery-query.html[{kib} Query Language (KQL)] string to filter the results down. |No

|==============================================
// end::find-exception-items-query-params[]



// tag::endpoint-exceptions-value-types-info-section[]
==== Value types

The following describes the types that can be defined when using the xref:create-{endpoint-artifact-api-doc-name}-item-api[create] or xref:update-{endpoint-artifact-api-doc-name}-item-api[update] {endpoint-artifact-name} APIs:

[#exception-{endpoint-artifact-api-doc-name}-item-comment-schema]
===== `comment` object schema

Comments are JSON objects containing the following structure:

[source,json]
---------
{
    "comment": "some comment here"
}
---------

When used with the update API, existing comments can be updated by using their associated `id`, while any comment without the `id` attribute will be added as a new comment:

[source,json]
---------
{
    "comment": "some comment here - updated",
    "id": "1078cf59-5893-4143-acf7-40a40af16bee"
}
---------

[#exception-{endpoint-artifact-api-doc-name}-item-os-types]
===== `os_types` values

The following are the valid OS types that can be used when creating {endpoint-artifact-name}:

* `windows`
* `linux`
* `macos`

[#exception-{endpoint-artifact-api-doc-name}-item-scope-assignment-tags]
===== Scope assignment

{endpoint-artifact-name-sentence-start} can be assigned globally across all endpoint policies, or assigned to specific policies. You can assign the {endpoint-artifact-name-single} by defining one or more tags with a prefix of `policy:`. Note that the {endpoint-artifact-name-single} can be either global or per policy, but not *both*. The following tags are available for use in order to control the assignment scope:

* `policy:all` : {endpoint-artifact-name-single-sentence-start} is global to all policies. If used, no other `policy:` tag is allowed.
* `policy:<endpoint-policy-id>` : {endpoint-artifact-name-single-sentence-start} is assigned to a policy. Multiple `per policy` tags can be used to associate the {endpoint-artifact-name-single} to multiple policies.

// end::endpoint-exceptions-value-types-info-section[]


// tag::endpoint-exceptions-request-payload-requirements[]
- the `list_id` value must be `{endpoint-artifact-list-id}`
- the `namespace_type` value must be `agnostic`
- the `type` value must be `endpoint`
// end::endpoint-exceptions-request-payload-requirements[]


// tag::create-exception-container-request-body[]
[width="100%",options="header"]
|==============================================
|Name |Type |Description |Required

|`description` |String |Describes the exception container. |Yes
|`list_id` |String |Unique identifier. |No, automatically created when it is not
provided.
|`meta` |Object |Placeholder for metadata about the list container. |No
|`name` |String |The exception container's name. |Yes
|`namespace_type` |String a|Determines whether the exception container is available in all {kib} spaces or just the space in which it is created, where:

* `single`: Only available in the {kib} space in which it is created.
* `agnostic`: Available in all {kib} spaces.

|No, defaults to `single`.
|`tags` |String[] |String array containing words and phrases to help categorize
exception containers. |No
|`type` |String a|The type of exception, which must be one of these:

* `detection`: Detection rule exception
* `endpoint`: Endpoint alert exception

|Yes

|==============================================
// end::create-exception-container-request-body[]


// tag::create-exception-item-request-body[]
[width="100%",options="header"]
|==============================================
|Name |Type |Description |Required

|`comments` |comments[] a|Array of `comment` fields:

* `comment` (string): Comments about the exception item.

|No, defaults to empty array.

|`description` |String |Describes the exception item. |Yes
|`entries` |<<entries-object-schema, entries[]>> |Array containing the
exception queries. Boolean `AND` logic is used to evaluate the relationship
between array elements. If you want to use `OR` logic, create a separate
exception item. |Yes
|`list_id` |String |ID of the associated <<exceptions-api-create-container, exception container>>. |Yes
|`item_id` |String |Unique identifier of the exception item. |No, automatically
created when it is not provided.
|`meta` |Object |Placeholder for metadata about the exception item. |No
|`name` |String |The exception item's name. |Yes.
|`namespace_type` |String a|Determines whether the exception item is available
in all {kib} spaces or just the space in which it is created, where:

* `single`: Only available in the {kib} space in which it is created.
* `agnostic`: Available in all {kib} spaces.

Must be the same value as its associated exception container.

|No, defaults to `single`.
|`tags` |String[] |String array containing words and phrases to help categorize
exception items. |No
|`type` |String a|Exception query type, must be `simple`. |Yes
|`_tags` |String[] a|For endpoint rules only, defines the OS on which the
exception is implemented. Valid values are:

* `os:windows`: Windows OS
* `os:linux`: Linux OS
* `os:macos`: Mac OS

The array must also include an `endpoint` element (to implement the exception on Linux hosts, use: `["endpoint", "os:linux"]`).

|For endpoint exceptions, yes. For detection exceptions, no.

|==============================================
// end::create-exception-item-request-body[]
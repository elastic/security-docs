[[endpoint-artifacts]]
[chapter]
= Optimize {elastic-defend}

If you encounter problems like incompatibilities with other antivirus software, too many false positive alerts, or excessive storage or CPU usage, you can optimize {elastic-defend} to mitigate these issues.

Endpoint artifacts — such as trusted applications and event filters — and Endpoint exceptions let you modify the behavior and performance of _{elastic-endpoint}_, the component installed on each host that performs {elastic-defend}'s threat monitoring, prevention, and response actions.

The following table explains the differences between several Endpoint artifacts and exceptions, and how to use them:

[cols="2"]
|===

| <<trusted-apps-ov,Trusted application>>
a| *_Prevents {elastic-endpoint} from monitoring a process._* Use to avoid conflicts with other software, usually other antivirus or endpoint security applications.

* Creates intentional blind spots in your security environment — use sparingly!
* Does not monitor the application for threats, and does not create alerts for the application, even if it behaves like malware, ransomware, etc.
* Does not generate events for the application except process events for visualizations.
* May improve performance, since {elastic-endpoint} monitors fewer processes.
* May still generate malicious behavior alerts, if the application's process events indicate malicious behavior.

| <<event-filters,Event filter>>
a| *_Prevents event documents from being written to {es}._* Use to reduce storage usage in {es}.

Does NOT lower CPU usage for {elastic-endpoint}. It still monitors event data for possible threats, but without writing event data to {es}.

| <<blocklist,Blocklist>>
a| *_Prevents known malware from running._* Use to extend {elastic-defend}'s protection against malicious processes.

NOT intended to generically block applications assumed to be benign.

| <<endpoint-rule-exceptions,Endpoint alert exception>>
a| *_Prevents {elastic-endpoint} from generating alerts or stopping processes._* Use to reduce false positive alerts or preventions.

May also improve performance: {elastic-endpoint} checks for exceptions _before_ most other processing, and stops monitoring a process if an exception allows it.

|===
